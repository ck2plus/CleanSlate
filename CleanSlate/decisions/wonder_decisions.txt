decisions = {

	# Wonder Retinue
	recruit_wonder_guard = {
		ai_check_interval = 12

		is_high_prio = yes

		only_independent = yes

		potential = {
			any_realm_wonder_upgrade = {
				has_wonder_upgrade_flag = retinue
				is_active = yes
			}

			NOT = { has_earmarked_regiments = wonder_guard }
		}

		allow = {
			wealth >= 100
		}

		effect = {
			wealth = -100

			random_realm_wonder_upgrade = {
				limit = {
					has_wonder_upgrade_flag = retinue
					is_active = yes
				}

				wonder = { save_event_target_as = the_wonder }
			}

			event_target:the_wonder = {
				show_scope_change = no

				location = {
					show_scope_change = no

					PREVPREV = {
						show_scope_change = no

						spawn_unit = {
							owner = ROOT
							province = PREV
							home = PREV
							earmark = wonder_guard
							attrition = 1.0
							maintenance_multiplier = 0.5

							troops = {
								light_infantry = { 1000 1000 }
								heavy_infantry = { 500 500 }
							}
						}
					}
				}
			}
		}

		ai_will_do = {
			factor = 1

			trigger = {
				OR = {
					is_primary_war_attacker = yes
					is_primary_war_defender = yes
				}
			}
		}
	}

	# Training Academy Hero
	recruit_academy_hero = {
		is_high_prio = yes

		ai = no

		potential = {
			any_realm_wonder_upgrade = {
				has_wonder_upgrade_flag = training_academy
				is_active = yes
			}
		}

		allow = {
			is_inaccessible_trigger = no

			custom_tooltip = {
				text = has_not_recruited_in_5_years_TT

				trigger_if = {
					limit = { has_character_flag = recruited_academy_hero }

					had_character_flag = {
						flag = recruited_academy_hero
						years >= 5
					}
				}
			}
		}

		effect = {
			custom_tooltip = {
				text = gladiator_commander_TT

				set_character_flag = recruited_academy_hero

				spawn_good_commander_effect = yes

				new_character = {
					random_list = {
						20 = { add_artifact = lance_tier_1_new }
						20 = { add_artifact = sword_tier_1_new }
						20 = { add_artifact = scimitar_tier_1_new }
						20 = { add_artifact = axe_tier_1_new }
						20 = { add_artifact = mace_tier_1_new }
					}

					add_trait = gladiator

					random_list = {
						33 = { add_trait = brawny }
						33 = { add_trait = duelist }
						33 = { add_trait = impaler }
					}

					clear_education_trait = yes

					random_list = {
						45 = { add_trait = misguided_warrior }
						40 = { add_trait = tough_soldier }
						10 = { add_trait = skilled_tactician }
						 5 = { add_trait = brilliant_strategist }
					}

					random_list = {
						20 = { add_trait = aggressive_leader }
						20 = { add_trait = defensive_leader }
						20 = { add_trait = direct_leader }
						20 = { add_trait = unyielding_leader }
						20 = { add_trait = flat_terrain_expert }
					}
				}

				character_event = { id = NE.1 }
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	drink_from_fountain_of_youth = {
		ai_check_interval = 6

		is_high_prio = yes

		only_independent = yes

		potential = {
			any_realm_wonder_upgrade = {
				has_wonder_upgrade_flag = fountain_of_youth
				is_active = yes
			}

			NOT = {
				has_game_rule = {
					name = supernatural_events
					value = off
				}
			}
		}

		allow = {
			age >= 18
			is_inaccessible_trigger = no

			custom_tooltip = {
				text = has_not_chugged_in_10_years_TT

				NOT = { has_character_modifier = drank_from_fountain_cooldown }
			}
		}

		effect = {
			hidden_effect = {
				add_character_modifier = {
					name = drank_from_fountain_cooldown
					years = 10
					hidden = yes
				}
			}

			character_event = { id = LT.60201 }
		}

		ai_will_do = {
			factor = 1

			mult_modifier = {
				factor = 0.5 # slow down if you're young
				age < 50
			}
		}
	}

	store_relic_in_wonder = {
		ai_check_interval = 6

		is_high_prio = yes

		only_independent = yes

		potential = {
			any_realm_wonder_upgrade = {
				has_wonder_upgrade_flag = stores_relic
				NOT = { has_wonder_upgrade_flag = is_storing_relic }
				is_active = no
				is_building_wonder_upgrade = no
				wonder = { is_active = yes }
			}

			num_of_artifacts > 0
		}

		allow = {
			is_inaccessible_trigger = no

			custom_tooltip = {
				text = any_artifact_relic_TT

				any_artifact = {
					has_artifact_flag = religious
					is_artifact_active = yes
				}
			}

			NOT = { has_character_flag = taking_relic_decision }
		}

		effect = {
			random_realm_wonder_upgrade = {
				limit = {
					has_wonder_upgrade_flag = stores_relic
					NOT = { has_wonder_upgrade_flag = is_storing_relic }
					is_active = no
					is_building_wonder_upgrade = no
				}

				save_event_target_as = target_upgrade

				wonder = {
					save_event_target_as = target_wonder
				}
			}

			# Select up to 3 random artifacts
			random_artifact = {
				limit = {
					has_artifact_flag = religious
					is_artifact_active = yes
				}

				save_event_target_as = target_artifact_1
			}

			random_artifact = {
				limit = {
					has_artifact_flag = religious
					is_artifact_active = yes
					NOT = { artifact = event_target:target_artifact_1 }
				}

				save_event_target_as = target_artifact_2
			}

			random_artifact = {
				limit = {
					has_artifact_flag = religious
					is_artifact_active = yes

					NOR = {
						artifact = event_target:target_artifact_1
						artifact = event_target:target_artifact_2
					}
				}

				save_event_target_as = target_artifact_3
			}

			custom_tooltip = { text = store_relic_TT }
			set_character_flag = taking_relic_decision
			character_event = { id = LT.20601 } # Choose artifact to store
		}

		ai_will_do = {
			factor = 1
		}
	}

	# TODO: Is this decision functional? Is there anything that adds the wonder upgrades with the repairable flag?
#	repair_wonder_decision = {
#		only_independent = yes
#
#		potential = {
#			any_realm_wonder_upgrade = {
#				has_wonder_upgrade_flag = repairable
#			}
#		}
#
#		allow = {
#			wealth >= 400
#		}
#
#		effect = {
#			wealth = -400
#
#			any_realm_wonder_upgrade = {
#				limit = { has_wonder_upgrade_flag = repairable } # TO DO make this only happen once
#				destroy_wonder_upgrade = yes
#			}
#		}
#
#		ai_will_do = {
#			factor = 10
#		}
#	}
}

targeted_decisions = {

	alcohol_gift_decision = { # Give Alcohol gift
		ai = no

		from_potential = {
			any_realm_wonder_upgrade = {
				has_wonder_upgrade_flag = produces_alcohol
			}
		}

		potential = {
			is_within_diplo_range = FROM
			is_adult = yes
			NOT = { has_character_modifier = recently_recieved_alcohol_gift }
		}

		allow = {
			is_inaccessible_or_incapable_trigger = no

			custom_tooltip = {
				text = not_recently_sent_alcohol_tooltip

				FROM = {
					NOT = { has_character_modifier = recently_sent_alcohol_gift }
				}
			}

			FROM = {
				is_inaccessible_or_incapable_trigger = no
			}
		}

		effect = {
			if = {
				limit = {
					religion_group = muslim

					OR = {
						trait = zealous
						has_job_title = job_spiritual
					}
				}

				opinion = {
					name = opinion_disrespects_me
					who = FROM
				}
			}
			else_if = {
				limit = { trait = drunkard }

				opinion = {
					name = opinion_gifted_alcohol_drunkard
					who = FROM
				}
			}
			else = {
				opinion = {
					name = opinion_gifted_alcohol
					who = FROM
				}
			}

			hidden_effect = {
				add_character_modifier = {
					name = recently_recieved_alcohol_gift
					years = 1
					hidden = yes
				}

				FROM = {
					add_character_modifier = {
						name = recently_sent_alcohol_gift
						years = 1
						hidden = yes
					}
				}
			}
		}
	}

	use_scary_upgrade = {
		filter = realm
		ai_target_filter = realm
		ai_check_interval = 60

		only_playable = yes

		from_potential = {
			any_realm_wonder_upgrade = {
				is_active = yes
				has_wonder_upgrade_flag = scary
			}

			is_adult = yes
			is_incapable = no
			prisoner = no
		}

		potential = {
			age >= 8
		}

		allow = {
			prisoner = no
			is_inaccessible_trigger = no

			NOR = {
				has_opinion_modifier = {
					name = opinion_scared_into_submission
					who = FROM
				}

				has_opinion_modifier = {
					name = opinion_threatened_me
					who = FROM
				}
			}

			FROM = {
				is_inaccessible_trigger = no

				custom_tooltip = {
					text = use_scary_upgrade_cooldown_tt

					NOT = { has_character_modifier = used_scary_upgrade_cd }
				}
			}
		}

		effect = {
			save_event_target_as = target_character

			FROM = {
				show_scope_change = no

				random_realm_wonder_upgrade = {
					limit = {
						is_active = yes
						has_wonder_upgrade_flag = scary
					}

					save_event_target_as = target_upgrade

					wonder = {
						save_event_target_as = target_wonder
					}
				}

				custom_tooltip = {
					text = use_scary_upgrade_tt

					add_character_modifier = {
						name = used_scary_upgrade_cd
						years = 2
						hidden = yes
					}
				}

				character_event = {
					id = LT.20301
					days = 1
				}
			}
		}

		ai_will_do = {
			factor = 0.5

			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
					is_liege_of = FROM
				}
			}

			mult_modifier = {
				factor = 0.1
				FROM = { is_benevolent_trigger = yes }
			}

			mult_modifier = {
				factor = 2
				FROM = { is_evil_trigger = yes }
			}
		}
	}

	use_secluded_upgrade = {
		filter = realm
		ai_target_filter = realm
		ai_check_interval = 60

		only_playable = yes

		from_potential = {
			any_realm_wonder_upgrade = {
				is_active = yes
				has_wonder_upgrade_flag = secluded
			}

			is_adult = yes
			is_incapable = no
			prisoner = no
		}

		potential = {
			is_adult = yes
		}

		allow = {
			prisoner = no
			is_inaccessible_trigger = no

			NOR = {
				has_opinion_modifier = {
					name = opinion_afraid
					who = FROM
				}

				has_opinion_modifier = {
					name = opinion_threatened_me
					who = FROM
				}
			}

			FROM = {
				is_inaccessible_trigger = no

				custom_tooltip = {
					text = use_secluded_upgrade_cooldown_tt

					NOT = { has_character_modifier = used_secluded_upgrade_cd }
				}
			}
		}

		effect = {
			save_event_target_as = target_character

			FROM = {
				show_scope_change = no

				random_realm_wonder_upgrade = {
					limit = {
						is_active = yes
						has_wonder_upgrade_flag = secluded
					}

					save_event_target_as = target_upgrade

					wonder = {
						save_event_target_as = target_wonder
					}
				}

				custom_tooltip = {
					text = use_secluded_upgrade_tt

					add_character_modifier = {
						name = used_secluded_upgrade_cd
						months = 6
						hidden = yes
					}
				}
			}

			character_event = {
				id = LT.20405 # invitation
				days = 7
			}
		}

		ai_will_do = {
			factor = 0.5

		#	trigger = {
		#		OR = {
		#			vassal_of = FROM
		#			is_liege_of = FROM
		#		}
		#
		#		NOR = {
		#			is_friend = FROM
		#			is_lover = FROM
		#		}
		#	}

			mult_modifier = {
				factor = 2
				FROM = { diplomacy >= 10 }
			}
		}
	}
}