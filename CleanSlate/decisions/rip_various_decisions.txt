targeted_decisions = {

	release_tributary = {
		ai = no

		from_potential = {
		}

		potential = {
			is_tributary = yes
			suzerain = { character = FROM }
		}

		allow = {
			war = no
			FROM = { war = no }
		}

		effect = {
			remove_tributary = FROM

			FROM = {
				show_scope_change = no

				prestige = -200
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	break_non_aggression_pact = {
		ai = no

		from_potential = {
		}

		potential = {
			is_landed = yes
			has_non_aggression_pact_with = FROM
		}

		allow = {
			war = no

			FROM = {
				prestige >= 200
				war = no
			}
		}

		effect = {
			opinion = {
				name = broken_non_aggression_pact
				who = FROM
			}

			FROM = {
				prestige = -200

				add_character_modifier = {
					name = broken_non_aggression_pact_char_modifier
					years = 10
				}

				set_truce = {
					who = ROOT
					years = 2
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	recruit_prisoner = {
		filter = court

		ai = no

		from_potential = {
			has_dlc = "Reapers"
		}

		potential = {
			host = { character = FROM }
			NOT = { vassal_of = FROM }
			prisoner = yes
			is_ruler = no
			is_adult = yes
			is_heir = no
			is_married = no
			is_incapable = no
		}

		allow = {
			NOR = {
				is_lover = liege
				is_friend = liege
				is_child_of = liege
				is_parent_of = liege
			}

			NOT = { is_rival = FROM }

			opinion_diff = {
				first = FROM
				second = liege
				value >= -25
			}
		}

		effect = {
			liege = {
				character_event = { id = RIP.29700 }
			}

			if = {
				limit = {
					is_consort = yes
					is_senior_consort_party = no
				}

				consort = {
					show_scope_change = no

					remove_consort = ROOT
				}
			}

			if = {
				limit = { has_character_flag = originated_from_chinese_court }
				set_character_flag = ignore_refund
			}

			move_character = FROM
			imprison = no
		}

		ai_will_do = {
			factor = 0
		}
	}

	# The war is in FROMFROM
	interfere_in_vassal_war_attacker = {
		filter = vassal_wars

		ai = no

		from_potential = {
			has_dlc = "Reapers"
		}

		potential = {
			FROMFROM = {
				attacker = { character = ROOT }
			}

			NOR = {
				owes_favor_to = FROM

				has_opinion_modifier = {
					name = opinion_interfered_in_war
					who = FROM
				}
			}
		}

		allow = {
			FROM = {
				prestige >= 100
				is_incapable = no
				prisoner = no
				in_seclusion = no
			}
		}

		effect = {
			FROM = {
				show_scope_change = no

				prestige = -100
			}

			hidden_effect = {
				opinion = {
					name = opinion_interfered_in_war
					who = FROM
					years = 5
				}

				FROMFROM = {
					defender = {
						save_event_target_as = target_defender
					}
				}
			}

			letter_event = {
				id = RIP.30000
				days = 3
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	# The war is in FROMFROM
	interfere_in_vassal_war_attacker_use_favor = {
		filter = vassal_wars

		ai = no

		from_potential = {
			has_dlc = "Reapers"
			has_dlc = "Conclave"
		}

		potential = {
			owes_favor_to = FROM

			FROMFROM = {
				attacker = { character = ROOT }
			}
		}

		allow = {
			FROM = {
				is_incapable = no
				prisoner = no
				in_seclusion = no
			}
		}

		effect = {
			FROMFROM = {
				defender = {
					save_event_target_as = target_defender
				}
			}

			reverse_remove_favor = FROM

			letter_event = {
				id = RIP.30010
				days = 3
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	# The war is in FROMFROM
	interfere_in_vassal_war_defender = {
		filter = vassal_wars

		ai = no

		from_potential = {
			has_dlc = "Reapers"
		}

		potential = {
			FROMFROM = {
				defender = { character = ROOT }
			}

			NOR = {
				owes_favor_to = FROM

				has_opinion_modifier = {
					name = opinion_interfered_in_war
					who = FROM
				}
			}
		}

		allow = {
			FROM = {
				prestige >= 200
				is_incapable = no
				prisoner = no
				in_seclusion = no
			}
		}

		effect = {
			FROM = {
				show_scope_change = no

				prestige = -200
			}

			hidden_effect = {
				opinion = {
					name = opinion_interfered_in_war
					who = FROM
					years = 5
				}

				FROMFROM = {
					attacker = {
						save_event_target_as = target_attacker
					}
				}
			}

			letter_event = {
				id = RIP.30020
				days = 3
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	# The war is in FROMFROM
	interfere_in_vassal_war_defender_use_favor = {
		filter = vassal_wars

		ai = no

		from_potential = {
			has_dlc = "Reapers"
			has_dlc = "Conclave"
		}

		potential = {
			FROMFROM = {
				defender = { character = ROOT }
			}

			owes_favor_to = FROM
		}

		allow = {
			FROM = {
				is_incapable = no
				prisoner = no
				in_seclusion = no
			}
		}

		effect = {
			FROMFROM = {
				attacker = {
					save_event_target_as = target_attacker
				}
			}

			reverse_remove_favor = FROM

			letter_event = {
				id = RIP.30030
				days = 3
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	demand_gavelkind = {
		filter = vassals

		ai = no

		from_potential = {
			has_dlc = "Reapers"
			is_feudal = yes
			is_vice_royalty = no
			prisoner = no
			is_incapable = no
		}

		potential = {
			is_playable = yes
			is_law_potential = succ_gavelkind

			NOR = {
				has_law = succ_gavelkind
				owes_favor_to = FROM

				has_opinion_modifier = {
					name = opinion_demanded_succ_law_change
					who = FROM
				}
			}

			is_feudal = yes
			mercenary = no
			holy_order = no
			is_vice_royalty = no
			prisoner = no
			is_incapable = no
			NOT = { character = FROM }
		}

		allow = {
			FROM = {
				prestige >= 100
				in_seclusion = no
			}
		}

		effect = {
			prestige = -100

			letter_event = {
				id = RIP.30040
				days = 3
			}

			hidden_effect = {
				opinion = {
					name = opinion_demanded_succ_law_change
					who = FROM
					years = 5
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	demand_gavelkind_use_favor = {
		filter = vassals

		ai = no

		from_potential = {
			has_dlc = "Reapers"
			has_dlc = "Conclave"
			is_feudal = yes
			is_vice_royalty = no
			prisoner = no
			is_incapable = no
		}

		potential = {
			is_playable = yes
			owes_favor_to = FROM
			is_law_potential = succ_gavelkind

			NOR = {
				has_law = succ_gavelkind
				character = FROM

				has_opinion_modifier = {
					name = opinion_demanded_succ_law_change
					who = FROM
				}
			}

			is_feudal = yes
			mercenary = no
			holy_order = no
			is_vice_royalty = no
			prisoner = no
			is_incapable = no
		}

		allow = {
			FROM = {
				prestige >= 100
				in_seclusion = no
			}
		}

		effect = {
			FROM = {
				show_scope_change = no
				prestige = -100
			}

			letter_event = {
				id = RIP.30050
				days = 3
			}

			hidden_effect = {
				opinion = {
					name = opinion_demanded_succ_law_change
					who = FROM
					years = 5
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	ask_to_leave_court = {
		filter = court

		ai = no

		potential = {
			vassal_of = FROM
		}

		allow = {
			can_be_asked_to_leave_court_trigger = yes

			trigger_if = {
				limit = {
					is_married = yes

					any_spouse = {
						vassal_of = FROM
						NOT = { character = FROM }
					}
				}

				custom_tooltip = {
					text = their_spouse_must_be_allow_to_leave_tt

					any_spouse = {
						vassal_of = FROM
						NOT = { character = FROM }
						can_be_asked_to_leave_court_trigger = yes
					}
				}
			}
		}

		effect = {
			FROM = {
				show_scope_change = no

				prestige = -5
			}

			if = {
				limit = { free_court_slots < -10 }

				opinion = {
					name = opinion_was_ordered_to_leave_crowded_court
					who = FROM
					years = 10
				}

				any_spouse = {
					limit = { vassal_of = FROM }

					opinion = {
						name = opinion_was_ordered_to_leave_crowded_court
						who = FROM
						years = 10
					}
				}
			}
			else = {
				opinion = {
					name = opinion_disappointed
					who = FROM
					years = 10
				}

				any_spouse = {
					limit = { vassal_of = FROM }

					opinion = {
						name = opinion_disappointed
						who = FROM
						years = 10
					}
				}
			}

			random_playable_ruler = {
				limit = {
					NOT = { character = FROM } # Go anywhere but here
				}

				preferred_limit = { # Move to a same-religion court
						is_within_diplo_range = ROOT
						religion = ROOT

						their_opinion = {
							who = ROOT
							value >= 10
						}
				}

				preferred_limit = { # Move to any court where the character likes me
						is_within_diplo_range = ROOT

						their_opinion = {
							who = ROOT
							value >= 10
						}
				}

				save_event_target_as = new_court
			}

			move_character = event_target:new_court

			any_spouse = {
				limit = { vassal_of = FROM }
				move_character = event_target:new_court
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	exchange_land_for_hospital = {
		ai = no

		from_potential = {
			has_dlc = "Reapers"

			# Capital has space and no hospital
			capital_scope = {
				num_of_empty_holdings >= 1
				hospital_level < 1

			}

			is_nomadic = no
			is_tribal = no
		}

		potential = {
			holy_order = yes
			religion = FROM
			is_adult = yes

			NOR = {
				has_landed_title = k_teutonic_state

				AND = {
					has_landed_title = d_teutonic_order
					has_global_flag = northern_crusades_active
				}
			}
		}

		allow = {
			FROM = {
				piety >= 300

				capital_scope = {
					any_province_holding = {
						is_occupied = no
					}
				}
			}
		}

		effect = {
			FROM = {
				piety = -300

				capital_scope = {
					build_holding = {
						type = castle
						holder = ROOT
					}

					build_holding = {
						type = hospital
						holder = FROM
					}
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	commit_suicide_immortal = {
		filter = self

		ai = no

		potential = {
			immortal = yes
			is_adult = yes
			prisoner = no

			OR = {
				trait = depressed
				age >= 100
			}
		}


		allow = {
			immortal = yes

			OR = {
				trait = depressed
				age >= 100
			}

			trigger_if = {
				limit = { has_character_flag = attempting_suicide }

				custom_tooltip = {
					text = attempting_suicide_tooltip
					always = no
				}
			}
		}

		effect = {
			if = {
				limit = { has_dlc = "Reapers" }

				set_character_flag = attempting_suicide

				if = {
					limit = { is_incapable = no }
					character_event = { id = RIP.30200 }
				}
				else = {
					character_event = { id = RIP.30210 }
				}
			}

			else = {
				prestige = -200

				add_character_modifier = {
					name = suicide
					duration = -1
				}

				death = { death_reason = death_suicide }
			}
		}

		ai_will_do = {
			factor = 0
		}
	}
}

decisions = {

	seek_treatment = {
		ai_check_interval = 6

		is_high_prio = yes

		only_playable = yes

		potential = {
			has_assigned_minor_title = title_court_physician

			OR = {
				has_any_symptom = yes
				trait = consumption
				trait = slow_fever
				trait = camp_fever
				trait = bubonic_plague
				trait = measles
				trait = smallpox
				trait = aztec_disease
				trait = great_pox
				trait = flu
				trait = dysentery
				trait = gout
				trait = food_poisoning
				trait = rabies
				trait = cancer
				trait = pneumonic
			}

			NOT = { trait = troubled_pregnancy } # Treatment handled by special event chain
		}

		allow = {
			prisoner = no

			custom_tooltip = {
				text = seek_treatment_tooltip_2

				trigger_if = {
					limit = { has_character_flag = being_treated }

					had_character_flag = {
						flag = being_treated
						days >= 20
					}
				}

				OR = {
					trigger_if = { # If you have a developed disease and want further treatment
						limit = { character_disease_trigger = yes }

						trigger_if = {
							limit = { has_character_flag = recent_treatment }

							had_character_flag = {
								flag = recent_treatment
								days >= 90
							}
						}
					}

					trigger_else_if = { # If your treatment failed and you want to try again (not sick, but have symptoms)
						limit = { has_any_symptom = yes }

						OR = {
							# Anti-spam delay since event should handle this normally
							had_character_flag = {
								flag = disease_not_serious
								days >= 10
							}

							had_character_flag = {
								flag = developing_illness
								days >= 10
							}
						}

						trigger_if = {
							limit = { has_character_flag = recent_treatment }

							had_character_flag = {
								flag = recent_treatment
								days >= 30
							}
						}

						NOR = {
							has_character_modifier = successful_treatment_1
							has_character_modifier = successful_treatment_2
							has_character_modifier = successful_treatment_3
							has_character_modifier = failed_treatment_1
							has_character_modifier = failed_treatment_2
							has_character_modifier = mystic_treatment_decent
							has_character_modifier = mystic_treatment_poor
							has_character_modifier = mystic_treatment_terrible
							has_character_modifier = symptom_treatment_1
							has_character_modifier = symptom_treatment_2
							has_character_modifier = symptom_treatment_3
							has_character_modifier = symptom_treatment_4
						}
					}

					trigger_if = { # If you have multiple symptoms and want to seek further treatment
						limit = { num_of_symptoms >= 2 }

						trigger_if = {
							limit = { has_character_flag = recent_treatment }

							had_character_flag = {
								flag = recent_treatment
								days >= 30
							}
						}
					}
				}
			}

			custom_tooltip = {
				text = seek_treatment_tooltip_1
			}

			custom_tooltip = {
				text = seek_treatment_tooltip_3

				NOR = {
					has_character_modifier = mystic_treatment_decent
					has_character_modifier = successful_treatment_1
					has_character_modifier = successful_treatment_2
					has_character_modifier = successful_treatment_3
				}
			}
		}

		effect = {
			set_character_flag = recent_treatment

			custom_tooltip = {
				text = seek_treatment_tooltip_4

				remove_treatment_modifiers_effect = yes
				character_event = { id = RIP.11031 }
			}
		}

		ai_will_do = {
			factor = 0.25

			trigger = {
				# AI don't want to seek treatment when they have a decent one already
				NOR = {
					has_character_modifier = symptom_treatment_3
					has_character_modifier = symptom_treatment_4
					has_character_modifier = successful_treatment_2
					has_character_modifier = successful_treatment_3

					trigger_if = {
						limit = { has_character_modifier = symptom_treatment_2 }
						developing_epidemic_disease_trigger = no
					}
				}
			}

			mult_modifier = {
				factor = 2

				OR = {
					trait = craven
					trait = paranoid
				}
			}

			mult_modifier = {
				factor = 1.4
				health < 5
			}

			mult_modifier = {
				factor = 1.4
				health < 4
			}

			mult_modifier = {
				factor = 1.4
				health < 3
			}

			mult_modifier = {
				factor = 1.4
				health < 2
			}

			mult_modifier = {
				factor = 1.4
				health < 1
			}
		}
	}

	employ_court_physician = {
		ai_check_interval = 24

		is_high_prio = yes

		only_playable = yes

		potential = {
			has_dlc = "Reapers"

			trigger_if = {
				limit = { ai = yes }

				OR = {
					higher_real_tier_than = COUNT
					is_ill = yes
					has_any_symptom = yes
				}

				mercenary = no
			}

			is_tribal = no
			is_nomadic = no

			NOT = { has_assigned_minor_title = title_court_physician }
		}

		allow = {
			in_seclusion = no
			NOT = { has_assigned_minor_title = title_court_physician }

			custom_tooltip = {
				text = 3_year_physician_cooldown

				trigger_if = {
					limit = { has_character_flag = 3_year_physician_cooldown }

					had_character_flag = {
						flag = 3_year_physician_cooldown
						years >= 3
					}
				}
			}
		}

		effect = {
			custom_tooltip = {
				text = employ_court_physician_tooltip

				character_event = { id = RIP.11050 }
				clr_character_flag = 3_year_physician_cooldown
				set_character_flag = 3_year_physician_cooldown
			}
		}

		ai_will_do = {
			factor = 0.5

			trigger = {
				wealth >= 25

				trigger_if = {
					limit = { real_tier = COUNT }

					any_close_relative = {
						ai = no
					}
				}
			}

			mult_modifier = {
				factor = 0.5
				lower_real_tier_than = KING
			}

			mult_modifier = {
				factor = 2
				trait = paranoid
			}

			mult_modifier = {
				factor = 10

				OR = {
					is_ill = yes
					has_any_symptom = yes
				}
			}
		}
	}

	# Seclusion
	shut_the_gates = {
		is_high_prio = yes

		only_rulers = yes

		potential = {
			has_dlc = "Reapers"

			OR = {
				is_landed = yes
				is_patrician = yes
			}

			is_tribal = no
			is_nomadic = no
			in_seclusion = no
		}

		allow = {
			prisoner = no
			is_inaccessible_trigger = no

			OR = {
				trait = paranoid

				custom_tooltip = {
					text = epidemic_present_tooltip

					trigger_if = {
						limit = { ai = yes }
						capital_scope = { has_epidemic = yes }
					}

					OR = {
						trigger_if = {
							limit = { ai = no }

							top_liege = {
								any_realm_province = {
									has_epidemic = yes
									held_under_PREV = yes
								}
							}
						}

						capital_scope = {
							OR = {
								has_epidemic = yes

								any_neighbor_province = {
									has_epidemic = yes
								}
							}
						}
					}
				}
			}

			NOT = { has_character_modifier = recently_opened_gates }
		}

		effect = {
			# Achievement flag
			if = {
				limit = {
					ai = no
					is_ironman = yes
				}

				set_character_flag = achievement_no_solicitors
			}

			if = {
				limit = { has_minor_title = title_commander }
				remove_title = title_commander
			}

			set_character_flag = do_not_disturb

			custom_tooltip = { text = shut_the_gates_info_tooltip }

			add_character_modifier = {
				name = in_seclusion
				duration = -1
			}

			if = { # If you are a councillor, stop working and return home
				limit = {
					host = { NOT = { character = ROOT } }

					OR = {
						is_councillor = yes
						has_minor_title = title_councilmember_king
						has_minor_title = title_councilmember_emperor
					}
				}

				force_host = ROOT
			}

			character_event = { id = RIP.12000 }

			if = {
				limit = {
					ai = no
					war = yes
					multiplayer = yes
				}

				character_event = {
					id = RIP.12099
					months = 40
					random = 1800
				}
			}
			else_if = {
				limit = {
					ai = no

					OR = {
						war = yes
						multiplayer = yes
					}
				}

				character_event = {
					id = RIP.12099
					months = 15
					random = 540
				}
			}
			else = {
				character_event = {
					id = RIP.12099
					months = 5
					random = 180
				}
			}

			hidden_effect = {
				any_courtier = {
					limit = {
						prisoner = no
						vassal_of = ROOT
						NOT = { character = ROOT }
					}

					# Unlanded councillors stop working in order to go into seclusion with their liege and other unlanded courtiers join their liege in seclusion
					if = {
						limit = { is_landed = no }

						add_character_modifier = {
							name = in_seclusion
							duration = -1
						}
					}

					# Landed councillors return home while you, their liege, are in seclusion
					else_if = {
						limit = { is_voter = yes }
						force_host = THIS
					}
				}

				any_courtier = { # Landed children being educated in your court are sent home, with the guardianship ending
					limit = {
						has_guardian = yes
						is_adult = no
						prisoner = no
						is_landed = yes
					}

					remove_guardian = yes
				}

				if = { # If you are getting educated elsewhere, then go home to be secluded
					limit = {
						is_adult = no
						is_abroad = yes
					}

					remove_guardian = yes
					force_host = ROOT
				}

				any_vassal = {
					character_event = {
						id = RIP.12001
						days = 7
						random = 7
					}
				}

				if = { # Notify employer that councillor is going into seclusion
					limit = {
						is_councillor = yes
						liege = { ai = no }
					}

					liege = {
						character_event = {
							id = RIP.12101
							days = 1
						}
					}
				}
			}
		}

		ai_will_do = {
			factor = 0.2

			trigger = {
				capital_scope = {
					OR = {
						has_epidemic = yes

						any_neighbor_province = {
							has_epidemic = yes
						}
					}
				}
			}

			mult_modifier = {
				factor = 0.01

				capital_scope = {
					OR = {
						disease = consumption
						disease = measles
					}
				}
			}

			mult_modifier = {
				factor = 0.5
				trait = brave
			}

			mult_modifier = {
				factor = 2
				trait = depressed
			}

			mult_modifier = {
				factor = 2
				trait = stressed
			}

			mult_modifier = {
				factor = 5
				trait = craven
			}

			mult_modifier = {
				factor = 10
				trait = paranoid
			}

			mult_modifier = {
				factor = 50
				capital_scope = { disease = bubonic_plague }
			}
		}
	}

	open_the_gates = {
		ai_check_interval = 3

		is_high_prio = yes

		only_rulers = yes

		potential = {
			in_seclusion = yes
		}

		allow = {
			in_seclusion = yes
		}

		effect = {
			custom_tooltip = {
				text = open_the_gates_info_tooltip

				clr_character_flag = do_not_disturb
				clr_character_flag = exposed_to_outside
				clr_character_flag = seclusion_piling_corpses
				clr_character_flag = seclusion_lazy_seduction
				clr_character_flag = seclusion_nightmares
				clr_character_flag = seclusion_gained_friend
				clr_character_flag = seclusion_child_has_lover
				clr_character_flag = seclusion_tunnel
				clr_character_flag = seclusion_food_events
			}

			remove_character_modifier = in_seclusion
			clr_character_flag = seclusion_events_on

			add_character_modifier = {
				name = recently_opened_gates
				years = 1
			}

			character_event = {
				id = RIP.11557 # Clears starvation modifiers
				days = 40
				random = 20
			}

			hidden_effect = {
				any_courtier = {
					clr_character_flag = seclusion_events_on
					remove_character_modifier = in_seclusion

					character_event = {
						id = RIP.11557 # Clears starvation modifiers
						days = 40
						random = 20
					}
				}

				any_vassal = {
					limit = {
						is_voter = yes
						is_landed = yes
						vassal_of = ROOT
						in_seclusion = no
						host = { NOT = { character = ROOT } }
					}

					force_host = ROOT
				}
			}

			if = { # Rejoin your liege's court if both of you are not in seclusion
				limit = {
					is_voter = yes
					liege = { in_seclusion = no }
				}

				force_host = liege

				if = { # Notify employer that councillor is coming out of seclusion
					limit = {
						is_councillor = yes
						liege = { ai = no }
					}

					liege = {
						character_event = {
							id = RIP.12100
							days = 1
						}
					}
				}
			}

			if = {
				limit = { has_character_modifier = secluded_revelry }
				remove_character_modifier = secluded_revelry
			}

			if = {
				limit = { has_character_modifier = savoring_the_end_days }
				remove_character_modifier = savoring_the_end_days
			}
		}

		ai_will_do = {
			factor = 0.9

			trigger = {
				OR = {
					capital_scope = { has_disease = no }
					has_character_modifier = starving_food_shortage
				}
			}

			mult_modifier = {
				factor = 0.5
				trait = paranoid
			}

			mult_modifier = {
				factor = 3
				trait = brave
			}

			mult_modifier = {
				factor = 3
				capital_scope = { has_disease = no }
				has_character_modifier = starving_food_shortage
			}
		}
	}
}

title_decisions = {

	build_hospital = {
		ai_target_filter = owned
		ai_check_interval = 36

		hide_in_decisions_list = yes		# player can build hospitals from the province view

		only_playable = yes

		from_potential = {					# scope: character who is building
			has_dlc = "Reapers"
		#	ai = yes						# no need to check this, decision is hidden from players
			wealth >= 600
			war = no
		}

		potential = {
			tier = COUNT
			has_hospital = no
			has_siege = no
			is_occupied = no
		}

		allow = {
		}

		effect = {
			location = {
				build_holding = {
					type = hospital
				}
			}
		}

		ai_will_do = {
			factor = 0.1

			mult_modifier = {
				factor = 0.1
				holder_scope = { independent = no }
			}

			mult_modifier = {
				factor = 0.1
				holder_scope = { trait = greedy }
			}

			mult_modifier = {
				factor = 0.1
				holder_scope = { trait = arbitrary }
			}

			mult_modifier = {
				factor = 0.1
				holder_scope = { trait = slothful }
			}

			mult_modifier = {
				factor = 0.1
				holder_scope = { trait = zealous }
			}

			mult_modifier = {
				factor = 0.1
				holder_scope = { trait = content }
			}

			mult_modifier = {
				factor = 5
				holder_scope = { has_character_flag = seen_the_light_of_modern_medicine }
			}

			mult_modifier = {
				factor = 2
				is_capital = yes
			}

			mult_modifier = {
				factor = 2

				holder_scope = {
					OR = {
						is_ill = yes
						has_any_symptom = yes
					}
				}
			}

			mult_modifier = {
				factor = 2
				holder_scope = { trait = charitable }
			}

			mult_modifier = {
				factor = 2
				holder_scope = { trait = diligent }
			}

			mult_modifier = {
				factor = 2
				holder_scope = { trait = kind }
			}

			mult_modifier = {
				factor = 2
				holder_scope = { trait = erudite }
			}
		}
	}
}