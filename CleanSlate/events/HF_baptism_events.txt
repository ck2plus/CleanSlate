# Written by Flavio

namespace = HF

# Possible Sponsor receives mass baptism request
letter_event = {
	id = HF.20000
	desc = EVTDESCHF20000
	border = GFX_event_letter_frame_religion
	portrait = event_target:converting_king

	is_triggered_only = yes # request_sponsored_baptism, HF_baptism_decisons.txt, convert_to_attacker_religion, conversion_decisions.txt

	option = { # Accept request, start preparation for mass conversion
		name = EVTOPTAHF20000

		custom_tooltip = {
			text = accept_baptism_request

			hidden_effect = {
				set_character_flag = flag_sponsoring_baptism
				save_event_target_as = sponsoring_king

				event_target:converting_king = {
					set_character_flag = flag_converting_baptism

					letter_event = {
						id = HF.20002
						days = 5
						random = 5
					}
				}
			}
		}
	}

	option = { # Deny request, end event chain
		name = EVTOPTBHF20000

		custom_tooltip = {
			text = refuse_baptism_request

			remove_opinion = {
				name = opinion_baptism_sponsor_target
				who = event_target:converting_king
			}

			event_target:converting_king = {
				remove_opinion = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}

				letter_event = {
					id = HF.20001
					days = 5
					random = 5
				}
			}
		}

		reverse_opinion = {
			name = opinion_denied_request
			who = event_target:converting_king
			years = 10
		}

		ai_chance = { factor = 0 } # Only for Multiplayer
	}
}

# Converter: Sponsor refused your request to Baptism. Chain ENDS.
letter_event = {
	id = HF.20001
	desc = EVTDESCHF20001
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	ai = no

	option = {
		name = UNFORTUNATE

		tooltip = {
			opinion = {
				name = opinion_denied_request
				years = 10
				who = FROM
			}
		}
	}
}

# Converter: Sponsor accepted your request. Non-aggression pact remains, prepare for ceremony.
letter_event = {
	id = HF.20002
	desc = EVTDESCHF20002
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	has_character_flag = flag_converting_baptism

	trigger = {
		FROM = { is_alive = yes }
	}

	option = {
		name = GOOD

		prestige = -500

		if = {
			limit = { trait = zealous }
			piety = -100
		}

		narrative_event = {
			id = HF.20003 # Big fluff event
			days = 12
			random = 11
			tooltip = EVTTOOLTIPHF20003
		}

		custom_tooltip = { # Have vassals make their own choice as well.
			text = EVTTOOLTIPHF20005

			any_vassal = {
				letter_event = {
					id = HF.20005
					days = 2
					random = 8
				}
			}
		}
	}
}

# The Baptism itself happens. Converter, his courtiers and provinces are converted.
narrative_event = {
	id = HF.20003
	title = EVTTITLE20003
	picture = GFX_evt_mass_baptism
	border = GFX_event_narrative_frame_religion
	sound = mass_conversion_baptism
	portrait = event_target:sponsoring_king

	desc = {
		text = EVTDESCHFA20003
		trigger = { event_target:sponsoring_king = { religion_group = christian } }
	}
	desc = {
		text = EVTDESCHFB20003
		trigger = { event_target:sponsoring_king = { religion_group = muslim } }
	}
	desc = {
		text = EVTDESCHFC20003
		trigger = { event_target:sponsoring_king = { religion = norse_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFD20003
		trigger = { event_target:sponsoring_king = { religion = tengri_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFE20003
		trigger = { event_target:sponsoring_king = { religion = baltic_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFF20003
		trigger = { event_target:sponsoring_king = { religion = finnish_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFG20003
		trigger = { event_target:sponsoring_king = { religion = slavic_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFH20003
		trigger = { event_target:sponsoring_king = { religion = aztec_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFI20003
		trigger = { event_target:sponsoring_king = { religion = west_african_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFL20003
		trigger = { event_target:sponsoring_king = { religion = zun_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFM20003
		trigger = { event_target:sponsoring_king = { religion = hellenic_pagan_reformed } }
	}
	desc = {
		text = EVTDESCHFN20003
		trigger = { event_target:sponsoring_king = { religion_group = zoroastrian_group } }
	}
	desc = {
		text = EVTDESCHFO20003
		trigger = { event_target:sponsoring_king = { religion_group = jewish_group } }
	}
	desc = {
		text = EVTDESCHFP20003
		trigger = {
			event_target:sponsoring_king = {
				OR = {
					religion_group = indian_group
					religion = bon_pagan_reformed
				}
			}
		}
	}

	trigger = {
		event_target:sponsoring_king = { # FROMFROM
			has_character_flag = flag_sponsoring_baptism
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20003

		if = {
			limit = {
				has_nickname = no
				higher_real_tier_than = DUKE
			}

			if = {
				limit = { event_target:sponsoring_king = { religion_group = christian } }
				give_nickname = nick_the_confessor
			}
			else_if = {
				limit = {
					event_target:sponsoring_king = {
						OR = {
							religion_group = muslim
							religion_group = zoroastrian_group
							religion = zun_pagan_reformed
						}
					}
				}
				give_nickname = nick_the_submissive
			}
			else_if = {
				limit = { event_target:sponsoring_king = { religion_group = jewish_group } }
				give_nickname = nick_the_deliverer
			}
			else_if = {
				limit = {
					event_target:sponsoring_king = {
						religion_group = indian_group
						NOT = { religion = buddhist }
					}
				}
				give_nickname = nick_the_purified
			}
			else_if = {
				limit = {
					event_target:sponsoring_king = {
						OR = {
							religion = buddhist
							religion = bon_pagan_reformed
						}
					}
				}
				give_nickname = nick_the_illuminated
			}
			else_if = {
				limit = { event_target:sponsoring_king = { religion = west_african_pagan_reformed } }
				give_nickname = nick_the_awoken
			}
			else_if = {
				limit = { event_target:sponsoring_king = { religion = aztec_pagan_reformed } }
				give_nickname = nick_the_bleeding_eyes
			}
			else_if = {
				limit = { event_target:sponsoring_king = { religion = tengri_pagan_reformed } }
				give_nickname = nick_the_sky_rider
			}
			else_if = {
				limit = { event_target:sponsoring_king = { religion = hellenic_pagan_reformed } }
				give_nickname = nick_the_civilized
			}
			else_if = {
				limit = { event_target:sponsoring_king = { religion_group = pagan_group } }
				give_nickname = nick_the_exalted
			}
		}

		# Increase tribal organization
		trigger_switch = {
			on_trigger = has_law

			tribal_organization_3 = {
				any_demesne_title = {
					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_4
						cooldown = no
						opinion_effect = no
					}
				}
			}

			tribal_organization_2 = {
				any_demesne_title = {
					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_3
						cooldown = no
						opinion_effect = no
					}
				}
			}

			tribal_organization_1 = {
				any_demesne_title = {
					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_2
						cooldown = no
						opinion_effect = no
					}
				}
			}

			tribal_organization_0 = {
				any_demesne_title = {

					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_1
						cooldown = no
						opinion_effect = no
					}
				}
			}
		}

		if = {
			limit = { higher_real_tier_than = COUNT }

			any_player = {
				limit = {
					OR = {
						religion_group = event_target:sponsoring_king
						religion_group = event_target:converting_king
					}

					OR = {
						is_within_diplo_range = ROOT
						religion = event_target:converting_king
					}

					NOR = {
						character = ROOT
						vassal_of = ROOT
					}
				}

				narrative_event = { id = HF.20090 } # Notify all other rulers if Converter is King or above
			}
		}

		hidden_effect = {
			chronicle = {
				entry = CHRONICLE_MASS_CONVERSION_CONVERTER
				portrait = [sponsoring_king.GetID]
			}

			any_realm_character = {
				clr_character_flag = flag_vassal_asked_baptism
			}

			if = {
				limit = { society_member_of = secret_religious_cult }

				if = {
					limit = { society_rank == 4 }

					# If leader of society of same religion, convert all secret provinces, disband society.
					if = {
						limit = { true_religion = event_target:sponsoring_king }

						root_secret_religion_provinces_convert_effect = yes

						society = {
							any_society_member = {
								limit = { same_realm = ROOT }
								leave_society = yes
							}
						}

						any_realm_character = {
							limit = { has_character_flag = currently_part_of_secret_religion_uncovering	}
							clr_character_flag = currently_part_of_secret_religion_uncovering
						}

						society = {
							any_society_member = {
								leave_society = yes
							}
						}
					}

					# If leader of society of other religion, disband society.
					else = {
						society = {
							any_society_member = {
								limit = { same_realm = ROOT }
								leave_society = yes
							}
						}

						any_realm_character = {
							limit = { has_character_flag = currently_part_of_secret_religion_uncovering	}
							clr_character_flag = currently_part_of_secret_religion_uncovering
						}

						society = {
							any_society_member = {
								leave_society = yes
							}
						}
					}
				}
				else = {
					# If member of society of same religion, convert all secret provinces inside realm, then leave society.
					if = {
						limit = { true_religion = event_target:sponsoring_king }

						root_secret_religion_provinces_convert_effect = yes
						leave_society = yes
					}
					# If member of society of other religion, leave society.
					else = {
						leave_society = yes
					}
				}
			}
		}

		trigger_switch = {
			on_trigger = real_tier

			EMPEROR = {
				religion_authority = {
					name = baptized_emperor_from
					years = 30
				}
			}

			KING = {
				religion_authority = {
					name = baptized_king_from
					years = 20
				}
			}

			fallback = {
				religion_authority = {
					name = ruler_converted_from
					years = 20
				}
			}
		}

		# Workaround for automatic usurption of theocratic characters
		event_target:sponsoring_king = {
			religion_scope = {
				save_event_target_as = target_religion
			}
		}

		convert_religion_failsafe_effect = yes

		custom_tooltip = {
			text = ALL_PROVINCES_CONVERT_TOOLTIP

			any_demesne_province = {
				religion = event_target:sponsoring_king
			}
		}

		remove_trait_silently_zealous_effect = yes

		random = {
			chance = 40
			add_trait = sympathy_pagans
		}

		# Give Baptised Trait if Christian and a bishop is available.
		if = {
			limit = {
				event_target:sponsoring_king = {
					religion_group = christian

					any_courtier_or_vassal = {
						is_theocracy = yes
						religion = event_target:sponsoring_king
						block_general_event_trigger = no

						OR = {
							higher_real_tier_than = BARON
							is_antipope = yes
							is_cardinal = yes
						}
					}
				}
			}

			event_target:sponsoring_king = {
				random_courtier_or_vassal = {
					limit = {
						is_theocracy = yes
						religion = event_target:sponsoring_king
						block_general_event_trigger = no

						OR = {
							higher_real_tier_than = BARON
							is_antipope = yes
							is_cardinal = yes
						}
					}

					save_event_target_as = scoped_baptizer
				}

				PREV = {
					save_persistent_event_target = {
						name = baptizing_bishop_per
						scope = event_target:scoped_baptizer
					}
				}
			}

			custom_tooltip = {
				text = tooltip_gain_baptized_by_bishop
				add_trait = baptized_by_bishop
			}

			# AND Crowned by Bishop if Catholic/Fraticelli
			if = {
				limit = {
					higher_real_tier_than = DUKE

					event_target:sponsoring_king = {
						OR = {
							religion = catholic
							religion = fraticelli
						}
					}
				}

				save_persistent_event_target = {
					name = coronation_priest_per
					scope = event_target:scoped_baptizer
				}

				custom_tooltip = {
					text = tooltip_gain_crowned_by_bishop
					add_trait = crowned_by_bishop
				}
			}
		}

		clr_character_flag = flag_converting_baptism
		set_character_flag = flag_converted_baptism

		# Notify Sponsor of the event
		event_target:sponsoring_king = {
			narrative_event = { id = HF.20004 }
		}

		any_realm_character = {
			narrative_event = { id = HF.20008 } # Convert vassals and their courtiers
		}

		character_event = {
			id = HF.20036 # A new priest arrives. (also starts the post-ceremony events)
			days = 3
			random = 3
		}

		# Chance of true_religion vassals revolting.
		if = {
			limit = {
				OR = {
					any_vassal = {
						has_character_flag = ai_flag_refuse_conversion
						higher_real_tier_than = BARON
						count = 4
					}

					any_vassal = {
						has_character_flag = ai_flag_refuse_conversion
						higher_real_tier_than = COUNT
						count = 2
					}

					any_vassal = {
						has_character_flag = ai_flag_refuse_conversion
						higher_real_tier_than = DUKE
					}

					any_vassal = {
						has_character_flag = ai_flag_refuse_conversion
						NOT = { religion = event_target:converting_king }
					}
				}
			}

			random_vassal = {
				limit = {
					has_character_flag = ai_flag_refuse_conversion
					NOT = { religion = event_target:converting_king }
				}

				preferred_limit = {
					ai = no
					trait = brave
					trait = zealous
					is_powerful_vassal = yes
				}

				preferred_limit = {
					ai = no
					is_powerful_vassal = yes
				}

				preferred_limit = {
					is_powerful_vassal = yes
				}

				long_character_event = {
					id = HF.20029 # Chance to start rebellion
					days = 5
					random = 5
				}
			}
		}

		if = {
			limit = {
				ai = no
				is_ironman = yes
				culture_group = east_slavic
				higher_tier_than = DUKE

				capital_scope = {
					region = world_europe_east
				}

				event_target:sponsoring_king = {
					has_landed_title = e_byzantium
				}
			}

			set_character_flag = achievement_baptism_of_rus
		}
	}
}

# The Baptism itself happens (Sponsor version)
narrative_event = {
	id = HF.20004
	title = EVTTITLE20004
	picture = GFX_evt_mass_baptism
	border = GFX_event_narrative_frame_religion
	sound = mass_conversion_baptism

	desc = {
		text = EVTDESCHFA20004
		trigger = { religion_group = christian }
	}
	desc = {
		text = EVTDESCHFB20004
		trigger = { religion_group = muslim }
	}
	desc = {
		text = EVTDESCHFC20004
		trigger = { religion = norse_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFD20004
		trigger = { religion = tengri_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFE20004
		trigger = { religion = baltic_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFF20004
		trigger = { religion = finnish_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFG20004
		trigger = { religion = slavic_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFH20004
		trigger = { religion = aztec_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFI20004
		trigger = { religion = west_african_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFL20004
		trigger = { religion = zun_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFM20004
		trigger = { religion = hellenic_pagan_reformed }
	}
	desc = {
		text = EVTDESCHFN20004
		trigger = { religion_group = zoroastrian_group }
	}
	desc = {
		text = EVTDESCHFO20004
		trigger = { religion_group = jewish_group }
	}
	desc = {
		text = EVTDESCHFP20004
		trigger = {
			OR = {
				religion_group = indian_group
				religion = bon_pagan_reformed
			}
		}
	}

	is_triggered_only = yes

	has_character_flag = flag_sponsoring_baptism

	trigger = {
		event_target:converting_king = { is_alive = yes }
	}

	option = {
		name = EVTOPTAHF20004

		clr_character_flag = flag_sponsoring_baptism
		set_character_flag = flag_sponsored_baptism

		chronicle = {
			entry = CHRONICLE_MASS_CONVERSION_SPONSOR
			portrait = [converting_king.GetID]
		}

		if = {
			limit = {
				trait = excommunicated
				controls_religion = no

				rightful_religious_head_scope = {
					is_alive = yes
				}
			}

			rightful_religious_head_scope = {
				letter_event = {
					id = HF.20093
					days = 15
					random = 15
				}
			}
		}

		if = {
			limit = { has_nickname = no }

			if = {
				limit = { religion_group = christian }
				give_nickname = nick_the_missionary
			}
			else_if = {
				limit = {
					OR = {
						religion_group = muslim
						religion_group = zoroastrian_group
						religion = zun_pagan_reformed
					}
				}
				give_nickname = nick_the_proselytizer
			}
			else_if = {
				limit = { religion_group = jewish_group }
				give_nickname = nick_the_adjudicator
			}
			else_if = {
				limit = { religion_group = indian_group }
				give_nickname = nick_the_enlightened
			}
			else_if = {
				limit = { religion = west_african_pagan_reformed }
				give_nickname = nick_the_waking_teacher
			}
			else_if = {
				limit = { religion = aztec_pagan_reformed }
				give_nickname = nick_the_whirling_spell
			}
			else_if = {
				limit = { religion = tengri_pagan_reformed }
				give_nickname = nick_the_horse_shepherd
			}
			else_if = {
				limit = { religion = hellenic_pagan_reformed }
				give_nickname = nick_the_educator
			}
			else_if = {
				limit = { religion_group = pagan_group }
				give_nickname = nick_the_legendary
			}
		}

		if = {
			limit = { real_tier = EMPEROR }

			piety = 400

			religion_authority = {
				name = baptized_emperor_to
				years = 20
			}
		}
		else_if = {
			limit = { real_tier = KING }

			piety = 300

			religion_authority = {
				name = baptized_king_to
				years = 10
			}
		}
		else_if = {
			limit = {
				OR = {
					real_tier = COUNT
					real_tier = DUKE
				}
			}

			piety = 200

			religion_authority = {
				name = ruler_converted_to
				years = 10
			}
		}
		else = {
			piety = 100
		}
	}
}

# Pope notified of your actions.
letter_event = {
	id = HF.20093
	desc = EVTDESCHFA20093
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	trigger = {
		FROM = {
			is_alive = yes
			trait = excommunicated
			religion = ROOT
		}
	}

	option = { # Lift excommunication
		name = EVTOPTAHF20093

		FROM = {
			letter_event = { id = HF.20094 }
		}
	}
}

# Pope notified of your actions.
letter_event = {
	id = HF.20094
	desc = EVTDESCHFA20094
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20094

		remove_trait = excommunicated

		reverse_opinion = {
			name = opinion_converted_heathens
			who = FROM
			years = 25
		}
	}
}

# Vassals receive news of the mass baptism and decide what they want to do.
letter_event = {
	id = HF.20005
	border = GFX_event_letter_frame_religion

	desc = {
		text = EVTDESCHFA20005
		trigger = {
			NOT = { religion = event_target:sponsoring_king }
		}
	}
	desc = {
		text = EVTDESCHFB20005
		trigger = { religion = event_target:sponsoring_king }
	}

	is_triggered_only = yes

	trigger = {
		event_target:sponsoring_king = {
			has_character_flag = flag_sponsoring_baptism
		}
	}

	immediate = {
		if = {
			limit = {
				ai = no
				is_ironman = yes
			}

			set_character_flag = flag_vassal_asked_baptism
		}
	}

	option = { # Character is already of the converting religion
		name = EVTOPTAHF20005

		trigger = { religion = event_target:sponsoring_king }

		if = {
			limit = { higher_real_tier_than = BARON }

			# Inform liege of acceptance. No Baron spamming, since they will almost always all accept.
			FROM = {
				show_scope_change = no

				letter_event = {
					id = HF.20006
					tooltip = EVTTOOLTIPHFA20006
				}
			}
		}

		any_vassal = {
			letter_event = { id = HF.20009 } # Inform vassals of vassal that vassal will convert.
		}

		opinion = {
			name = opinion_enlightened
			who = FROM
			years = 5
		}

		ai_chance = { factor = 100 }
	}

	option = { # Character is already secretly of the converting religion
		name = EVTOPTBHF20005

		trigger = { secret_religion = event_target:sponsoring_king }

		clr_character_flag = ai_flag_refuse_conversion

		if = {
			limit = { higher_real_tier_than = BARON }

			# Inform liege of acceptance. No Baron spamming, since they will almost always all accept.
			FROM = {
				show_scope_change = no

				letter_event = {
					id = HF.20006
					tooltip = EVTTOOLTIPHFA20006
				}
			}
		}

		any_vassal = {
			letter_event = { id = HF.20009 } # Inform vassals of vassal that vassal will convert.
		}

		opinion = {
			name = opinion_enlightened
			who = FROM
			years = 5
		}

		ai_chance = {
			factor = 100

			trigger = {
				NOT = {
					any_demesne_title = {
						OR = {
							holy_order = yes
							mercenary = yes
							controls_religion = yes
						}
					}
				}
			}
		}
	}

	option = { # Fake Baptism - Player only choice to convert officially but secretly remain pagan.
		name = EVTOPTCHF20005

		trigger = {
			ai = no

			NOR = {
				religion = event_target:sponsoring_king
				true_religion = event_target:sponsoring_king
				trait = honest
			}
		}

		set_character_flag = flag_deceitful_baptism

		random = {
			chance = 50
			add_trait_deceitful_effect = yes
		}

		# Inform liege of acceptance. Always inform about player action!
		FROM = {
			show_scope_change = no

			letter_event = {
				id = HF.20006
				tooltip = EVTTOOLTIPHFC20006
			}
		}

		any_vassal = {
			letter_event = { id = HF.20028 } # Inform vassals of vassal that vassal will pretend to convert.
		}

		any_courtier_or_vassal = {
			limit = {
				religion = ROOT
				dynasty = ROOT
				is_ruler = no
			}

			letter_event = { id = HF.20028 } # Make sure relatives of fake converter also will just pretend to convert.
		}
	}

	option = { # (Pagan) vassal decides to convert with liege
		name = EVTOPTDHF20005

		trigger = {
			NOR = {
				religion = event_target:sponsoring_king
				true_religion = event_target:sponsoring_king
				has_character_flag = ai_flag_refuse_conversion
			}
		}

		# Inform liege of acceptance. No Baron spamming, since they will almost always all accept.
		if = {
			limit = { higher_real_tier_than = BARON }

			FROM = {
				show_scope_change = no

				letter_event = {
					id = HF.20006
					tooltip = EVTTOOLTIPHFD20006
				}
			}
		}

		any_vassal = {
			letter_event = { id = HF.20009 } # Inform vassals of vassal that vassal will convert.
		}

		ai_chance = {
			factor = 50

			trigger = {
				NOT = {
					any_demesne_title = {
						OR = {
							holy_order = yes
							mercenary = yes
							controls_religion = yes
						}
					}
				}

				trigger_if = {
					limit = { trait = zealous }

					opinion = {
						who = FROM
						value >= 20
					}
				}
				trigger_else = {
					opinion = {
						who = FROM
						value >= -40
					}
				}

				FROM = {
					NOT = {
						any_vassal = {
							leads_faction = faction_lower_tribal_organization

							faction_power = {
								faction = faction_lower_tribal_organization
								power >= 2.0
							}
						}
					}
				}
			}

			mult_modifier = {
				factor = 0.5

				FROM = {
					any_vassal = {
						leads_faction = faction_lower_tribal_organization

						faction_power = {
							faction = faction_lower_tribal_organization
							power >= 1.0
						}
					}
				}
			}

			mult_modifier = {
				factor = 0.25

				FROM = {
					any_vassal = {
						leads_faction = faction_lower_tribal_organization

						faction_power = {
							faction = faction_lower_tribal_organization
							power >= 1.5
						}
					}
				}
			}
		}
	}

	option = { # (Pagan) vassal decides he will not convert
		name = EVTOPTEHF20005

		trigger = {
			NOT = { religion = event_target:sponsoring_king }
		}

		set_character_flag = ai_flag_refuse_conversion

		custom_tooltip = { text = EVTTOOLTIPHFE20007 }

		FROM = {
			letter_event = { id = HF.20007 } # Inform liege of refusal
		}

		any_vassal = {
			letter_event = { id = HF.20025 } # Inform vassals of vassal that vassal won't convert.
		}

		reverse_opinion = {
			name = opinion_denied_request
			who = FROM
			years = 5
		}

		ai_chance = {
			factor = 50

			trigger = {
				NOT = { true_religion = event_target:sponsoring_king }

				trigger_if = {
					limit = {
						OR = {
							lower_real_tier_than = COUNT
							is_child_of	= FROM
						}
					}

					trait = zealous
				}
			}

			mult_modifier = {
				factor = 10

				FROM = {
					NOR = {
						has_law = tribal_organization_3
						has_law = tribal_organization_4
					}
				}
			}

			mult_modifier = {
				factor = 5
				FROM = { has_law = tribal_organization_3 }
			}

			mult_modifier = {
				factor = 0.8
				age < 30
			}

			mult_modifier = {
				factor = 1.25
				age >= 40
			}

			mult_modifier = {
				factor = 1.25
				real_tier = DUKE
			}

			mult_modifier = {
				factor = 1.45
				real_tier = KING
			}

			mult_modifier = {
				factor = 0.75
				owes_favor_to = event_target:converting_king
			}

			mult_modifier = {
				factor = 1.5
				is_reformed_religion = yes
			}

			mult_modifier = {
				factor = 1.5
				NOT = { religion_group = pagan_group }
			}

			mult_modifier = {
				factor = 1.15

				is_reformed_religion = no
				NOT = { religion = FROM }
			}

			mult_modifier = {
				factor = 1.35

				is_not_unreformed_pagan_trigger = yes
				NOT = { religion = FROM }
			}

			mult_modifier = {
				factor = 0.3

				opinion = {
					who = FROM
					value >= 100
				}
			}

			mult_modifier = {
				factor = 0.4

				opinion = {
					who = FROM
					value >= 80
				}
			}

			mult_modifier = {
				factor = 0.5

				opinion = {
					who = FROM
					value >= 60
				}
			}

			mult_modifier = {
				factor = 0.65

				opinion = {
					who = FROM
					value >= 40
				}
			}

			mult_modifier = {
				factor = 0.75

				opinion = {
					who = FROM
					value >= 20
				}
			}

			mult_modifier = {
				factor = 0.85

				opinion = {
					who = FROM
					value >= 0
				}
			}

			mult_modifier = {
				factor = 1.15

				opinion = {
					who = FROM
					value < 0
				}
			}

			mult_modifier = {
				factor = 1.25

				opinion = {
					who = FROM
					value < -20
				}
			}

			mult_modifier = {
				factor = 1.75

				opinion = {
					who = FROM
					value < -40
				}
			}

			mult_modifier = {
				factor = 1.75

				opinion = {
					who = FROM
					value < -60
				}
			}

			mult_modifier = {
				factor = 2

				opinion = {
					who = FROM
					value < -80
				}
			}

			mult_modifier = {
				factor = 3

				opinion = {
					who = FROM
					value <= -100
				}
			}

			mult_modifier = {
				factor = 2
				is_rival = FROM
			}

			mult_modifier = {
				factor = 0.5
				is_friend = FROM
			}

			mult_modifier = {
				factor = 0.5
				is_married = FROM
			}

			mult_modifier = {
				factor = 0.75
				is_close_relative = FROM
			}

			mult_modifier = {
				factor = 0.85
				dynasty = FROM
			}

			mult_modifier = {
				factor = 0.5
				is_child_of = FROM
			}

			mult_modifier = {
				factor = 0.9
				FROM = { prestige >= 300 }
			}

			mult_modifier = {
				factor = 0.85
				FROM = { prestige >= 500 }
			}

			mult_modifier = {
				factor = 0.75
				FROM = { prestige >= 700 }
			}

			mult_modifier = {
				factor = 0.5
				FROM = { prestige >= 1000 }
			}

			mult_modifier = {
				factor = 0.75
				trait = cynical
			}

			mult_modifier = {
				factor = 1.5
				trait = zealous
			}

			mult_modifier = {
				factor = 0.75
				event_target:sponsoring_king = { religion = catholic }
			}

			mult_modifier = {
				factor = 0.75
				event_target:sponsoring_king = { religion = orthodox }
			}

			mult_modifier = {
				factor = 0.75
				event_target:sponsoring_king = { religion = sunni }
			}

			mult_modifier = {
				factor = 0.75
				event_target:sponsoring_king = { religion = shiite }
			}

			mult_modifier = {
				factor = 0.5
				NOT = { religion_authority = 0.9 }
			}

			mult_modifier = {
				factor = 0.75
				NOT = { religion_authority = 0.7 }
			}

			mult_modifier = {
				factor = 0.75
				NOT = { religion_authority = 0.5 }
			}

			mult_modifier = {
				factor = 1.25
				religion_authority = 0.5
			}

			mult_modifier = {
				factor = 1.25
				religion_authority = 0.7
			}

			mult_modifier = {
				factor = 1.5
				religion_authority = 1.0
			}

			mult_modifier = {
				factor = 1.5

				event_target:sponsoring_king = { pacifist = yes }

				OR = {
					trait = wroth
					trait = impaler
					trait = hunter
					trait = shieldmaiden
					this_is_sea_raider_trigger = yes
				}
			}

			mult_modifier = {
				factor = 1.5

				OR = {
					trait = lustful
					trait = gluttonous
					trait = drunkard
					trait = hedonist
					trait = master_seducer
					trait = master_seductress
				}

				event_target:sponsoring_king = {
					OR = {
						religion_group = christian
						religion_group = muslim
						religion = buddhist
						religion = jain
					}
				}
			}

			mult_modifier = {
				factor = 1.5

				event_target:sponsoring_king = { religion_group = pagan_group }

				OR = {
					trait = chaste
					trait = humble
					trait = shy
					trait = kind
				}
			}

			mult_modifier = {
				factor = 0.4

				trigger_if = {
					limit = {
						event_target:sponsoring_king = { religion_group = christian }
					}
					trait = sympathy_christendom
				}
				trigger_else_if = {
					limit = {
						event_target:sponsoring_king = { religion_group = muslim }
					}
					trait = sympathy_islam
				}
				trigger_else_if = {
					limit = {
						event_target:sponsoring_king = { religion_group = pagan_group }
					}
					trait = sympathy_pagans
				}
				trigger_else_if = {
					limit = {
						event_target:sponsoring_king = { religion_group = zoroastrian_group }
					}
					trait = sympathy_zoroastrianism
				}
				trigger_else_if = {
					limit = {
						event_target:sponsoring_king = { religion_group = jewish_group }
					}
					trait = sympathy_judaism
				}
				trigger_else = {
					event_target:sponsoring_king = { religion_group = indian_group }
					trait = sympathy_indian
				}
			}
		}
	}
}

# Notification: Vassal will baptize (or is already of the converting faith, or was secretly already of converting faith)
letter_event = {
	id = HF.20006
	border = GFX_event_letter_frame_religion

	desc = { # Already a convert
		text = EVTDESCHFA20006
		trigger = {
			FROM = { religion = event_target:sponsoring_king }
		}
	}
	desc = { # Already secretly a convert
		text = EVTDESCHFB20006
		trigger = {
			FROM = { secret_religion = event_target:sponsoring_king }
		}
	}
	desc = { # Will be a convert
		text = EVTDESCHFC20006
		trigger = {
			FROM = {
				NOR = {
					religion = event_target:sponsoring_king
					secret_religion = event_target:sponsoring_king
				}
			}
		}
	}

	is_triggered_only = yes
	notification = yes

	ai = no

	option = {
		name = GOOD
	}
}

# Notification: Vassal will not baptize
letter_event = {
	id = HF.20007
	desc = EVTDESCHF20007
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	notification = yes

	ai = no

	option = {
		name = EVTOPTAHF20007
	}
}

# The Baptism itself happens (Vassals version, convert vassals, their courtiers and provinces when appropriate)
narrative_event = {
	id = HF.20008
	title = EVTTITLE20008
	picture = GFX_evt_mass_baptism
	border = GFX_event_narrative_frame_religion
	sound = mass_conversion_baptism
	portrait = event_target:sponsoring_king

	desc = {
		text = EVTDESCHFA20008
		trigger = {
			event_target:sponsoring_king = { religion_group = christian }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFB20008
		trigger = {
			event_target:sponsoring_king = { religion_group = muslim }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFC20008
		trigger = {
			event_target:sponsoring_king = { religion = norse_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFD20008
		trigger = {
			event_target:sponsoring_king = { religion = tengri_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFE20008
		trigger = {
			event_target:sponsoring_king = { religion = baltic_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFF20008
		trigger = {
			event_target:sponsoring_king = { religion = finnish_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFG20008
		trigger = {
			event_target:sponsoring_king = { religion = slavic_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFH20008
		trigger = {
			event_target:sponsoring_king = { religion = aztec_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFI20008
		trigger = {
			event_target:sponsoring_king = { religion = west_african_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFL20008
		trigger = {
			event_target:sponsoring_king = { religion = zun_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFM20008
		trigger = {
			event_target:sponsoring_king = { religion = hellenic_pagan_reformed }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFN20008
		trigger = {
			event_target:sponsoring_king = { religion_group = zoroastrian_group }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFO20008
		trigger = {
			event_target:sponsoring_king = { religion_group = jewish_group }
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFP20008
		trigger = {
			event_target:sponsoring_king = {
				OR = {
					religion_group = indian_group
					religion = bon_pagan_reformed
				}
			}
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}
	}
	desc = {
		text = EVTDESCHFQ20008
		trigger = {
			event_target:sponsoring_king = { religion_group = christian }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFQQ20008
		trigger = {
			event_target:sponsoring_king = { religion_group = muslim }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFR20008
		trigger = {
			event_target:sponsoring_king = { religion = norse_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFRR20008
		trigger = {
			event_target:sponsoring_king = { religion = tengri_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFS20008
		trigger = {
			event_target:sponsoring_king = { religion = baltic_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFSS20008
		trigger = {
			event_target:sponsoring_king = { religion = finnish_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFT20008
		trigger = {
			event_target:sponsoring_king = { religion = slavic_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFTT20008
		trigger = {
			event_target:sponsoring_king = { religion = aztec_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFU20008
		trigger = {
			event_target:sponsoring_king = { religion = west_african_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFUU20008
		trigger = {
			event_target:sponsoring_king = { religion = zun_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFV20008
		trigger = {
			event_target:sponsoring_king = { religion = hellenic_pagan_reformed }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFVV20008
		trigger = {
			event_target:sponsoring_king = { religion_group = zoroastrian_group }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFW20008
		trigger = {
			event_target:sponsoring_king = { religion_group = jewish_group }
			has_character_flag = ai_flag_refuse_conversion
		}
	}
	desc = {
		text = EVTDESCHFWW20008
		trigger = {
			event_target:sponsoring_king = {
				OR = {
					religion_group = indian_group
					religion = bon_pagan_reformed
				}
			}
			has_character_flag = ai_flag_refuse_conversion
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTCHF20008 # Fake conversion (same option, different localization)

		trigger = {
			has_character_flag = flag_deceitful_baptism

			OR = {
				is_ruler = yes

				liege = {
					NOR = {
						has_character_flag = ai_flag_refuse_conversion
						has_character_flag = liege_is_truebeliever
					}
				}
			}

			NOR = {
				has_character_flag = ai_flag_refuse_conversion
				has_character_flag = liege_is_truebeliever
				religion_group = event_target:sponsoring_king
			}
		}

		chronicle = {
			entry = CHRONICLE_MASS_CONVERSION_VASSAL
			portrait = [converting_king.GetID]
		}

		hidden_effect = {
			if = {
				limit = {
					society_member_of = secret_religious_cult
					true_religion = event_target:sponsoring_king
				}

				# If leader of society of same religion, convert all secret provinces, disband society.
				if = {
					limit = { society_rank == 4 }

					root_secret_religion_provinces_convert_effect = yes

					society = {
						any_society_member = {
							limit = { same_realm = ROOT }
							leave_society = yes
						}
					}

					any_realm_character = {
						clr_character_flag = currently_part_of_secret_religion_uncovering
					}

					society = {
						any_society_member = {
							leave_society = yes
						}
					}
				}
				# If member of society of same religion, convert all secret provinces inside realm, then leave society.
				else = {
					root_secret_religion_provinces_convert_effect = yes
					leave_society = yes
				}
			}
		}

		if = {
			limit = { NOT = { religion_group = event_target:sponsoring_king } }

			if = {
				limit = { trait = zealous }

				remove_trait_zealous_effect = yes

				trigger_switch = {
					on_trigger = religion_group

					christian = { add_trait = sympathy_christendom }
					muslim = { add_trait = sympathy_islam }
					pagan_group = { add_trait = sympathy_pagans }
					zoroastrian_group = { add_trait = sympathy_zoroastrianism }
					jewish_group = { add_trait = sympathy_judaism }
				}
			}
			else_if = {
				limit = { NOT = { trait = cynical } }

				random = {
					chance = 60

					trigger_switch = {
						on_trigger = religion_group

						christian = { add_trait = sympathy_christendom }
						muslim = { add_trait = sympathy_islam }
						pagan_group = { add_trait = sympathy_pagans }
						zoroastrian_group = { add_trait = sympathy_zoroastrianism }
						jewish_group = { add_trait = sympathy_judaism }
					}
				}
			}
		}

		custom_tooltip = {
			text = vassal_tooltip_deceitful_baptism

			# Workaround for automatic usurption of theocratic characters
			event_target:sponsoring_king = {
				religion_scope = {
					save_event_target_as = target_religion
				}
			}

			convert_religion_failsafe_effect = yes

			any_demesne_province = {
				religion = event_target:sponsoring_king
			}

			any_realm_character = {
				limit = { has_character_flag = liege_is_truebeliever }

				character_event = {
					id = HF.20026
					days = 2
				}
			}
		}
	}

	option = {
		name = EVTOPTAHF20008

		trigger = {
			OR = {
				is_ruler = yes

				liege = {
					NOR = {
						has_character_flag = ai_flag_refuse_conversion
						has_character_flag = liege_is_truebeliever
					}
				}
			}

			NOR = {
				has_character_flag = flag_deceitful_baptism
				has_character_flag = ai_flag_refuse_conversion
				has_character_flag = liege_is_truebeliever
				religion_group = event_target:sponsoring_king
			}
		}

		chronicle = {
			entry = CHRONICLE_MASS_CONVERSION_VASSAL
			portrait = [converting_king.GetID]
		}

		# Increase tribal organization
		trigger_switch = {
			on_trigger = has_law

			tribal_organization_3 = {
				any_demesne_title = {
					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_4
						cooldown = no
						opinion_effect = no
					}
				}
			}

			tribal_organization_2 = {
				any_demesne_title = {
					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_3
						cooldown = no
						opinion_effect = no
					}
				}
			}

			tribal_organization_1 = {
				any_demesne_title = {
					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_2
						cooldown = no
						opinion_effect = no
					}
				}
			}

			tribal_organization_0 = {
				any_demesne_title = {

					show_scope_change = no

					limit = { higher_real_tier_than = COUNT }

					add_law = {
						law = tribal_organization_1
						cooldown = no
						opinion_effect = no
					}
				}
			}
		}

		hidden_effect = {
			if = {
				limit = { society_member_of = secret_religious_cult }

				if = {
					limit = { society_rank == 4 }

					# If leader of society of same religion, convert all secret provinces, disband society.
					if = {
						limit = { true_religion = event_target:sponsoring_king }

						root_secret_religion_provinces_convert_effect = yes

						society = {
							any_society_member = {
								limit = { same_realm = ROOT }
								leave_society = yes
							}
						}

						any_realm_character = {
							limit = { has_character_flag = currently_part_of_secret_religion_uncovering	}
							clr_character_flag = currently_part_of_secret_religion_uncovering
						}

						society = {
							any_society_member = {
								leave_society = yes
							}
						}
					}

					# If leader of society of other religion, disband society.
					else = {
						society = {
							any_society_member = {
								limit = { same_realm = ROOT }
								leave_society = yes
							}
						}

						any_realm_character = {
							limit = { has_character_flag = currently_part_of_secret_religion_uncovering	}
							clr_character_flag = currently_part_of_secret_religion_uncovering
						}

						society = {
							any_society_member = {
								leave_society = yes
							}
						}
					}
				}
				else = {
					# If member of society of same religion, convert all secret provinces inside realm, then leave society.
					if = {
						limit = { true_religion = event_target:sponsoring_king }

						root_secret_religion_provinces_convert_effect = yes
						leave_society = yes
					}
					# If member of society of other religion, leave society.
					else = {
						leave_society = yes
					}
				}
			}
		}

		if = {
			limit = { NOT = { religion_group = event_target:sponsoring_king } }

			if = {
				limit = { trait = zealous }

				remove_trait_zealous_effect = yes

				trigger_switch = {
					on_trigger = religion_group

					christian = { add_trait = sympathy_christendom }
					muslim = { add_trait = sympathy_islam }
					pagan_group = { add_trait = sympathy_pagans }
					zoroastrian_group = { add_trait = sympathy_zoroastrianism }
					jewish_group = { add_trait = sympathy_judaism }
				}
			}
			else_if = {
				limit = { NOT = { trait = cynical } }

				random = {
					chance = 60

					trigger_switch = {
						on_trigger = religion_group

						christian = { add_trait = sympathy_christendom }
						muslim = { add_trait = sympathy_islam }
						pagan_group = { add_trait = sympathy_pagans }
						zoroastrian_group = { add_trait = sympathy_zoroastrianism }
						jewish_group = { add_trait = sympathy_judaism }
					}
				}
			}
		}
		else_if = {
			limit = {
				trait = zealous
				NOT = { religion = event_target:sponsoring_king }
			}

			remove_trait_zealous_effect = yes
		}

		tooltip = {
			religion = event_target:sponsoring_king
		}

		hidden_effect = {
			# Workaround for automatic usurption of theocratic characters
			event_target:sponsoring_king = {
				religion_scope = {
					save_event_target_as = target_religion
				}
			}

			convert_religion_failsafe_effect = yes
		}

		if = { # Give Baptised Trait if Christian and a bishop is available.
			limit = {
				event_target:sponsoring_king = {
					religion_group = christian

					any_courtier_or_vassal = {
						is_theocracy = yes
						religion = event_target:sponsoring_king
						block_general_event_trigger = no

						OR = {
							higher_real_tier_than = BARON
							is_antipope = yes
							is_cardinal = yes
						}
					}
				}
			}

			custom_tooltip = {
				text = tooltip_gain_baptized_by_bishop

				event_target:sponsoring_king = {
					random_courtier_or_vassal = {
						limit = {
							is_theocracy = yes
							religion = event_target:sponsoring_king
							block_general_event_trigger = no

							OR = {
								higher_real_tier_than = BARON
								is_antipope = yes
								is_cardinal = yes
							}
						}

						save_event_target_as = scoped_baptizer
					}
				}

				save_persistent_event_target = {
					name = baptizing_bishop_per
					scope = event_target:scoped_baptizer
				}

				add_trait = baptized_by_bishop
			}
		}

		custom_tooltip = {
			text = ALL_PROVINCES_CONVERT_TOOLTIP

			any_demesne_province = {
				religion = event_target:sponsoring_king
			}
		}

		any_realm_character = {
			limit = { has_character_flag = liege_is_truebeliever }

			character_event = {
				id = HF.20026
				days = 2
			}
		}
	}

	option = { # True believers won't convert
		name = EVTOPTBHF20008

		trigger = {
			OR = {
				has_character_flag = ai_flag_refuse_conversion
				has_character_flag = liege_is_truebeliever

				trigger_if = {
					limit = { is_ruler = no }

					liege = {
						OR = {
							has_character_flag = ai_flag_refuse_conversion
							has_character_flag = liege_is_truebeliever
						}
					}
				}
			}
		}

		chronicle = {
			entry = CHRONICLE_MASS_CONVERSION_VASSAL
			portrait = [converting_king.GetID]
		}

		piety = 30

		random = {
			chance = 20

			if = {
				limit = {
					NOT = { trait = zealous }
				}

				remove_trait_silently_cynical_effect = yes
				tooltip = { add_trait = zealous }
				hidden_effect = { add_trait_zealous_effect = yes }
			}
		}

		# Chance of becoming rival with ruler after not baptizing
		hidden_effect = {
			random_list = {
				99 = {
					mult_modifier = {
						factor = 1.75

						opinion = {
							who = FROM
							value >= 100
						}
					}

					mult_modifier = {
						factor = 1.5

						opinion = {
							who = FROM
							value >= 80
						}
					}

					mult_modifier = {
						factor = 1.25

						opinion = {
							who = FROM
							value >= 60
						}
					}

					mult_modifier = {
						factor = 1.15

						opinion = {
							who = FROM
							value >= 40
						}
					}

					mult_modifier = {
						factor = 1.15

						opinion = {
							who = FROM
							value >= 20
						}
					}

					mult_modifier = {
						factor = 1.15

						opinion = {
							who = FROM
							value >= 0
						}
					}

					mult_modifier = {
						factor = 0.9

						opinion = {
							who = FROM
							value < 0
						}
					}

					mult_modifier = {
						factor = 0.9

						opinion = {
							who = FROM
							value < -20
						}
					}

					mult_modifier = {
						factor = 0.9

						opinion = {
							who = FROM
							value < -40
						}
					}

					mult_modifier = {
						factor = 0.7

						opinion = {
							who = FROM
							value < -60
						}
					}

					mult_modifier = {
						factor = 0.5

						opinion = {
							who = FROM
							value < -80
						}
					}

					mult_modifier = {
						factor = 1.75
						trait = cynical
					}

					mult_modifier = {
						factor = 0.75
						trait = zealous
					}
				}

				1 = {
					trigger = {
						higher_real_tier_than = BARON
						event_target:converting_king = { num_of_rivals < 3 }
					}

					character_event = {
						id = HF.20010
						days = 12
						random = 20
					}
				}
			}
		}

		any_realm_character = {
			limit = { has_character_flag = liege_is_truebeliever }

			character_event = {
				id = HF.20026
				days = 2
			}
		}
	}
}

# Courtiers\Vassals of Vassals: your direct liege will convert
letter_event = {
	id = HF.20009
	desc = EVTDESCHF20009
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	immediate = {
		set_character_flag = flag_vassal_asked_baptism
	}

	option = { # Will convert
		name = EVTOPTAHF20009

		ai_chance = {
			factor = 90

			trigger = {
				NOT = { has_character_flag = ai_flag_refuse_conversion }

				liege = {
					trigger_if = {
						limit = { has_character_flag = ai_flag_refuse_conversion }
						religion = event_target:sponsoring_king
					}

					NOT = { has_character_flag = liege_is_truebeliever }
				}
			}
		}
	}

	option = { # Won't convert
		name = EVTOPTBHF20009

		set_character_flag = ai_flag_refuse_conversion

		ai_chance = {
			factor = 10

			trigger = {
				OR = {
					has_character_flag = ai_flag_refuse_conversion

					liege = {
						OR = {
							trigger_if = {
								limit = { has_character_flag = ai_flag_refuse_conversion }
								NOT = { religion = event_target:sponsoring_king }
							}

							has_character_flag = liege_is_truebeliever
						}
					}
				}
			}
		}
	}

	after = {
		any_vassal = {
			letter_event = { id = HF.20009 }
		}
	}
}

# A Vassal has become Rival of his liege because of the baptism
character_event = {
	id = HF.20010
	desc = EVTDESCHF20010
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_religion
	portrait = event_target:converting_king

	is_triggered_only = yes

	trigger = {
		event_target:converting_king = {
			num_of_rivals < 3
		}
	}

	option = {
		name = EVTOPTAHF20010

		add_rival = event_target:converting_king

		event_target:converting_king = {
			character_event = { id = HF.20011 }
		}
	}
}

# Liege is notified of Rivalry
character_event = {
	id = HF.20011
	desc = EVTDESCHF20011
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHF20011

		tooltip = {
			add_rival = FROM
		}
	}
}

### on_actions notifications

# on_conversion: sponsor changes religion in the middle of baptism
character_event = {
	id = HF.20012

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_sponsoring_baptism

	trigger = {
		has_any_opinion_modifier = opinion_baptism_sponsor_target
	}

	immediate = {
		any_opinion_modifier_target = {
			limit = {
				has_character_flag = flag_converting_baptism

				has_opinion_modifier = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}
			}

			character_event = { id = HF.20013 }
		}
	}
}

# Converter be warned! Your sponsor is no longer of the same religion.
character_event = {
	id = HF.20013
	desc = EVTDESCHF20013
	picture = GFX_evt_rival_rulers
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = { # Stop the ceremony
		name = EVTOPTAHF20013

		clr_character_flag = flag_converting_baptism

		hidden_effect = {
			any_realm_character = {
				clr_character_flag = flag_deceitful_baptism

				if = {
					limit = { has_character_flag = flag_vassal_asked_baptism }
					character_event = { id = HF.20032 }
				}
			}
		}

		remove_opinion = {
			name = opinion_baptism_sponsor_target
			who = FROM
		}

		FROM = {
			show_scope_change = no

			clr_character_flag = flag_sponsoring_baptism

			remove_opinion = {
				name = opinion_baptism_sponsor_target
				who = ROOT
			}
		}

		ai_chance = { factor = 100 }
	}

	option = { # Proceed anyway
		name = EVTOPTBHF20013

		ai_chance = {
			factor = 10

			trigger = { trait = lunatic }
		}
	}
}

# on_death: sponsor dies before baptism
character_event = {
	id = HF.20014

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_sponsoring_baptism

	trigger = {
		has_any_opinion_modifier = opinion_baptism_sponsor_target
	}

	immediate = {
		any_opinion_modifier_target = {
			limit = {
				has_character_flag = flag_converting_baptism

				has_opinion_modifier = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}
			}

			character_event = { id = HF.20015 }
		}

		clr_character_flag = flag_sponsoring_baptism
	}
}

# Converter be warned! Your sponsor is no longer alive. Chain ENDS.
character_event = {
	id = HF.20015
	desc = EVTDESCHF20015
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20015

		clr_character_flag = flag_converting_baptism

		hidden_effect = {
			any_realm_character = {
				clr_character_flag = flag_deceitful_baptism

				if = {
					limit = { has_character_flag = flag_vassal_asked_baptism }
					character_event = { id = HF.20033 }
				}
			}
		}
	}
}

# on_death: converter dies before baptism
character_event = {
	id = HF.20016

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_converting_baptism

	trigger = {
		has_any_opinion_modifier = opinion_baptism_sponsor_target
	}

	immediate = {
		any_opinion_modifier_target = {
			limit = {
				has_character_flag = flag_sponsoring_baptism

				has_opinion_modifier = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}
			}

			character_event = { id = HF.20017 }
		}

		clr_character_flag = flag_converting_baptism
	}
}

# Sponsor be warned! Your converter is no longer alive. Chain ENDS.
character_event = {
	id = HF.20017
	desc = EVTDESCHF20017
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20017

		clr_character_flag = flag_sponsoring_baptism
	}
}

# on_conversion: converter changes religion after baptism
character_event = {
	id = HF.20018

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_converted_baptism

	trigger = {
		has_any_opinion_modifier = opinion_baptism_sponsor_target
	}

	immediate = {
		any_opinion_modifier_target = {
			limit = {
				has_character_flag = flag_sponsored_baptism

				has_opinion_modifier = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}
			}

			character_event = { id = HF.20019 }
		}

		clr_character_flag = flag_converted_baptism
	}
}

# Sponsor be warned! Your converter converted again after his baptism.
character_event = {
	id = HF.20019
	desc = EVTDESCHF20019
	picture = GFX_evt_rival_rulers
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = { # Relation is over.
		name = EVTOPTAHF20019

		remove_opinion = {
			name = opinion_baptism_sponsor_target
			who = FROM
		}

		reverse_remove_opinion = {
			name = opinion_baptism_sponsor_target
			who = FROM
		}

		ai_chance = { factor = 90 }
	}

	option = { # Maintain Non-Aggression Pact regardless.
		name = EVTOPTBHF20019

		ai_chance = {
			factor = 10

			trigger = {
				OR = {
					trait = lunatic
					trait = cynical
				}
			}
		}
	}
}

# on_conversion: Sponsor changes religion after baptism
character_event = {
	id = HF.20020

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_sponsored_baptism

	trigger = {
		has_any_opinion_modifier = opinion_baptism_sponsor_target
	}

	immediate = {
		any_opinion_modifier_target = {
			limit = {
				has_character_flag = flag_converted_baptism

				has_opinion_modifier = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}
			}

			character_event = { id = HF.20021 }
		}
	}
}

# Converter be warned! Your sponsor converted after baptism.
character_event = {
	id = HF.20021
	desc = EVTDESCHF20021
	picture = GFX_evt_rival_rulers
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = { # Relation is over
		name = EVTOPTAHF20021

		clr_character_flag = flag_converted_baptism
		clr_character_flag = flag_converter_diplomacy_check
		clr_character_flag = flag_converter_martial_check
		clr_character_flag = flag_converter_intrigue_check
		clr_character_flag = flag_converter_learning_check
		clr_character_flag = flag_converter_feast_4
		clr_character_flag = flag_converter_feast_3
		clr_character_flag = flag_converter_feast_2
		clr_character_flag = flag_converter_feast_1
		clr_character_flag = flag_converter_missionary_welcome
		clr_character_flag = flag_converter_welcome
		clr_character_flag = flag_missionary_welcome
		clr_character_flag = flag_sponsor_no_welcome
		clr_character_flag = flag_baptism_sponsor_visit

		hidden_effect = {
			set_variable = {
				which = converter_goodwill
				value = 0
			}
		}

		remove_opinion = {
			name = opinion_baptism_sponsor_target
			who = FROM
		}

		reverse_remove_opinion = {
			name = opinion_baptism_sponsor_target
			who = FROM
		}

		ai_chance = { factor = 90 }
	}

	option = { # Maintain Non-Aggression Pact regardless.
		name = EVTOPTBHF20021

		ai_chance = {
			factor = 10

			trigger = {
				OR = {
					trait = lunatic
					trait = cynical
				}
			}
		}
	}
}

# on_death: Sponsor died after baptism
character_event = {
	id = HF.20022

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_sponsored_baptism

	trigger = {
		has_any_opinion_modifier = opinion_baptism_sponsor_target
	}

	immediate = {
		any_opinion_modifier_target = {
			limit = {
				has_character_flag = flag_converted_baptism

				has_opinion_modifier = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}
			}

			character_event = { id = HF.20023 }
		}
	}
}

# Converter be warned! Your sponsor died after baptism.
character_event = {
	id = HF.20023
	desc = EVTDESCHF20023
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20023

		clr_character_flag = flag_converted_baptism
		clr_character_flag = flag_converter_diplomacy_check
		clr_character_flag = flag_converter_martial_check
		clr_character_flag = flag_converter_intrigue_check
		clr_character_flag = flag_converter_learning_check
		clr_character_flag = flag_converter_feast_4
		clr_character_flag = flag_converter_feast_3
		clr_character_flag = flag_converter_feast_2
		clr_character_flag = flag_converter_feast_1
		clr_character_flag = flag_converter_missionary_welcome
		clr_character_flag = flag_converter_welcome
		clr_character_flag = flag_missionary_welcome
		clr_character_flag = flag_sponsor_no_welcome
		clr_character_flag = flag_baptism_sponsor_visit

		hidden_effect = {
			set_variable = {
				which = converter_goodwill
				value = 0
			}
		}
	}
}

###############################################################

# Addition to religious_events/character_event 39601. Potential sponsor sent missionary, potential convert asks to have a mass baptism.
letter_event = {
	id = HF.20024
	desc = EVTDESCHF20024
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20000

		custom_tooltip = {
			text = accept_baptism_request

			hidden_effect = {
				opinion = {
					name = opinion_baptism_sponsor_target
					who = FROM
					years = 20
					origin_description = EVTTOOLTIPHFA20005
				}

				set_character_flag = flag_sponsoring_baptism
				save_event_target_as = sponsoring_king

				FROM = {
					opinion = {
						name = opinion_baptism_sponsor_target
						who = ROOT
						years = 20
						origin_description = EVTTOOLTIPHFB20005
					}

					set_character_flag = flag_converting_baptism
					save_event_target_as = converting_king

					letter_event = {
						id = HF.20002
						days = 5
						random = 5
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTBHF20000

		FROM = {
			show_scope_change = no

			letter_event = {
				id = HF.20001
				days = 5
				random = 5
				tooltip = refuse_baptism_request
			}
		}

		ai_chance = { factor = 0 }
	}
}

###############################################################

# Vassal of vassal informed that his direct liege won't baptize.
letter_event = {
	id = HF.20025
	desc = EVTDESCHF20025
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = { # Vassal of vassal doesn't baptize either
		name = EVTOPTAHF20025

		set_character_flag = liege_is_truebeliever

		any_vassal = {
			letter_event = { id = HF.20025 }
		}
	}

	option = { # Only for Player, if he wants to convert with his top_liege.
		name = EVTOPTBHF20025

		reverse_opinion = {
			name = opinion_denied_request
			who = FROM
			years = 5
		}

		any_vassal = {
			letter_event = { id = HF.20009 }
		}

		ai_chance = { factor = 0 }
	}
}

# Cleanup flag for vassals of vassals after mass conversion.
character_event = {
	id = HF.20026

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		clr_character_flag = liege_is_truebeliever
	}
}

# on_conversion of deceitful player character fake baptism.
# FROM is old religion
character_event = {
	id = HF.20027

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_deceitful_baptism

	immediate = {
		set_secret_religion = FROM
		join_society = secret_religious_cult

		if = {
			limit = {
				society = {
					NOT = { leader = { always = yes } }
				}

				liege = {
					NOT = { has_character_flag = flag_deceitful_baptism }
				}
			}

			set_society_grandmaster = yes
			add_society_currency_massive_effect = yes # Give the Grand Master a start-up capital to induct members
		}

		if = {
			limit = { higher_real_tier_than = BARON }

			trigger_switch = {
				on_trigger = secret_religion

				tengri_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_tengri_pagan_community
								duration = -1
							}
						}
					}
				}

				norse_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_norse_pagan_community
								duration = -1
							}
						}
					}
				}

				baltic_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_baltic_pagan_community
								duration = -1
							}
						}
					}
				}

				finnish_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_finnish_pagan_community
								duration = -1
							}
						}
					}
				}

				slavic_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_slavic_pagan_community
								duration = -1
							}
						}
					}
				}

				west_african_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_west_african_pagan_community
								duration = -1
							}
						}
					}
				}

				zun_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_zun_pagan_community
								duration = -1
							}
						}
					}
				}

				aztec_pagan = {
					any_demesne_province = {
						random = {
							chance = 80

							add_province_modifier = {
								name = secret_aztec_pagan_community
								duration = -1
							}
						}
					}
				}
			}
		}

		clr_character_flag = flag_deceitful_baptism
	}
}

# Courtiers\Vassals of Vassals: your direct liege will pretend to convert.
letter_event = {
	id = HF.20028
	desc = EVTDESCHF20028
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = { # Pretend to convert with him.
		name = EVTOPTAHF20028

		set_character_flag = flag_deceitful_baptism

		any_vassal = {
			letter_event = { id = HF.20028 }
		}
	}

	option = { # Player only, to convert with the top_liege.
		name = EVTOPTBHF20028

		ai_chance = { factor = 0 }
	}
}

# Random True Believer vassal has chance to start a rebellion.
long_character_event = {
	id = HF.20029
	desc = EVTDESCHF20029
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_long_frame_religion

	is_triggered_only = yes

	trigger = {
		vassal_of = event_target:converting_king
		higher_real_tier_than = BARON
		NOT = { religion = event_target:converting_king }
	}

	option = {
		name = EVTOPTAHF20029

		set_character_flag = flag_truebelievers_revolter

		custom_tooltip = {
			text = truebelievers_preparation_tooltip

			start_faction = { faction = faction_true_believers }

			event_target:converting_king = {
				any_vassal = {
					limit = {
						religion = ROOT
						NOT = { character = ROOT }
					}

					letter_event = { id = HF.20030 } # Call to Arms
				}
			}
		}

		character_event = {
			id = HF.20092 # War actually starts.
			days = 4
		}
	}

	option = { # Player refuses to start a war
		name = EVTOPTBHF20029

		trigger = { ai = no }
	}
}


# Other True Believers join the cause
letter_event = {
	id = HF.20030
	desc = EVTDESCHF20030
	border = GFX_event_letter_frame_religion

	trigger = {
		vassal_of = event_target:converting_king
		religion = FROM
	}

	is_triggered_only = yes

	option = { # Join Independence war
		name = EVTOPTAHF20030

		trigger = { has_character_flag = ai_flag_refuse_conversion }

		# set_character_flag = flag_truebelievers_revolter

		join_faction = {
			faction = faction_true_believers
			faction_leader = FROM
		}

		ai_chance = { factor = 99 }
	}

	option = { # Refuse.
		name = EVTOPTBHF20030

		ai_chance = {
			factor = 1

			trigger = {
				NOT = { has_character_flag = ai_flag_refuse_conversion }
			}
		}
	}
}

# Notify converted players of the revolt
character_event = {
	id = HF.20031
	desc = EVTDESCHF20031
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHF20031
	}
}

# The True Believers have gathered, now time to actually start the war.
character_event = {
	id = HF.20092
	desc = EVTDESCHF20092
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		vassal_of = event_target:converting_king
		higher_real_tier_than = BARON
		NOT = { religion = event_target:converting_king }
	}

	option = {
		name = EVTOPTAHF20092

		hidden_effect = {
			event_target:converting_king = {
				character_event = { id = HF.20031 } # Notification to converts

				any_player = {
					limit = {
						vassal_of = PREV

						NOR = {
							religion = ROOT
							character = ROOT
						}
					}

					character_event = { id = HF.20031 } # Notification to converts
				}

				any_vassal = {
					limit = { in_faction = faction_true_believers }

					reverse_opinion = {
						name = opinion_charge_traitor
						who = PREV
						years = 20
					}
				}
			}

			set_defacto_liege = top_liege
		}

		war = {
			target = liege
			casus_belli = truebelievers_bid_for_independence
			faction = faction_true_believers
		}

		prestige = 500
		piety = 200
	}
}

# Notify any vassal in the middle of a baptism that the sponsor changed faith and the whole thing is off
character_event = {
	id = HF.20032
	desc = EVTDESCHF20032
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTAHF20032

		clr_character_flag = flag_vassal_asked_baptism
	}
}

# Notify any vassal in the middle of a baptism that the sponsor died and the whole thing is off
character_event = {
	id = HF.20033
	desc = EVTDESCHF20033
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = I_SEE

		clr_character_flag = flag_vassal_asked_baptism
	}
}

# on_death: True believer player vassal dies after receiving conversion letter and before the ceremony, give chance to heir to become true believer as well.
character_event = {
	id = HF.20034

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = ai_flag_refuse_conversion

	trigger = {
		liege = { has_character_flag = flag_converting_baptism }
	}

	immediate = {
		player_heir = {
			character_event = {
				id = HF.20035
				days = 1
			}
		}
	}
}

# Does the true believer's heir convert or does he remain faithful to his liege?
character_event = {
	id = HF.20035
	desc = EVTDESCHF20035
	picture = GFX_evt_viking_funeral_oldgods
	border = GFX_event_normal_frame_religion

	trigger = {
		liege = { has_character_flag = flag_converting_baptism }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20035

		set_character_flag = ai_flag_refuse_conversion

		ai_chance = {
			factor = 50

			trigger = { trait = zealous }
		}
	}

	option = {
		name = EVTOPTBHF20035

		trigger = {
			NOT = { has_character_flag = ai_flag_refuse_conversion }
		}

		ai_chance = { factor = 50 }
	}
}

# Converter: Sponsor sends a new priest to help convert everybody
character_event = {
	id = HF.20036
	desc = EVTDESCHF20036
	picture = GFX_evt_bishop
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		create_random_priest = {
			random_traits = yes
			dynasty = none
			culture = event_target:sponsoring_king
			religion = event_target:sponsoring_king
			female = no
			age = 35

			attributes = {
				learning = 7
				diplomacy = 5
			}
		}

		new_character = {
			give_job_title = job_spiritual
			save_event_target_as = convert_lord_spiritual
		}
	}

	option = {
		name = EVTOPTAHF20036

		show_portrait = event_target:convert_lord_spiritual

		# Umbrella list for Umbrella lists
		character_event = {
			id = HF.20118 # Change name
			days = 10
			random = 10
		}

		event_target:convert_lord_spiritual = {
			character_event = {
				id = HF.20110 # Priest flavor
				days = 150
				random = 50
			}
		}

		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Hidden Umbrella event for flavor events for the Converter. (single, with double option).
character_event = {
	id = HF.20037

	is_triggered_only = yes
	hide_window = yes

	only_rulers = yes
	has_character_flag = flag_converted_baptism

	trigger = {
		event_target:sponsoring_king = { is_ruler = yes }
	}

	immediate = {
		random_list = {
			# Picking the positive trait option gives piety, takes away prestige, has a chance to give the trait.

			# Becoming Zealous after conversion 							flag_converter_zealous
			# Becoming Cynical after conversion 							flag_converter_cynical
			# Becoming Kind after conversion (indian/christian) 			flag_converter_kind
			# Becoming Humble after conversion (indian/christian) 			flag_converter_humble
			# Becoming Brave after conversion (reformednorse/tengri) 		flag_converter_brave
			# Becoming Charitable after conversion (muslim)					flag_converter_charitable
			# Becoming Temperate after conversion (christian/indian) 		flag_converter_temperate
			# Flat piety boon
			# Skip a turn

			16 = { # Zealous
				trigger = {
					NOR = {
						has_character_flag = flag_converter_zealous
						trait = zealous
					}
				}

				mult_modifier = {
					factor = 0.75
					pacifist = yes
				}

				set_character_flag = flag_converter_zealous
				character_event = { id = HF.20039 }
			}

			1 = { # Cynical
				trigger = {
					NOR = {
						has_character_flag = flag_converter_cynical
						trait = cynical
					}
				}

				mult_modifier = {
					factor = 1.5
					religion = hellenic_pagan_reformed
				}

				set_character_flag = flag_converter_cynical
				character_event = { id = HF.20040 }
			}

			11 = { # Kind
				trigger = {
					NOR = {
						has_character_flag = flag_converter_kind
						trait = kind
					}
				}

				mult_modifier = {
					factor = 1.5

					OR = {
						religion_group = christian
						religion_group = indian_group
					}
				}

				set_character_flag = flag_converter_kind
				character_event = { id = HF.20041 }
			}

			11 = { # Humble
				trigger = {
					NOR = {
						has_character_flag = flag_converter_humble
						trait = humble
					}
				}

				mult_modifier = {
					factor = 0.5
					religion_group = pagan_group
				}

				mult_modifier = {
					factor = 1.25

					OR = {
						religion_group = christian
						religion_group = indian_group
					}
				}

				set_character_flag = flag_converter_humble
				character_event = { id = HF.20042 }
			}

			16 = { # Brave
				trigger = {
					NOR = {
						has_character_flag = flag_converter_brave
						trait = brave
					}
				}

				mult_modifier = {
					factor = 1.5
					religion_group = pagan_group
				}

				mult_modifier = {
					factor = 0.5

					OR = {
						religion_group = christian
						religion_group = indian_group
					}
				}

				set_character_flag = flag_converter_brave
				character_event = { id = HF.20043 }
			}

			15 = { # Charitable
				trigger = {
					NOR = {
						has_character_flag = flag_converter_charitable
						trait = charitable
					}
				}

				mult_modifier = {
					factor = 0.5
					religion_group = pagan_group
				}

				mult_modifier = {
					factor = 1.25
					religion_group = muslim
				}

				set_character_flag = flag_converter_charitable
				character_event = { id = HF.20044 }
			}

			10 = { # Temperate
				trigger = {
					NOR = {
						has_character_flag = flag_converter_temperate
						trait = temperate
					}
				}

				mult_modifier = {
					factor = 0.5
					religion_group = pagan_group
				}

				mult_modifier = {
					factor = 1.25

					OR = {
						religion_group = christian
						religion_group = indian_group
					}
				}

				set_character_flag = flag_converter_temperate
				character_event = { id = HF.20045 }
			}

			15 = { # Piety
				character_event = { id = HF.20046 }
			}

			5 = {
				character_event = { id = HF.20038 }
			}
		}
	}
}

# Hidden Umbrella event for flavor events for the Sponsor.
character_event = {
	id = HF.20038

	is_triggered_only = yes
	hide_window = yes

	only_rulers = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
			has_character_flag = flag_converted_baptism
			has_any_opinion_modifier = opinion_baptism_sponsor_target
		}
	}

	immediate = {
		random_list = {
			# Fund Church Construction / Send Money / Send Inquisition / Do Nothing
			60 = {
				character_event = { id = HF.20047 }
			}

			# Visit Converter / Do Nothing
			40 = {
				trigger = {
					is_incapable = no
					is_inaccessible_trigger = no
					war = no

					event_target:converting_king = {
						NOT = { has_character_flag = flag_baptism_sponsor_visit } # Only once per Baptism
					}
				}

				mult_modifier = {
					factor = 1.5
					trait = pilgrim
				}

				mult_modifier = {
					factor = 1.25
					trait = gregarious
				}

				character_event = { id = HF.20048 }
			}
		}
	}
}

# Converter: Chance to become Zealous
character_event = {
	id = HF.20039
	desc = EVTDESCHF20039
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20039

		if = {
			limit = { trait = cynical }

			piety = 100
			prestige = -50

			random = {
				chance = 75
				remove_trait_cynical_effect = yes
			}
		}
		else = {
			piety = 150
			prestige = -50

			random = {
				chance = 65
				add_trait_zealous_effect = yes
			}
		}

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTBHF20039

		piety = -25

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = cynical
			}

			mult_modifier = {
				factor = 1.25
				trait = craven
			}

			mult_modifier = {
				factor = 1.25
				trait = slothful
			}

			mult_modifier = {
				factor = 1.25
				religion_group = indian_group
			}
		}
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Converter: Chance to become Cynical
character_event = {
	id = HF.20040
	desc = EVTDESCHF20040
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20040

		if = {
			limit = { trait = zealous }

			piety = -100
			prestige = 50

			random = {
				chance = 75
				remove_trait_zealous_effect = yes
			}
		}
		else = {
			piety = -150
			prestige = 50

			random = {
				chance = 65
				add_trait_cynical_effect = yes
			}
		}

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTBHF20040

		piety = 25

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = zealous
			}

			mult_modifier = {
				factor = 1.25
				trait = brave
			}

			mult_modifier = {
				factor = 1.25
				trait = slothful
			}

			mult_modifier = {
				factor = 1.25
				religion_group = muslim
			}
		}
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Converter: Chance to become Kind
character_event = {
	id = HF.20041
	desc = EVTDESCHF20041
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20041

		if = {
			limit = { trait = cruel }

			piety = 100
			prestige = -50

			random = {
				chance = 75
				remove_trait_cruel_effect = yes
			}
		}
		else = {
			piety = 150
			prestige = -50

			random = {
				chance = 65
				add_trait_kind_effect = yes
			}
		}

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTBHF20041

		piety = -25

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = cruel
			}

			mult_modifier = {
				factor = 1.25
				trait = greedy
			}

			mult_modifier = {
				factor = 1.25
				trait = slothful
			}

			mult_modifier = {
				factor = 1.25
				religion_group = pagan_group
			}
		}
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Converter: Chance to become Humble
character_event = {
	id = HF.20042
	desc = EVTDESCHF20042
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20042

		if = {
			limit = { trait = proud }

			piety = 100
			prestige = -50

			random = {
				chance = 75
				remove_trait_proud_effect = yes
			}
		}
		else = {
			piety = 150
			prestige = -50

			random = {
				chance = 65
				add_trait_humble_effect = yes
			}
		}

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTBHF20042

		piety = -25

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = proud
			}

			mult_modifier = {
				factor = 1.25
				trait = brave
			}

			mult_modifier = {
				factor = 1.25
				trait = gregarious
			}

			mult_modifier = {
				factor = 1.25
				religion_group = pagan_group
			}
		}
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Converter: Chance to become Brave
character_event = {
	id = HF.20043
	desc = EVTDESCHF20043
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20043

		if = {
			limit = { trait = craven }

			piety = 100
			prestige = -50

			random = {
				chance = 75
				remove_trait_craven_effect = yes
			}
		}
		else = {
			piety = 150
			prestige = -50

			random = {
				chance = 65
				add_trait_brave_effect = yes
			}
		}

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTBHF20043

		piety = -25

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = craven
			}

			mult_modifier = {
				factor = 1.25
				trait = shy
			}

			mult_modifier = {
				factor = 1.25
				trait = slothful
			}

			mult_modifier = {
				factor = 1.25
				religion_group = indian_group
			}
		}
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Converter: Chance to become Charitable
character_event = {
	id = HF.20044
	desc = EVTDESCHF20044
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20044

		if = {
			limit = { trait = greedy }

			piety = 100
			prestige = -50

			random = {
				chance = 75
				remove_trait_greedy_effect = yes
			}
		}
		else = {
			piety = 150
			prestige = -50

			random = {
				chance = 65
				add_trait_charitable_effect = yes
			}
		}

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTBHF20044

		piety = -25

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = greedy
			}

			mult_modifier = {
				factor = 1.25
				trait = paranoid
			}

			mult_modifier = {
				factor = 1.25
				trait = slothful
			}

			mult_modifier = {
				factor = 1.25
				religion_group = pagan_group
			}
		}
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Converter: Chance to become Temperate
character_event = {
	id = HF.20045
	desc = EVTDESCHF20045
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20045

		if = {
			limit = { trait = gluttonous }

			piety = 100
			prestige = -50

			random = {
				chance = 75
				remove_trait_gluttonous_effect = yes
			}
		}
		else = {
			piety = 150
			prestige = -50

			random = {
				chance = 65
				add_trait_temperate_effect = yes
			}
		}

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTBHF20045

		piety = -25

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = lustful
			}

			mult_modifier = {
				factor = 1.25
				trait = shy
			}

			mult_modifier = {
				factor = 1.5
				religion_group = pagan_group
			}
		}
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Converter: Flat piety boon
character_event = {
	id = HF.20046
	desc = EVTDESCHF20046
	picture = GFX_evt_knight_kneeling
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20046

		piety = 100
		prestige = -50

		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Sponsor: Give options to help Converter with his tribal realm.
character_event = {
	id = HF.20047
	desc = EVTDESCHF20047
	picture = GFX_evt_rival_rulers
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		is_ruler = yes

		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	option = { # Fund construction of a Church
		name = EVTOPTAHF20047

		trigger = {
			event_target:converting_king = {
				any_demesne_province = {
					has_empty_holding = yes
					has_temple = no
				}
			}
		}

		tooltip = {
			wealth = -300
			piety = 500
		}

		event_target:converting_king = {
			show_scope_change = no

			letter_event = {
				id = HF.20049
				tooltip = EVTTOOLTIPAHF20047
			}
		}

		ai_chance = {
			factor = 35

			trigger = { wealth >= -50 }

			mult_modifier = {
				factor = 1.5
				trait = zealous
			}

			mult_modifier = {
				factor = 0.5
				trait = cynical
			}

			mult_modifier = {
				factor = 0.25
				wealth < 300
			}

			mult_modifier = {
				factor = 0.1
				wealth < 0
			}
		}
	}

	option = { # Send Cash
		name = EVTOPTBHF20047

		if = {
			limit = { ai = no } # Cheating AI
			wealth = -100
		}

		piety = 300

		event_target:converting_king = {
			show_scope_change = no

			letter_event = {
				id = HF.20052
				tooltip = EVTTOOLTIPBHF20047
			}
		}

		ai_chance = {
			factor = 25

			trigger = { wealth >= -50 }

			mult_modifier = {
				factor = 1.5
				trait = charitable
			}

			mult_modifier = {
				factor = 0.5
				trait = greedy
			}

			mult_modifier = {
				factor = 0.25
				wealth < 200
			}

			mult_modifier = {
				factor = 0.1
				wealth < 0
			}

			mult_modifier = {
				factor = 0.01 # He already has enough gold.
				event_target:converting_king = { wealth >= 500 }
			}
		}
	}

	option = { # Send Proselytizers to convert remaining provinces
		name = EVTOPTCHF20047

		trigger = {
			event_target:converting_king = {
				any_realm_province = {
					religion_group = pagan_group
					is_reformed_religion = no
					NOT = { religion = ROOT }
				}
			}
		}

		event_target:converting_king = {
			show_scope_change = no

			letter_event = {
				id = HF.20054
				tooltip = EVTTOOLTIPCHF20047
			}
		}

		piety = 100

		ai_chance = {
			factor = 35

			trigger = { wealth >= -100 }

			mult_modifier = {
				factor = 0.5
				pacifist = yes
			}

			mult_modifier = {
				factor = 1.75
				religion_group = christian
			}

			mult_modifier = {
				factor = 0.5
				wealth < 0
			}
		}
	}

	option = { # Do nothing this turn
		name = EVTOPTDHF20047

		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				70 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				30 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}

		ai_chance = {
			factor = 5

			mult_modifier = {
				factor = 10 # If all other options have been exhausted, just skip a turn.

				event_target:converting_king = {
					wealth >= 500

					NOT = {
						any_demesne_province = {
							has_empty_holding = yes
							has_temple = no
						}
					}

					NOT = {
						any_realm_province = {
							religion_group = pagan_group
							is_reformed_religion = no
							NOT = { religion = ROOT }
						}
					}
				}
			}
		}
	}
}

# Sponsor: Do you wish to travel to your converter's realm?
character_event = {
	id = HF.20048
	desc = EVTDESCHF20048
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	hide_new = yes
	show_root = yes
	is_triggered_only = yes

	only_rulers = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	option = { # Travel to your Converter's realm
		name = EVTOPTAHF20048

		trigger = {
			event_target:sponsoring_king = {
				is_incapable = no
				is_inaccessible_trigger = no
			}

			event_target:converting_king = {
				is_incapable = no
			}
		}

		event_target:converting_king = {
			show_scope_change = no

			letter_event = {
				id = HF.20063
				tooltip = EVTTOOLTIPAHF20048
			}
		}

		set_character_flag = sponsor_travelling_converter
		add_trait = travelling # Travelling far, will need a regent.

		character_event = {
			id = HF.20091 # Safe remove travelling trait in case the chain is ended abruptly so that sponsor doesn't keep travelling to the end of times.
			days = 65
			random = 10
		}

		ai_chance = { factor = 90 }
	}

	option = { # Pass turn
		name = EVTOPTBHF20048

		event_target:converting_king = {
			character_event = {
				id = HF.20037 # Events for Converter
				days = 430
				random = 130
			}
		}

		ai_chance = { factor = 10 }
	}
}

# Converter: Sponsor wants to fund construction of a Church in your demesne.
letter_event = {
	id = HF.20049
	desc = EVTDESCHF20049
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = { # Agree
		name = EVTOPTAHF20049

		trigger = {
			any_demesne_province = {
				has_empty_holding = yes
				has_temple = no
			}
		}

		piety = 100

		opinion = {
			name = opinion_happy
			who = FROM
			years = 10
		}

		random_demesne_province = {
			show_scope_change = no

			limit = {
				has_empty_holding = yes
				has_temple = no
			}

			build_holding = {
				type = temple
				holder = ROOT
			}
		}

		FROM = {
			letter_event = {
				id = HF.20050
				days = 5
				random = 5
			}
		}
	}

	option = { # Disagree
		name = EVTOPTBHF20049

		piety = -50

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_denied_request
				who = ROOT
				years = 10
			}

			letter_event = {
				id = HF.20051
				days = 5
				random = 5
			}
		}

		ai_chance = { factor = 0 }
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Sponsor: Converter allowed the construction of a new church
letter_event = {
	id = HF.20050
	desc = EVTDESCHF20050
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20050

		tooltip = {
			reverse_opinion = {
				name = opinion_happy
				who = FROM
				years = 10
			}
		}

		piety = 500

		if = {
			limit = { ai = no } # Cheating AI
			wealth = -300
		}
	}
}

# Sponsor: Converter denied the construction of a new church
letter_event = {
	id = HF.20051
	desc = EVTDESCHF20051
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	option = {
		name = EVTOPTAHF20051

		tooltip = {
			opinion = {
				name = opinion_denied_request
				who = FROM
				years = 10
			}
		}
	}
}

# Converter: Sponsor sent you money
letter_event = {
	id = HF.20052
	desc = EVTDESCHF20052
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20052

		wealth = 100

		opinion = {
			name = opinion_happy
			who = FROM
			years = 10
		}

		FROM = {
			letter_event = {
				id = HF.20053
				days = 5
				random = 5
			}
		}

		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Sponsor: Converter is happy about the money
letter_event = {
	id = HF.20053
	desc = EVTDESCHF20053
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	option = {
		name = EVTOPTAHF20053

		tooltip = {
			reverse_opinion = {
				name = opinion_happy
				who = FROM
				years = 10
			}
		}
	}
}

# Converter: Sponsor is sending more priests to convert a province.
letter_event = {
	id = HF.20054
	desc = EVTDESCHF20054
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = { # Agree
		name = EVTOPTAHF20054

		trigger = {
			any_realm_province = {
				religion_group = pagan_group
				is_reformed_religion = no
				NOT = { religion = FROM }
			}
		}

		custom_tooltip = {
			text = baptism_new_missionaries_tooltip

			random_realm_province = {
				limit = {
					religion_group = pagan_group
					is_reformed_religion = no
					NOT = { religion = FROM }
				}

				random_list = {
					60 = {
						mult_modifier = {
							factor = 1.25

							event_target:convert_lord_spiritual = {
								has_job_title = job_spiritual
								vassal_of = ROOT
							}
						}

						province_event = {
							id = HF.20055 # Conversion successful
							days = 15
							random = 13
						}
					}

					40 = {
						province_event = {
							id = HF.20056 # Conversion successful but revolt risk increased.
							days = 15
							random = 13
						}
					}
				}
			}
		}

		opinion = {
			name = opinion_happy
			who = FROM
			years = 10
		}


		FROM = {
			letter_event = {
				id = HF.20057
				days = 5
				random = 5
			}
		}
	}

	option = { # Disagree
		name = EVTOPTBHF20054

		piety = -20

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_denied_request
				who = ROOT
				years = 10
			}

			letter_event = {
				id = HF.20058
				days = 5
				random = 5
			}
		}

		ai_chance = { factor = 0 }
	}

	after = {
		# Umbrella list for Umbrella lists
		hidden_effect = {
			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Province is converted easily to sponsor's faith
province_event = {
	id = HF.20055

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		religion = FROMFROM

		owner = {
			if = {
				limit = { NOT = { character = FROM } }
				character_event = { id = HF.20059 } # Notify owner if he's not the Converter
			}
		}

		FROM = {
			character_event = { id = HF.20060 }
		}
	}
}

# Province is converted to sponsor's faith, but peasants are upset
province_event = {
	id = HF.20056

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		religion = FROMFROM

		add_province_modifier = {
			name = force_converting
			years = 1
		}

		owner = {
			if = {
				limit = { NOT = { character = FROM } }
				character_event = { id = HF.20061 } # Notify owner if he's not the Converter
			}
		}

		FROM = {
			character_event = { id = HF.20062 }
		}
	}
}

# Sponsor: Converter allowed the conversion of another province
letter_event = {
	id = HF.20057
	desc = EVTDESCHF20057
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20057

		tooltip = {
			reverse_opinion = {
				name = opinion_happy
				who = FROM
				years = 10
			}
		}

		wealth = -30
		piety = 100
	}
}

# Sponsor: Converter denied the conversion of another province
letter_event = {
	id = HF.20058
	desc = EVTDESCHF20058
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	option = {
		name = I_SEE

		tooltip = {
			opinion = {
				name = opinion_denied_request
				who = FROM
				years = 10
			}
		}
	}
}

# Owner of converted province: Your province has been converted
character_event = {
	id = HF.20059
	desc = EVTDESCHF20059
	picture = GFX_evt_mass_baptism
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	option = {
		name = {
			text = EVTOPTAHF20059
			trigger = { religion = FROM }
		}
		name = {
			text = EVTOPTBHF20059
			trigger = {
				NOT = { religion = FROM }
			}
		}
	}
}

# Converter of converted province: Your province has been converted
character_event = {
	id = HF.20060
	desc = EVTDESCHF20060
	picture = GFX_evt_mass_baptism
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	option = {
		name = EVTOPTAHF20060
	}
}

# Owner of converted province: Your province has been converted but has unrest
character_event = {
	id = HF.20061
	desc = EVTDESCHF20061
	picture = GFX_evt_heretic
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	option = {
		name = {
			text = EVTOPTAHF20061
			trigger = { religion = FROM }
		}
		name = {
			text = EVTOPTBHF20061
			trigger = {
				NOT = { religion = FROM }
			}
		}
	}
}

# Converter of converted province: Your province has been converted but has unrest
character_event = {
	id = HF.20062
	desc = EVTDESCHF20062
	picture = GFX_evt_heretic
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	option = {
		name = EVTOPTAHF20062
	}
}

####################################################
## The Visit

# Converter: Sponsor has decided to pay you a visit.
letter_event = {
	id = HF.20063
	desc = EVTDESCHF20063
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:sponsoring_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:sponsoring_king = {
				character_event = { id = HF.20098 } # Notify sponsor that converter has become incapable
			}
		}
	}

	option = {
		name = INTERESTING

		set_character_flag = flag_baptism_sponsor_visit

		character_event = {
			id = HF.20064
			days = 5
			random = 5
		}
	}
}

# Converter: Prepare for the Sponsor's arrival.
character_event = {
	id = HF.20064
	desc = EVTDESCHF20064
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:sponsoring_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:sponsoring_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:sponsoring_king = {
				character_event = { id = HF.20098 } # Notify sponsor that converter has become incapable
			}
		}
	}

	option = {
		name = EVTOPTAHF20064

		wealth = -200

		set_character_flag = flag_converter_feast_4

		hidden_effect = {
			set_variable = {
				which = converter_goodwill
				value = 4
			}
		}

		ai_chance = {
			factor = 25

			trigger = { wealth >= 50  }

			mult_modifier = {
				factor = 0.1
				wealth < 100
			}
		}
	}

	option = {
		name = EVTOPTBHF20064

		wealth = -100

		set_character_flag = flag_converter_feast_3

		hidden_effect = {
			set_variable = {
				which = converter_goodwill
				value = 3
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 0.1
				wealth < 100
			}
		}
	}

	option = {
		name = EVTOPTCHF20064

		wealth = -50

		set_character_flag = flag_converter_feast_2

		hidden_effect = {
			set_variable = {
				which = converter_goodwill
				value = 2
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 0.1
				wealth < 50
			}
		}
	}

	option = {
		name = EVTOPTDHF20064

		set_character_flag = flag_converter_feast_1

		hidden_effect = {
			set_variable = {
				which = converter_goodwill
				value = 1
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 1.5
				trait = greedy
			}

			mult_modifier = {
				factor = 0.5
				trait = charitable
			}
		}
	}

	after = {
		event_target:sponsoring_king = {
			character_event = {
				id = HF.20065
				days = 5
				random = 5
			}
		}
	}
}

# Sponsor: The travel
character_event = {
	id = HF.20065
	desc = EVTDESCHF20065
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = { # If at any time the agreement is broken for whatever reason, abort the whole chain.
		event_target:converting_king = {
			is_ruler = yes
		}

		has_opinion_modifier = {
			who = event_target:converting_king
			name = opinion_baptism_sponsor_target
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = {
		name = EVTOPTAHF20065

		piety = 100

		FROM = {
			character_event = {
				id = HF.20066
				days = 15
				random = 5
			}
		}
	}
}

# Converter: Sponsor is arriving. Who goes to greet him?
character_event = {
	id = HF.20066
	desc = EVTDESCHF20066
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = { # If at any time the agreement is broken for whatever reason, abort the whole chain.
		event_target:sponsoring_king = {
			is_ruler = yes

			has_opinion_modifier = {
				who = event_target:converting_king
				name = opinion_baptism_sponsor_target
			}
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:sponsoring_king = {
				character_event = { id = HF.20098 } # Notify sponsor that converter has become incapable
			}
		}
	}

	option = { # Converter and the missionary chaplain go meet him.
		name = EVTOPTAHF20066

		trigger = {
			event_target:convert_lord_spiritual = {
				has_job_title = job_spiritual
				vassal_of = ROOT
			}
		}

		prestige = -100
		piety = 100

		set_character_flag = flag_converter_missionary_welcome

		hidden_effect = {
			change_variable = {
				which = converter_goodwill
				value = 3
			}
		}

		FROM = {
			character_event = { id = HF.20067 }
		}

		ai_chance = { factor = 25 }
	}

	option = { # Converter goes to meet him.
		name = EVTOPTBHF20066

		prestige = -100

		set_character_flag = flag_converter_welcome

		hidden_effect = {
			change_variable = {
				which = converter_goodwill
				value = 2
			}
		}

		ai_chance = { factor = 25 }
	}

	option = { # The missionary chaplain goes to meet him.
		name = EVTOPTCHF20066

		trigger = {
			event_target:convert_lord_spiritual = {
				has_job_title = job_spiritual
				vassal_of = ROOT
			}
		}

		piety = 50

		set_character_flag = flag_missionary_welcome

		hidden_effect = {
			change_variable = {
				which = converter_goodwill
				value = 1
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 1.5
				trait = shy
			}

			mult_modifier = {
				factor = 0.5
				trait = gregarious
			}
		}
	}

	option = {
		name = EVTOPTDHF20066

		set_character_flag = flag_sponsor_no_welcome

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 1.5
				trait = shy
			}

			mult_modifier = {
				factor = 0.5
				trait = gregarious
			}
		}
	}

	after = {
		FROM = {
			character_event = { id = HF.20067 }
		}
	}
}

# Sponsor: Arrival at the Converter's realm.
character_event = {
	id = HF.20067
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20067
		trigger = { FROM = { has_character_flag = flag_converter_missionary_welcome } }
	}
	desc = {
		text = EVTDESCBHF20067
		trigger = { FROM = { has_character_flag = flag_converter_welcome } }
	}
	desc = {
		text = EVTDESCCHF20067
		trigger = { FROM = { has_character_flag = flag_missionary_welcome } }
	}
	desc = {
		text = EVTDESCDHF20067
		trigger = { FROM = { has_character_flag = flag_sponsor_no_welcome } }
	}

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_capable = yes

	trigger = { # If at any time the agreement is broken for whatever reason, abort the whole chain.
		event_target:converting_king = {
			is_ruler = yes
		}

		has_opinion_modifier = {
			who = event_target:converting_king
			name = opinion_baptism_sponsor_target
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = { # Happy of welcome
		name = EVTOPTAHF20067

		trigger = {
			FROM = { NOT = { has_character_flag = flag_sponsor_no_welcome } }
		}

		custom_tooltip = { text = TOOLTIP_SPONSOR_VISIT_WELCOME_1 }

		piety = 25

		FROM = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				flag_sponsor_no_welcome = { prestige = -50 }
				flag_missionary_welcome = { piety = 50 }
				flag_converter_welcome = { prestige = 50 }
				flag_converter_missionary_welcome = {
					prestige = 50
					piety = 50
				}
			}

			character_event = { id = HF.20068 }
		}

		ai_chance = {
			factor = 60

			mult_modifier = {
				factor = 0.9
				trait = shy
			}

			mult_modifier = {
				factor = 0.9
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.9
				trait = cruel
			}

			mult_modifier = {
				factor = 0.75
				FROM = { has_character_flag = flag_sponsor_no_welcome }
			}
		}
	}

	option = { # Happy of welcome even if there's no welcome
		name = EVTOPTCHF20067

		trigger = { FROM = { has_character_flag = flag_sponsor_no_welcome } }

		custom_tooltip = { text = TOOLTIP_SPONSOR_VISIT_WELCOME_1 }

		piety = 30

		FROM = {
			show_scope_change = no

			prestige = -50
			character_event = { id = HF.20068 }
		}

		ai_chance = {
			factor = 20

			mult_modifier = {
				factor = 1.5
				trait = shy
			}

			mult_modifier = {
				factor = 0.7
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.5
				trait = gregarious
			}

			mult_modifier = {
				factor = 0.75
				FROM = { has_character_flag = flag_sponsor_no_welcome }
			}
		}
	}

	option = { # Unhappy of welcome
		name = EVTOPTBHF20067

		custom_tooltip = { text = TOOLTIP_SPONSOR_VISIT_WELCOME_2 }

		piety = -25

		FROM = {
			show_scope_change = no

			prestige = -50

			hidden_effect = {
				change_variable = {
					which = converter_goodwill
					value = -1
				}
			}

			character_event = { id = HF.20069 }
		}

		ai_chance = {
			factor = 40

			mult_modifier = {
				factor = 0.9
				trait = gregarious
			}

			mult_modifier = {
				factor = 0.9
				trait = trusting
			}

			mult_modifier = {
				factor = 0.9
				trait = kind
			}

			mult_modifier = {
				factor = 0.8
				FROM = { has_character_flag = flag_missionary_welcome }
			}

			mult_modifier = {
				factor = 0.6
				FROM = { has_character_flag = flag_converter_welcome }
			}

			mult_modifier = {
				factor = 0.4
				FROM = { has_character_flag = flag_converter_missionary_welcome }
			}
		}
	}
}

# Converter: Sponsor liked your welcome
character_event = {
	id = HF.20068
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20068
		trigger = { has_character_flag = flag_converter_missionary_welcome }
	}
	desc = {
		text = EVTDESCBHF20068
		trigger = { has_character_flag = flag_converter_welcome }
	}
	desc = {
		text = EVTDESCCHF20068
		trigger = { has_character_flag = flag_missionary_welcome }
	}
	desc = {
		text = EVTDESCDHF20068
		trigger = { has_character_flag = flag_sponsor_no_welcome }
	}

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_capable = yes

	fail_trigger_effect = {
		event_target:sponsoring_king = {
			character_event = { id = HF.20098 } # Notify sponsor that converter has become incapable
		}
	}

	option = {
		name = GOOD

		tooltip = {
			trigger_switch = {
				on_trigger = has_character_flag

				flag_sponsor_no_welcome = { prestige = -50 }
				flag_missionary_welcome = { piety = 50 }
				flag_converter_welcome = { prestige = 50 }
				flag_converter_missionary_welcome = {
					prestige = 50
					piety = 50
				}
			}
		}

		clr_character_flag = flag_converter_missionary_welcome
		clr_character_flag = flag_converter_welcome
		clr_character_flag = flag_missionary_welcome
		clr_character_flag = flag_sponsor_no_welcome

		FROM = {
			character_event = {
				id = HF.20070 # Feast
				days = 4
			}
		}
	}
}

# Converter: Sponsor did not like your welcome
character_event = {
	id = HF.20069
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20069
		trigger = { has_character_flag = flag_converter_missionary_welcome }
	}
	desc = {
		text = EVTDESCBHF20069
		trigger = { has_character_flag = flag_converter_welcome }
	}
	desc = {
		text = EVTDESCCHF20069
		trigger = { has_character_flag = flag_missionary_welcome }
	}
	desc = {
		text = EVTDESCDHF20069
		trigger = { has_character_flag = flag_sponsor_no_welcome }
	}

	hide_new = yes
	show_root = yes
	is_triggered_only = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:sponsoring_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:sponsoring_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:sponsoring_king = {
				character_event = { id = HF.20098 } # Notify sponsor that converter has become incapable
			}
		}
	}

	option = {
		name = UNFORTUNATE

		tooltip = { prestige = -50 }

		clr_character_flag = flag_converter_missionary_welcome
		clr_character_flag = flag_converter_welcome
		clr_character_flag = flag_missionary_welcome
		clr_character_flag = flag_sponsor_no_welcome

		FROM = {
			character_event = {
				id = HF.20070 # Feast
				days = 4
			}
		}
	}
}

# Sponsor: At the Converter's welcoming feast.
character_event = {
	id = HF.20070
	picture = GFX_evt_fancy_feast
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20070
		trigger = { FROM = { has_character_flag = flag_converter_feast_4 } }
	}
	desc = {
		text = EVTDESCBHF20070
		trigger = { FROM = { has_character_flag = flag_converter_feast_3 } }
	}
	desc = {
		text = EVTDESCCHF20070
		trigger = { FROM = { has_character_flag = flag_converter_feast_2 } }
	}
	desc = {
		text = EVTDESCDHF20070
		trigger = { FROM = { has_character_flag = flag_converter_feast_1 } }
	}

	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	immediate = {
		set_character_flag = flag_sponsor_visit_midway # Added to give piety boon in case the visit is interrupted by converter's death.
	}

	is_triggered_only = yes

	option = { # Happy of feast
		name = EVTOPTAHF20070

		trigger = {
			FROM = {
				NOR = {
					has_character_flag = flag_converter_feast_1
					has_character_flag = flag_converter_feast_2
				}
			}
		}

		custom_tooltip = { text = TOOLTIP_SPONSOR_VISIT_FEAST_1 }

		prestige = 100

		FROM = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				flag_converter_feast_2 = { prestige = 50 }
				flag_converter_feast_3 = { prestige = 150 }
				flag_converter_feast_4 = { prestige = 250 }
			}

			character_event = { id = HF.20071 }
		}

		ai_chance = {
			factor = 60

			mult_modifier = {
				factor = 0.9
				trait = shy
			}

			mult_modifier = {
				factor = 0.9
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.9
				trait = cruel
			}

			mult_modifier = {
				factor = 1.2
				religion_group = pagan_group
			}

			mult_modifier = {
				factor = 0.75
				FROM = { has_character_flag = flag_converter_feast_1 }
			}
		}
	}

	option = { # Happy of small feast
		name = EVTOPTDHF20070

		trigger = {
			FROM = { has_character_flag = flag_converter_feast_2 }
		}

		custom_tooltip = { text = TOOLTIP_SPONSOR_VISIT_FEAST_1 }

		prestige = 100

		FROM = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				flag_converter_feast_2 = { prestige = 50 }
				flag_converter_feast_3 = { prestige = 150 }
				flag_converter_feast_4 = { prestige = 250 }
			}

			character_event = { id = HF.20071 }
		}

		ai_chance = {
			factor = 60

			mult_modifier = {
				factor = 0.9
				trait = shy
			}

			mult_modifier = {
				factor = 0.9
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.9
				trait = cruel
			}

			mult_modifier = {
				factor = 1.2
				religion_group = pagan_group
			}

			mult_modifier = {
				factor = 0.75
				FROM = { has_character_flag = flag_converter_feast_1 }
			}
		}
	}

	option = { # Happy of feast even if there was no feast.
		name = EVTOPTCHF20070

		trigger = {
			FROM = { has_character_flag = flag_converter_feast_1 }
		}

		custom_tooltip = { text = TOOLTIP_SPONSOR_VISIT_FEAST_1 }

		piety = 100

		FROM = {
			show_scope_change = no

			prestige = -100
			character_event = { id = HF.20071 }
		}

		ai_chance = {
			factor = 20

			mult_modifier = {
				factor = 1.75
				trait = shy
			}

			mult_modifier = {
				factor = 0.7
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.5
				trait = gregarious
			}

			mult_modifier = {
				factor = 1.2
				religion_group = pagan_group
			}

			mult_modifier = {
				factor = 0.75
				FROM = { has_character_flag = flag_converter_feast_1 }
			}
		}
	}

	option = { # Unhappy of feast
		name = EVTOPTBHF20070

		custom_tooltip = { text = TOOLTIP_SPONSOR_VISIT_FEAST_2 }

		piety = -50

		FROM = {
			show_scope_change = no

			prestige = -75

			hidden_effect = {
				change_variable = {
					which = converter_goodwill
					value = -2
				}

				character_event = { id = HF.20072 }
			}
		}

		ai_chance = {
			factor = 40

			mult_modifier = {
				factor = 0.9
				trait = gregarious
			}

			mult_modifier = {
				factor = 0.9
				trait = trusting
			}

			mult_modifier = {
				factor = 0.9
				trait = kind
			}

			mult_modifier = {
				factor = 0.9
				trait = drunkard
			}

			mult_modifier = {
				factor = 0.9
				trait = gluttonous
			}

			mult_modifier = {
				factor = 0.7

				trait = hedonist
				FROM = { NOT = { has_character_flag = flag_converter_feast_1 } }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { has_character_flag = flag_converter_feast_2 }
			}

			mult_modifier = {
				factor = 0.6
				FROM = { has_character_flag = flag_converter_feast_3 }
			}

			mult_modifier = {
				factor = 0.4
				FROM = { has_character_flag = flag_converter_feast_4 }
			}
		}
	}
}

# Converter: Sponsor liked your feast
character_event = {
	id = HF.20071
	picture = GFX_evt_fancy_feast
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20071
		trigger = { has_character_flag = flag_converter_feast_4 }
	}
	desc = {
		text = EVTDESCBHF20071
		trigger = { has_character_flag = flag_converter_feast_3 }
	}
	desc = {
		text = EVTDESCCHF20071
		trigger = { has_character_flag = flag_converter_feast_2 }
	}
	desc = {
		text = EVTDESCDHF20071
		trigger = { has_character_flag = flag_converter_feast_1 }
	}

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = GOOD

		tooltip = {
			trigger_switch = {
				on_trigger = has_character_flag

				flag_converter_feast_2 = { prestige = 50 }
				flag_converter_feast_3 = { prestige = 150 }
				flag_converter_feast_4 = { prestige = 250 }
			}
		}

		clr_character_flag = flag_converter_feast_4
		clr_character_flag = flag_converter_feast_3
		clr_character_flag = flag_converter_feast_2
		clr_character_flag = flag_converter_feast_1

		character_event = {
			id = HF.20073 # Private meeting time
			days = 1
		}
	}
}

# Converter: Sponsor did not like your feast
character_event = {
	id = HF.20072
	picture = GFX_evt_fancy_feast
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20072
		trigger = { has_character_flag = flag_converter_feast_4 }
	}
	desc = {
		text = EVTDESCBHF20072
		trigger = { has_character_flag = flag_converter_feast_3 }
	}
	desc = {
		text = EVTDESCCHF20072
		trigger = { has_character_flag = flag_converter_feast_2 }
	}
	desc = {
		text = EVTDESCDHF20072
		trigger = { has_character_flag = flag_converter_feast_1 }
	}

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20072

		tooltip = { prestige = -75 }

		clr_character_flag = flag_converter_feast_4
		clr_character_flag = flag_converter_feast_3
		clr_character_flag = flag_converter_feast_2
		clr_character_flag = flag_converter_feast_1

		character_event = {
			id = HF.20073 # Private meeting time
			days = 1
		}
	}
}

# Converter: How do you entertain Sponsor the next days? (Choose attribute to use for persuasion check).
character_event = {
	id = HF.20073
	desc = EVTDESCAHF20073
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = { # Use diplomacy to improve relations
		name = EVTOPTAHF20073

		set_character_flag = flag_converter_diplomacy_check

		hidden_effect = {
			random_list = {
				50 = { # Persuasion success
					mult_modifier = { factor = 1.75 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 10 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 9 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 8 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 7 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 6 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 5 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 4 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value >= 3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -4 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -5 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -6 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -7 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -8 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -9 } }
					mult_modifier = { factor = 0.75 attribute_diff = { character = event_target:sponsoring_king attribute = diplomacy value <= -10 } }

					modifier = {
						factor = 1.25
						trait = underhanded_rogue
					}
					modifier = {
						factor = 1.5
						trait = charismatic_negotiator
					}
					modifier = {
						factor = 1.75
						trait = grey_eminence
					}
					modifier = {
						factor = 1.5
						trait = gregarious
					}
					modifier = {
						factor = 1.5
						trait = socializer
					}
					modifier = {
						factor = 1.5
						trait = hedonist
					}
					modifier = {
						factor = 1.4
						is_feudal = yes
					}
					modifier = {
						factor = 1.75
						trait = genius
					}
					modifier = {
						factor = 1.5
						trait = quick
					}
					modifier = {
						factor = 0.75
						trait = slow
					}
					modifier = {
						factor = 0.5
						trait = imbecile
					}
					modifier = {
						factor = 0.5
						trait = inbred
					}

					event_target:sponsoring_king = {
						character_event = {
							id = HF.20074
							days = 3
							random = 3
						}
					}
				}

				50 = { # Persuasion failure
					event_target:sponsoring_king = {
						character_event = {
							id = HF.20075
							days = 3
							random = 3
						}
					}
				}
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 0.5
				diplomacy < 8
			}

			mult_modifier = {
				factor = 2
				diplomacy >= 12
			}
		}
	}

	option = { # Use martial to improve relation
		name = EVTOPTBHF20073

		set_character_flag = flag_converter_martial_check

		hidden_effect = {
			random_list = {
				50 = { # Persuasion success
					mult_modifier = { factor = 1.75 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 10 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 9 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 8 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 7 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 6 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 5 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 4 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = martial value >= 3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -4 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -5 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -6 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -7 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -8 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -9 } }
					mult_modifier = { factor = 0.75 attribute_diff = { character = event_target:sponsoring_king attribute = martial value <= -10 } }

					mult_modifier = {
						factor = 1.25
						trait = tough_soldier
					}

					mult_modifier = {
						factor = 1.5
						trait = skilled_tactician
					}

					mult_modifier = {
						factor = 1.75
						trait = brilliant_strategist
					}

					mult_modifier = {
						factor = 1.5
						trait = brave
					}

					mult_modifier = {
						factor = 1.5
						trait = strategist
					}

					mult_modifier = {
						factor = 1.5
						trait = game_master
					}

					mult_modifier = {
						factor = 1.4
						is_feudal = yes
					}

					mult_modifier = {
						factor = 1.75
						trait = genius
					}

					mult_modifier = {
						factor = 1.5
						trait = quick
					}

					mult_modifier = {
						factor = 0.75
						trait = slow
					}

					mult_modifier = {
						factor = 0.5
						trait = imbecile
					}

					mult_modifier = {
						factor = 0.5
						trait = inbred
					}

					event_target:sponsoring_king = {
						character_event = {
							id = HF.20074
							days = 3
							random = 3
						}
					}
				}

				50 = { # Persuasion failure
					event_target:sponsoring_king = {
						character_event = {
							id = HF.20075
							days = 3
							random = 3
						}
					}
				}
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 0.5
				martial < 8
			}

			mult_modifier = {
				factor = 2
				martial >= 12
			}
		}
	}

	option = { # Use intrigue to improve relation
		name = EVTOPTCHF20073

		set_character_flag = flag_converter_intrigue_check

		hidden_effect = {
			random_list = {
				50 = { # Persuasion success
					mult_modifier = { factor = 1.75 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 10 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 9 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 8 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 7 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 6 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 5 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 4 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value >= 3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -4 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -5 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -6 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -7 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -8 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -9 } }
					mult_modifier = { factor = 0.75 attribute_diff = { character = event_target:sponsoring_king attribute = intrigue value <= -10 } }

					mult_modifier = {
						factor = 1.25
						trait = flamboyant_schemer
					}

					mult_modifier = {
						factor = 1.5
						trait = intricate_webweaver
					}

					mult_modifier = {
						factor = 1.75
						trait = elusive_shadow
					}

					mult_modifier = {
						factor = 1.5
						trait = deceitful
					}

					mult_modifier = {
						factor = 1.5

						trait = master_seducer
						event_target:sponsoring_king = { prefers_men_trigger = yes }
					}

					mult_modifier = {
						factor = 1.5

						trait = master_seductress
						event_target:sponsoring_king = { prefers_men_trigger = no }
					}

					mult_modifier = { factor = 1.4
						is_feudal = yes
					}

					mult_modifier = { factor = 1.75
						trait = genius
					}

					mult_modifier = { factor = 1.5
						trait = quick
					}

					mult_modifier = { factor = 0.75
						trait = slow
					}

					mult_modifier = { factor = 0.5
						trait = imbecile
					}

					mult_modifier = { factor = 0.5
						trait = inbred
					}

					event_target:sponsoring_king = {
						character_event = {
							id = HF.20074
							days = 3
							random = 3
						}
					}
				}

				50 = { # Persuasion failure
					event_target:sponsoring_king = {
						character_event = {
							id = HF.20075
							days = 3
							random = 3
						}
					}
				}
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 0.5
				intrigue < 8
			}

			mult_modifier = {
				factor = 2
				intrigue >= 12
			}
		}
	}

	option = { # Use learning to improve relation
		name = EVTOPTDHF20073

		set_character_flag = flag_converter_learning_check

		hidden_effect = {
			random_list = {
				50 = { # Persuasion success
					mult_modifier = { factor = 1.75 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 10 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 9 } }
					mult_modifier = { factor = 1.50 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 8 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 7 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 6 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 5 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 4 } }
					mult_modifier = { factor = 1.25 attribute_diff = { character = event_target:sponsoring_king attribute = learning value >= 3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -3 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -4 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -5 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -6 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -7 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -8 } }
					mult_modifier = { factor = 0.85 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -9 } }
					mult_modifier = { factor = 0.75 attribute_diff = { character = event_target:sponsoring_king attribute = learning value <= -10 } }

					mult_modifier = {
						factor = 1.25
						trait = dutiful_cleric
					}

					mult_modifier = {
						factor = 1.5
						trait = scholarly_theologian
					}

					mult_modifier = {
						factor = 1.75
						trait = mastermind_theologian
					}

					mult_modifier = {
						factor = 1.5
						trait = zealous
					}

					mult_modifier = {
						factor = 1.5
						trait = scholar
					}

					mult_modifier = {
						factor = 1.5
						trait = mystic
					}

					mult_modifier = {
						factor = 1.4
						is_feudal = yes
					}

					mult_modifier = {
						factor = 1.75
						trait = genius
					}

					mult_modifier = {
						factor = 1.5
						trait = quick
					}

					mult_modifier = {
						factor = 0.75
						trait = slow
					}

					mult_modifier = {
						factor = 0.5
						trait = imbecile
					}

					mult_modifier = {
						factor = 0.5
						trait = inbred
					}

					event_target:sponsoring_king = {
						character_event = {
							id = HF.20074
							days = 3
							random = 3
						}
					}
				}

				50 = { # Persuasion failure
					event_target:sponsoring_king = {
						character_event = {
							id = HF.20075
							days = 3
							random = 3
						}
					}
				}
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 0.5
				learning < 8
			}

			mult_modifier = {
				factor = 2
				learning >= 12
			}
		}
	}
}

# Sponsor: Impressed by Converter's skills
character_event = {
	id = HF.20074
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20074
		trigger = { FROM = { has_character_flag = flag_converter_diplomacy_check } }
	}
	desc = {
		text = EVTDESCBHF20074
		trigger = { FROM = { has_character_flag = flag_converter_martial_check } }
	}
	desc = {
		text = EVTDESCCHF20074
		trigger = { FROM = { has_character_flag = flag_converter_intrigue_check } }
	}
	desc = {
		text = EVTDESCDHF20074
		trigger = { FROM = { has_character_flag = flag_converter_learning_check } }
	}

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = {
		name = EVTOPTAHF20074

		custom_tooltip = { text = visit_sponsor_impressed }

		if = {
			limit = {
				FROM = {
					OR = {
						has_character_flag = flag_converter_diplomacy_check
						has_character_flag = flag_converter_intrigue_check
					}
				}
			}

			change_diplomacy = 1
		}
		else_if = {
			limit = {
				FROM = { has_character_flag = flag_converter_martial_check	}
			}
			change_martial = 1
		}
		else_if = {
			limit = {
				FROM = { has_character_flag = flag_converter_learning_check }
			}
			change_learning = 1
		}

		hidden_effect = {
			FROM = {
				change_variable = {
					which = converter_goodwill
					value = 5
				}

				character_event = { id = HF.20076 } # Converter can pick a present use the goodwill
				character_event = { id = HF.20088 days = 5 } # The Visit ends
			}
		}
	}
}

# Sponsor: Not impressed by Converter's skills
character_event = {
	id = HF.20075
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20075
		trigger = { FROM = { has_character_flag = flag_converter_diplomacy_check } }
	}
	desc = {
		text = EVTDESCBHF20075
		trigger = { FROM = { has_character_flag = flag_converter_martial_check } }
	}
	desc = {
		text = EVTDESCCHF20075
		trigger = { FROM = { has_character_flag = flag_converter_intrigue_check } }
	}
	desc = {
		text = EVTDESCDHF20075
		trigger = { FROM = { has_character_flag = flag_converter_learning_check } }
	}

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = {
		name = EVTOPTAHF20075

		custom_tooltip = {
			text = visit_sponsor_not_impressed

			FROM = {
				change_variable = {
					which = converter_goodwill
					value = -2
				}

				character_event = { id = HF.20077 } # Converter can pick a present use the goodwill
				character_event = { id = HF.20088 days = 5 } # The Visit ends
			}
		}
	}
}

# Converter: Sponsor is impressed, time to make your request.
character_event = {
	id = HF.20076
	desc = EVTDESCDHA20076
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:sponsoring_king = {
			is_ruler = yes

			# If at any time the agreement is broken for whatever reason, abort the whole chain.
			has_opinion_modifier = {
				name = opinion_baptism_sponsor_target
				who = event_target:converting_king
			}
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:sponsoring_king = {
				character_event = { id = HF.20098 } # Notify sponsor that converter has become incapable
			}
		}
	}

	immediate = {
		clr_character_flag = flag_converter_diplomacy_check
		clr_character_flag = flag_converter_martial_check
		clr_character_flag = flag_converter_intrigue_check
		clr_character_flag = flag_converter_learning_check
	}

	option = { # Propose marriage
		name = EVTOPTAHF20076

		trigger = {
			can_marry = FROM
			is_marriage_adult = yes

			FROM = {
				is_marriage_adult = yes
				ai = yes
			}
		}

		FROM = {
			character_event = { id = HF.20078 } # Sponsor decides
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 0.5
				has_lover = yes
			}
		}
	}

	option = { # Declare Love
		name = EVTOPTBHF20076

		trigger = {
			is_adult = yes
			NOT = { is_lover = FROM }

			FROM = {
				is_adult = yes
				root_attraction_trigger = yes
			}
		}

		FROM = {
			character_event = { id = HF.20079 } # Sponsor decides
		}

		ai_chance = {
			factor = 25

			trigger = { num_of_lovers < 3 }

			mult_modifier = {
				factor = 0.5
				has_lover = yes
			}
		}
	}

	option = { # Ask friendship.
		name = EVTOPTCHF20076

		trigger = {
			NOT = { is_friend = FROM }
		}

		FROM = {
			character_event = { id = HF.20080 } # Sponsor decides
		}

		ai_chance = {
			factor = 25

			trigger = { num_of_friends < 3 }

			mult_modifier = {
				factor = 0.5
				num_of_friends > 0
			}
		}
	}

	option = { # Ask Nothing
		name = EVTOPTDHF20076

		piety = 200
		prestige = 150

		FROM = {
			character_event = { id = HF.20081 } # Sponsor notified
		}

		ai_chance = { factor = 25 }
	}
}

# Converter: Sponsor is not impressed, time to make your request.
character_event = {
	id = HF.20077
	desc = EVTDESCDHA20077
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:sponsoring_king = {
			is_ruler = yes

			# If at any time the agreement is broken for whatever reason, abort the whole chain.
			has_opinion_modifier = {
				name = opinion_baptism_sponsor_target
				who = event_target:converting_king
			}
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:sponsoring_king = {
				character_event = { id = HF.20098 } # Notify sponsor that converter has become incapable
			}
		}
	}

	immediate = {
		clr_character_flag = flag_converter_diplomacy_check
		clr_character_flag = flag_converter_martial_check
		clr_character_flag = flag_converter_intrigue_check
		clr_character_flag = flag_converter_learning_check
	}

	option = { # Propose marriage
		name = EVTOPTAHF20077

		trigger = {
			can_marry = FROM
			is_marriage_adult = yes

			FROM = {
				is_marriage_adult = yes
				ai = yes
			}
		}

		FROM = {
			character_event = { id = HF.20078 } # Sponsor decides
		}

		ai_chance = { factor = 0 }
	}

	option = { # Declare Love
		name = EVTOPTBHF20077

		trigger = {
			is_adult = yes
			NOT = { is_lover = FROM }

			FROM = {
				is_adult = yes
				root_attraction_trigger = yes
			}
		}

		FROM = {
			character_event = { id = HF.20079 } # Sponsor decides
		}

		ai_chance = { factor = 0 }
	}

	option = { # Ask friendship
		name = EVTOPTCHF20077

		trigger = {
			NOT = { is_friend = FROM }
		}

		FROM = {
			character_event = { id = HF.20080 } # Sponsor decides
		}

		ai_chance = { factor = 0 }
	}

	option = { # Ask Nothing
		name = EVTOPTDHF20077

		tooltip = {
			if = {
				limit = {
					check_variable = {
						which = converter_goodwill
						value >= 5
					}
				}

				reverse_opinion = {
					name = opinion_happy
					years = 10
					who = FROM
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = converter_goodwill
						value < 0
					}
				}

				reverse_opinion = {
					name = opinion_unhappy
					years = 10
					who = FROM
				}
			}
		}

		piety = 200
		prestige = 150

		FROM = {
			character_event = { id = HF.20081 } # Sponsor notified
		}
	}
}

# Sponsor: Converter proposed a marriage alliance
character_event = {
	id = HF.20078
	desc = EVTDESCDHA20078
	picture = GFX_evt_rival_rulers
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = { # Agree
		name = EVTOPTAHF20078

		FROM = {
			character_event = { id = HF.20082 }
		}

		ai_chance = {
			factor = 40

			mult_modifier = {
				factor = 0.25
				is_rival = FROM
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < -20
				}
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < -40
				}
			}

			mult_modifier = {
				factor = 0.25

				opinion = {
					who = FROM
					value < -60
				}
			}

			mult_modifier = {
				factor = 0.1

				opinion = {
					who = FROM
					value < -80
				}
			}
		}
	}

	option = { # Disagree
		name = EVTOPTBHF20078

		FROM = {
			character_event = { id = HF.20083 }
		}

		ai_chance = {
			factor = 60

			mult_modifier = {
				factor = 1.25
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.5
				is_lover = FROM
			}

			mult_modifier = {
				factor = 0.75
				is_friend = FROM
			}

			mult_modifier = {
				factor = 0.9
				FROM = { check_variable = { which = converter_goodwill value >= 2 } }
			}

			mult_modifier = {
				factor = 0.9
				FROM = { check_variable = { which = converter_goodwill value >= 4 } }
			}

			mult_modifier = {
				factor = 0.9
				FROM = { check_variable = { which = converter_goodwill value >= 6 } }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 8 } }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 10 } }
			}

			mult_modifier = {
				factor = 0.7
				FROM = { check_variable = { which = converter_goodwill value >= 12 } }
			}

			mult_modifier = {
				factor = 0.5
				FROM = { check_variable = { which = converter_goodwill value >= 14 } }
			}
		}
	}
}

# Sponsor: Converter declared love.
character_event = {
	id = HF.20079
	desc = EVTDESCDHA20079
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = { # Agree
		name = EVTOPTAHF20079

		if = {
			limit = {
				same_sex = FROM
				NOT = { trait = homosexual }
			}

			add_trait = homosexual
		}

		add_lover = FROM

		FROM = {
			character_event = { id = HF.20084 }
		}

		ai_chance = {
			factor = 40

			trigger = {
				trigger_if = {
					limit = { same_sex = FROM }
					trait = homosexual
				}

				NOT = { is_rival = FROM }
				num_of_lovers < 3
			}

			mult_modifier = {
				factor = 0.75
				has_lover = yes
			}

			mult_modifier = {
				factor = 0.8
				FROM = { has_ugly_trait_trigger = yes }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { trait = harelip }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { trait = hunchback }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { trait = dwarf }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { trait = stutter }
			}

			mult_modifier = {
				factor = 0.7
				FROM = { trait = inbred }
			}

			mult_modifier = {
				factor = 0.7
				FROM = { trait = disfigured }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { trait = mangled }
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < 0
				}
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < -20
				}
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < -40
				}
			}

			mult_modifier = {
				factor = 0.25

				opinion = {
					who = FROM
					value < -60
				}
			}

			mult_modifier = {
				factor = 0.1

				opinion = {
					who = FROM
					value < -80
				}
			}
		}
	}

	option = { # Disagree
		name = EVTOPTBHF20079

		FROM = {
			character_event = { id = HF.20085 }
		}

		ai_chance = {
			factor = 60

			mult_modifier = {
				factor = 1.25
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.75
				FROM = { has_fair_trait_trigger = yes }
			}

			mult_modifier = {
				factor = 0.75
				is_friend = FROM
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 2 } }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 4 } }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 6 } }
			}

			mult_modifier = {
				factor = 0.7
				FROM = { check_variable = { which = converter_goodwill value >= 8 } }
			}

			mult_modifier = {
				factor = 0.7
				FROM = { check_variable = { which = converter_goodwill value >= 10 } }
			}

			mult_modifier = {
				factor = 0.6
				FROM = { check_variable = { which = converter_goodwill value >= 12 } }
			}

			mult_modifier = {
				factor = 0.4
				FROM = { check_variable = { which = converter_goodwill value >= 14 } }
			}
		}
	}
}

# Sponsor: Converter wishes to become friend
character_event = {
	id = HF.20080
	desc = EVTDESCDHA20080
	picture = GFX_evt_courtiers_talking
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = { # Agree
		name = EVTOPTAHF20080

		add_friend = FROM

		FROM = {
			character_event = { id = HF.20086 }
		}

		ai_chance = {
			factor = 60

			trigger = {
				NOT = { is_rival = FROM }
			}

			mult_modifier = {
				factor = 0.75
				num_of_friends > 0
			}

			mult_modifier = {
				factor = 0.1
				num_of_friends >= 3
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < 0
				}
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < -20
				}
			}

			mult_modifier = {
				factor = 0.8

				opinion = {
					who = FROM
					value < -40
				}
			}

			mult_modifier = {
				factor = 0.25

				opinion = {
					who = FROM
					value < -60
				}
			}

			mult_modifier = {
				factor = 0.1

				opinion = {
					who = FROM
					value < -80
				}
			}
		}
	}

	option = { # Disagree
		name = EVTOPTBHF20080

		FROM = {
			character_event = { id = HF.20087 }
		}

		ai_chance = {
			factor = 40

			mult_modifier = {
				factor = 1.25
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.75
				is_friend = FROM
			}

			mult_modifier = {
				factor = 0.75
				FROM = { has_fair_trait_trigger = yes }
			}

			mult_modifier = {
				factor = 0.9
				FROM = { prestige >= 300 }
			}

			mult_modifier = {
				factor = 0.9
				FROM = { prestige >= 500 }
			}

			mult_modifier = {
				factor = 0.9
				FROM = { prestige >= 700 }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { prestige >= 900 }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 2 } }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 4 } }
			}

			mult_modifier = {
				factor = 0.8
				FROM = { check_variable = { which = converter_goodwill value >= 6 } }
			}

			mult_modifier = {
				factor = 0.7
				FROM = { check_variable = { which = converter_goodwill value >= 8 } }
			}

			mult_modifier = {
				factor = 0.7
				FROM = { check_variable = { which = converter_goodwill value >= 10 } }
			}

			mult_modifier = {
				factor = 0.6
				FROM = { check_variable = { which = converter_goodwill value >= 12 } }
			}

			mult_modifier = {
				factor = 0.4
				FROM = { check_variable = { which = converter_goodwill value >= 14 } }
			}
		}
	}
}

# Sponsor: Converter asks for nothing
character_event = {
	id = HF.20081
	desc = EVTDESCDHA20081
	picture = GFX_evt_pagan
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	only_rulers = yes
	only_capable = yes

	trigger = {
		event_target:converting_king = {
			is_ruler = yes
		}

		# If at any time the agreement is broken for whatever reason, abort the whole chain.
		has_opinion_modifier = {
			name = opinion_baptism_sponsor_target
			who = event_target:converting_king
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { is_incapable = yes }

			event_target:converting_king = {
				character_event = { id = HF.20099 } # Notify converter that sponsor has become incapable
			}
		}
	}

	option = {
		name = EVTOPTAHF20081

		FROM = {
			show_scope_change = no

			if = {
				limit = {
					check_variable = {
						which = converter_goodwill
						value >= 5
					}
				}

				reverse_opinion = {
					name = opinion_happy
					who = ROOT
					years = 10
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = converter_goodwill
						value < 0
					}
				}

				reverse_opinion = {
					name = opinion_unhappy
					who = ROOT
					years = 10
				}
			}
		}
	}
}

# Converter: Sponsor accepted marriage proposal.
character_event = {
	id = HF.20082
	desc = EVTDESCDHA20082
	picture = GFX_evt_marriage
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20082

		prestige = 100

		if = {
			limit = { is_female = no }
			add_spouse = FROM
		}
		else = {
			add_spouse_matrilineal = FROM
		}
	}
}

# Converter: Sponsor denied marriage proposal.
character_event = {
	id = HF.20083
	desc = EVTDESCDHA20083
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20083

		prestige = -100
	}
}

# Converter: Sponsor became lover.
character_event = {
	id = HF.20084
	desc = EVTDESCDHA20084
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20084

		prestige = 100
		add_lover = FROM
	}
}

# Converter: Sponsor did not become lover.
character_event = {
	id = HF.20085
	desc = EVTDESCDHA20085
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20085

		prestige = -100
	}
}

# Converter: Sponsor became friend.
character_event = {
	id = HF.20086
	desc = EVTDESCDHA20086
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20086
		prestige = 100
		add_friend = FROM
	}
}

# Converter: Sponsor did not become friend.
character_event = {
	id = HF.20087
	desc = EVTDESCDHA20087
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20087

		prestige = -100
	}
}

# Converter: The sponsor's visit has come to an end.
character_event = {
	id = HF.20088
	desc = EVTDESCDHA20088
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20088

		piety = 50

		hidden_effect = {
			chronicle = {
				entry = CHRONICLE_SPONSOR_VISIT
				portrait = [sponsoring_king.GetID]
			}

			set_variable = {
				which = converter_goodwill
				value = 0
			}
		}

		event_target:sponsoring_king = {
			character_event = { id = HF.20089 } # The Visit ends for the Sponsor.
		}
	}
}

# Sponsor: Your visit has come to an end, time to return home.
character_event = {
	id = HF.20089
	desc = EVTDESCDHA20089
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20089

		piety = 150
		remove_trait = travelling
		clr_character_flag = sponsor_travelling_converter

		# Umbrella list for Umbrella lists (once more, the event chain continues until the non-aggression pact runs out or is broken for some reason).
		hidden_effect = {
			chronicle = {
				entry = CHRONICLE_SPONSOR_VISIT
				portrait = [converting_king.GetID]
			}

			random_list = {
				40 = { event_target:converting_king = { character_event = { id = HF.20037 days = 430 random = 130 } } } # Events for Converter
				60 = { event_target:sponsoring_king = { character_event = { id = HF.20038 days = 430 random = 130 } } } # Events for Sponsor
			}
		}
	}
}

# Generic notification event for foreign rulers upon Mass Conversion of a pagan.
narrative_event = {
	id = HF.20090
	title = EVTTITLE20090
	desc = EVTDESCHFA20090
	picture = GFX_evt_mass_baptism
	border = GFX_event_narrative_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	ai = no

	trigger = {
		NOR = {
			character = event_target:sponsoring_king
			character = event_target:converting_king
		}
	}

	option = {
		name = INTERESTING

		trigger = { NOT = { religion = event_target:sponsoring_king } }

		show_portrait = event_target:sponsoring_king
	}

	option = {
		name = EVTOPTBHF20090

		trigger = { religion = event_target:sponsoring_king }

		show_portrait = event_target:sponsoring_king
	}
}

# Hidden safety event to end the sponsor's travel, should something happen to the converter before the chain ends.
character_event = {
	id = HF.20091

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		remove_trait = travelling
	}
}

# HF.20092 Taken for a True Believers Revolt event.
# HF.20093 Excommunicated Sponsor is forgiven.
# HF.20094 Excommunicated Sponsor is forgiven.

# on_death: converter died after baptism
character_event = {
	id = HF.20095

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = flag_converted_baptism

	trigger = {
		has_any_opinion_modifier = opinion_baptism_sponsor_target
	}

	immediate = {
		any_opinion_modifier_target = {
			limit = {
				has_character_flag = flag_sponsored_baptism

				has_opinion_modifier = {
					who = ROOT
					name = opinion_baptism_sponsor_target
				}
			}

			character_event = { id = HF.20096 }
		}
	}
}

# Sponsor be warned! Your converter died after baptism.
character_event = {
	id = HF.20096
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCHF20096
		trigger = { NOT = { has_character_flag = sponsor_travelling_converter } }
	}
	desc = {
		text = EVTDESCHFB20096
		trigger = { has_character_flag = sponsor_travelling_converter }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20096

		if = {
			limit = { has_character_flag = flag_sponsor_visit_midway }

			piety = 75
			clr_character_flag = flag_sponsor_visit_midway
		}
		else_if = {
			limit = {
				has_character_flag = sponsor_travelling_converter
				trait = travelling
			}

			remove_trait = travelling
		}
	}
}

# Potential Sponsor receives mass baptism request (AI version)
letter_event = {
	id = HF.20097
	desc = EVTDESCHF20000
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	show_from_from = yes

	option = { # Accept request, start preparation for mass conversion
		name = EVTOPTAHF20000

		custom_tooltip = {
			text = accept_baptism_request

			set_character_flag = flag_sponsoring_baptism
			save_event_target_as = sponsoring_king

			FROM = {
				set_character_flag = flag_converting_baptism
				save_event_target_as = converting_king

				letter_event = {
					id = HF.20002
					days = 5
					random = 5
				}
			}
		}
	}

	option = { # Deny request, end event chain
		name = EVTOPTBHF20000

		custom_tooltip = { text = refuse_baptism_request }

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_denied_request
				years = 10
				who = ROOT
			}

			letter_event = {
				id = HF.20001
				days = 5
				random = 5
			}

			hidden_effect = {
				remove_opinion = {
					name = opinion_baptism_sponsor_target
					who = ROOT
				}

				reverse_remove_opinion = {
					name = opinion_baptism_sponsor_target
					who = FROM
				}
			}
		}

		ai_chance = { factor = 0 } # Only for Multiplayer
	}
}

# Notify Sponsor that Converter has become incapable in the middle of the visit.
character_event = {
	id = HF.20098
	desc = EVTDESCHF20098
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	option = {
		name = EVTOPTAHF20098

		if = {
			limit = { has_character_flag = flag_sponsor_visit_midway }

			piety = 75
			clr_character_flag = flag_sponsor_visit_midway
		}
		else_if = {
			limit = {
				has_character_flag = sponsor_travelling_converter
				trait = travelling
			}

			remove_trait = travelling
			clr_character_flag = sponsor_travelling_converter
		}
	}
}

# Notify Converter that Sponsor has become incapable in the middle of the visit.
character_event = {
	id = HF.20099
	desc = EVTDESCHF20099
	picture = GFX_evt_pilgrims_epic_journey
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_new = yes
	show_root = yes

	immediate = {
		event_target:sponsoring_king = {
			remove_trait = travelling
			clr_character_flag = sponsor_travelling_converter
		}
	}

	option = {
		name = EVTOPTAHF20099
	}
}

######################################################
# Baby Baptism (only for first current_heir, delayed fired on birth via HFP.20403 for Christian rulers with available notable baptizer)
# on_birth event will check which of the parents has greater authority and send this event to the more powerful one.
character_event = {
	id = HF.20100
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20100
		trigger = { is_female = yes }
	}
	desc = {
		text = EVTDESCBHF20100
		trigger = { is_female = no }
	}

	is_triggered_only = yes

	only_independent = yes
	religion_group = christian
	has_dlc = "Holy Fury"
	only_capable = yes

	trigger = {
		higher_real_tier_than = DUKE

		player_heir = {
			character = FROM
		}

		is_targeted_decision_allowed = {
			key = give_child_special_baptism # HF_baptism_decisons.txt
			character = FROM
		}

		# Only once per family, unless the baptized heir died in the meantime. Otherwise Ultimogeniture rulers would get to baptize all of their children.
		NOT = {
			any_child = {
				is_alive = yes

				OR = {
					trait = baptized_by_satan
					trait = baptized_by_pope
					trait = baptized_by_patriarch
					trait = baptized_by_bishop
				}
			}
		}
	}

	immediate = {
		FROM = { save_event_target_as = baptizing_child }
		set_character_flag = flag_baptizing_child # Avoid using both the event and the targeted decision at the same time.

		if = {
			limit = {
				OR = {
					religion = catholic
					religion = fraticelli
					religion = orthodox
				}

				rightful_religious_head_scope = {
					controls_religion = yes
					block_general_event_trigger = no
				}
			}

			rightful_religious_head_scope = {
				save_event_target_as = scoped_pope
			}
		}

		if = {
			limit = {
				society_member_of = the_satanists
				has_society_currency_medium_trigger = yes
			}

			society = {
				random_society_member = {
					limit = { society_rank == 4 }
					save_event_target_as = scoped_satanist
				}
			}
		}

		random_realm_character = {
			limit = {
				is_theocracy = yes
				religion = ROOT
				controls_religion = no
				block_general_event_trigger = no

				OR = {
					higher_real_tier_than = BARON
					is_antipope = yes
					is_cardinal = yes
				}
			}

			save_event_target_as = scoped_bishop
		}
	}

	option = { # Satanist Baptism
		name = EVTOPTZHF20100

		trigger = {
			society_member_of = the_satanists
			has_society_currency_medium_trigger = yes
		}

		custom_tooltip = { text = tooltip_HF20100_Z }

		show_portrait = event_target:scoped_satanist
		detract_society_currency_medium_effect = yes

		hidden_effect = {
			event_target:scoped_satanist = { save_event_target_as = scoped_baptizer }
			event_target:baptizing_child = { set_character_flag = flag_baptized_by_satan }
		}

		if = {
			limit = {
				society = {
					any_society_member = {
						same_realm = ROOT
						is_theocracy = no
						block_general_event_trigger = no

						NOR = {
							is_parent_of = FROM
							has_any_opinion_modifier = opinion_godfather
							has_any_opinion_modifier = opinion_godmother
						}
					}
				}
			}

			character_event = { id = HF.20101 } # Godfather pick
		}
		else = {
			character_event = { id = HF.20103 } # Skip to baptism if no potential godparents are available.
		}

		ai_chance = {
			factor = 100

			# If the true heir can still come, don't waste your only chance to give this child the trait.
			mult_modifier = {
				factor = 0.1

				trigger_if = {
					limit = { has_law = cognatic_succession }
					FROM = { is_female = yes }
				}
				trigger_else = {
					has_law = enatic_cognatic_succession
					FROM = { is_female = no }
				}

				practical_age < 40
				any_spouse = { practical_age < 40 }
			}
		}
	}

	option = { # Papal Baptism
		name = {
			text = EVTOPTAHF20100_A
			trigger = {
				event_target:scoped_pope = {
					NOT = { religion = orthodox }
				}
			}
		}
		name = {
			text = EVTOPTAHF20100_B
			trigger = {
				event_target:scoped_pope = {
					religion = orthodox
				}
			}
		}

		trigger = {
			event_target:scoped_pope = { always = yes }
		}

		custom_tooltip = { text = tooltip_HF20100_A }

		show_portrait = event_target:scoped_pope

		scaled_wealth = {
			value = -1.0
			min = -250
			max = -500
		}

		tiered_piety_negative_effect = yes

		hidden_effect = {
			event_target:scoped_pope = { save_event_target_as = scoped_baptizer }
			event_target:baptizing_child = { set_character_flag = flag_baptized_by_pope }
		}

		if = {
			limit = {
				any_realm_character = {
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					NOR = {
						is_parent_of = FROM
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
					}
				}
			}

			character_event = { id = HF.20101 } # Godfather pick
		}
		else = {
			character_event = { id = HF.20103 } # Skip to baptism if no potential godparents are available.
		}

		ai_chance = {
			factor = 100

			trigger = {
				NOT = { trait = cynical }
			}

			mult_modifier = {
				factor = 1.7
				trait = zealous
			}

			mult_modifier = {
				factor = 0.5
				trait = greedy
			}

			mult_modifier = {
				factor = 0.01

				society_member_of = the_satanists
				event_target:scoped_satanist = { always = yes }
			}

			# If the true heir can still come, don't waste your only chance to give this child the trait.
			mult_modifier = {
				factor = 0.1

				trigger_if = {
					limit = { has_law = cognatic_succession }
					FROM = { is_female = yes }
				}
				trigger_else = {
					has_law = enatic_cognatic_succession
					FROM = { is_female = no }
				}

				practical_age < 40
				any_spouse = { practical_age < 40 }
			}
		}
	}

	option = { # Prince-bishop Baptism
		name = EVTOPTBHF20100

		trigger = {
			event_target:scoped_bishop = { always = yes }
		}

		custom_tooltip = { text = tooltip_HF20100_B }

		show_portrait = event_target:scoped_bishop

		scaled_wealth = {
			value = -0.75
			min = -50
			max = -150
		}

		tiered_piety_negative_effect = yes

		hidden_effect = {
			event_target:scoped_bishop = { save_event_target_as = scoped_baptizer }
			event_target:baptizing_child = { set_character_flag = flag_baptized_by_bishop }
		}

		if = {
			limit = {
				any_realm_character = {
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					NOR = {
						is_parent_of = FROM
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
					}
				}
			}

			character_event = { id = HF.20101 } # Godparent pick
		}
		else = {
			character_event = { id = HF.20103 } # Skip to baptism if no potential godparents are available.
		}

		ai_chance = {
			factor = 50

			trigger = {
				NOT = { trait = cynical }
			}

			mult_modifier = {
				factor = 0.5
				trait = greedy
			}

			mult_modifier = {
				factor = 0.1

				society_member_of = the_satanists
				event_target:scoped_satanist = { always = yes }
			}

			# If the true heir can still come, don't waste your only chance to give this child the trait.
			mult_modifier = {
				factor = 0.1

				trigger_if = {
					limit = { has_law = cognatic_succession }
					FROM = { is_female = yes }
				}
				trigger_else = {
					has_law = enatic_cognatic_succession
					FROM = { is_female = no }
				}

				practical_age < 40
				any_spouse = { practical_age < 40 }
			}
		}
	}

	option = { # No, just regular baptism.
		name = EVTOPTCHF20100

		custom_tooltip = { text = tooltip_HF20100_C }

		clr_character_flag = flag_baptizing_child # Avoid using both the event and the targetted decision at the same time.

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 10
				trait = cynical
			}

			mult_modifier = {
				factor = 5
				trait = greedy
			}
		}
	}
}

# Pick the godparent for the child's baptism.
character_event = {
	id = HF.20101
	border = GFX_event_normal_frame_religion
	portrait = event_target:baptizing_child

	desc = {
		text = EVTDESCAHF20101
		picture = GFX_evt_sacrifice
		trigger = {
			event_target:baptizing_child = {
				has_character_flag = flag_baptized_by_satan
			}
		}
	}
	desc = {
		text = EVTDESCBHF20101
		picture = GFX_evt_icon
		trigger = {
			event_target:baptizing_child = {
				NOT = { has_character_flag = flag_baptized_by_satan }
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		# Possible picks for godparents
		# Search for powerful vassal (prioritizing relatives)
		# Search for a well liked vassal (prioritizing relatives)
		# Then for any vassal (prioritizing relatives)
		# Then for any courtier (prioritizing relatives)
		# For Satanists check for society membership as well

		if = {
			limit = {
				event_target:baptizing_child = {
					has_character_flag = flag_baptized_by_satan
				}
			}

			society = {
				# Check for any powerful vassal
				random_society_member = {
					limit = {
						is_powerful_vassal = yes
						same_realm = ROOT
						religion = ROOT
						is_theocracy = no
						block_general_event_trigger = no

						NOR = {
							is_parent_of = event_target:baptizing_child
							has_any_opinion_modifier = opinion_godfather
							has_any_opinion_modifier = opinion_godmother
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
						higher_real_tier_than = COUNT

						reverse_opinion = {
							who = ROOT
							value >= 20
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no

						reverse_opinion = {
							who = ROOT
							value >= 20
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no

						reverse_opinion = {
							who = ROOT
							value >= 0
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
					}

					save_event_target_as = godfather_option_1
				}

				# Check for a liked vassal
				random_society_member = {
					limit = {
						same_realm = ROOT
						is_ruler = yes
						religion = ROOT
						is_theocracy = no
						block_general_event_trigger = no

						reverse_opinion = {
							who = ROOT
							value >= 20
						}

						NOR = {
							is_parent_of = event_target:baptizing_child
							has_any_opinion_modifier = opinion_godfather
							has_any_opinion_modifier = opinion_godmother
							character = event_target:godfather_option_1
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
						is_powerful_vassal = yes
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
						higher_real_tier_than = BARON
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
					}

					save_event_target_as = godfather_option_2
				}

				# Check for any vassal
				random_society_member = {
					limit = {
						is_ruler = yes
						same_realm = ROOT
						religion = ROOT
						is_theocracy = no
						block_general_event_trigger = no

						NOR = {
							is_parent_of = event_target:baptizing_child
							has_any_opinion_modifier = opinion_godfather
							has_any_opinion_modifier = opinion_godmother
							character = event_target:godfather_option_1
							character = event_target:godfather_option_2
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
						is_powerful_vassal = yes
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
					}

					save_event_target_as = godfather_option_3
				}

				# Check for any courtier
				random_society_member = {
					limit = {
						is_ruler = no
						same_realm = ROOT
						religion = ROOT
						is_theocracy = no
						block_general_event_trigger = no

						NOR = {
							is_parent_of = event_target:baptizing_child
							has_any_opinion_modifier = opinion_godfather
							has_any_opinion_modifier = opinion_godmother
							character = event_target:godfather_option_1
							character = event_target:godfather_option_2
							character = event_target:godfather_option_3
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no

						reverse_opinion = {
							who = ROOT
							value >= 50
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no

						reverse_opinion = {
							who = ROOT
							value >= 20
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child

						reverse_opinion = {
							who = ROOT
							value >= 20
						}
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
						is_evil_trigger = no
					}

					preferred_limit = {
						dynasty = event_target:baptizing_child
					}

					save_event_target_as = godfather_option_4
				}
			}
		}
		else = {
			# Check for any powerful vassal
			random_realm_lord = {
				limit = {
					is_powerful_vassal = yes
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					NOR = {
						is_parent_of = event_target:baptizing_child
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
					higher_real_tier_than = COUNT

					reverse_opinion = {
						who = ROOT
						value >= 20
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no

					reverse_opinion = {
						who = ROOT
						value >= 20
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no

					reverse_opinion = {
						who = ROOT
						value >= 0
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
				}

				save_event_target_as = godfather_option_1
			}

			# Check for a liked vassal
			random_realm_lord = {
				limit = {
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					reverse_opinion = {
						who = ROOT
						value >= 20
					}

					NOR = {
						is_parent_of = event_target:baptizing_child
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
						character = event_target:godfather_option_1
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
					is_powerful_vassal = yes
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
					higher_real_tier_than = BARON
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
				}

				save_event_target_as = godfather_option_2
			}

			# Check for any vassal
			random_realm_lord = {
				limit = {
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					NOR = {
						is_parent_of = event_target:baptizing_child
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
						character = event_target:godfather_option_1
						character = event_target:godfather_option_2
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
					is_powerful_vassal = yes
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
				}

				save_event_target_as = godfather_option_3
			}

			random_realm_character = {
				limit = {
					is_ruler = no
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					NOR = {
						is_parent_of = event_target:baptizing_child
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
						character = event_target:godfather_option_1
						character = event_target:godfather_option_2
						character = event_target:godfather_option_3
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no

					reverse_opinion = {
						who = ROOT
						value >= 50
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no

					reverse_opinion = {
						who = ROOT
						value >= 20
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child

					reverse_opinion = {
						who = ROOT
						value >= 20
					}
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
					is_evil_trigger = no
				}

				preferred_limit = {
					dynasty = event_target:baptizing_child
				}

				save_event_target_as = godfather_option_4
			}
		}
	}

	option = { # Pick 1 will be the godparent
		name = EVTOPTAHF20101

		trigger = { event_target:godfather_option_1 = { always = yes } }

		show_portrait = event_target:godfather_option_1

		event_target:godfather_option_1 = {
			show_scope_change = no

			if = {
				limit = { is_female = no }

				opinion = {
					name = opinion_godfather
					who = event_target:baptizing_child
					years = 30
				}
			}
			else = {
				opinion = {
					name = opinion_godmother
					who = event_target:baptizing_child
					years = 30
				}
			}

			character_event = { id = HF.20102 } # Notify
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 0.1
				is_rival = event_target:godfather_option_1
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_1 = { trait = lunatic }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_1 = { trait = possessed }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_1 = { trait = cruel }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_1 = { trait = envious }
			}

			mult_modifier = {
				factor = 1.75
				is_friend = event_target:godfather_option_1
			}

			mult_modifier = {
				factor = 1.75
				is_lover = event_target:godfather_option_1
			}

			mult_modifier = {
				factor = 1.75
				is_close_relative = event_target:godfather_option_1
			}
		}
	}

	option = { # Pick 2 will be the godparent
		name = EVTOPTBHF20101

		trigger = { event_target:godfather_option_2 = { always = yes } }

		show_portrait = event_target:godfather_option_2

		event_target:godfather_option_2 = {
			show_scope_change = no

			if = {
				limit = { is_female = no }

				opinion = {
					name = opinion_godfather
					who = event_target:baptizing_child
					years = 30
				}
			}
			else = {
				opinion = {
					name = opinion_godmother
					who = event_target:baptizing_child
					years = 30
				}
			}

			character_event = { id = HF.20102 } # Notify
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 0.1
				is_rival = event_target:godfather_option_2
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_2 = { trait = lunatic }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_2 = { trait = possessed }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_2 = { trait = cruel }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_2 = { trait = envious }
			}

			mult_modifier = {
				factor = 1.75
				is_friend = event_target:godfather_option_2
			}

			mult_modifier = {
				factor = 1.75
				is_lover = event_target:godfather_option_2
			}

			mult_modifier = {
				factor = 1.75
				is_close_relative = event_target:godfather_option_2
			}
		}
	}

	option = { # Pick 3 will be the godparent
		name = EVTOPTCHF20101

		trigger = { event_target:godfather_option_3 = { always = yes } }

		show_portrait = event_target:godfather_option_3

		event_target:godfather_option_3 = {
			show_scope_change = no

			if = {
				limit = { is_female = no }

				opinion = {
					name = opinion_godfather
					who = event_target:baptizing_child
					years = 30
				}
			}
			else = {
				opinion = {
					name = opinion_godmother
					who = event_target:baptizing_child
					years = 30
				}
			}

			character_event = { id = HF.20102 } # Notify
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 0.1
				is_rival = event_target:godfather_option_3
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_3 = { trait = lunatic }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_3 = { trait = possessed }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_3 = { trait = cruel }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_3 = { trait = envious }
			}

			mult_modifier = {
				factor = 1.75
				is_friend = event_target:godfather_option_3
			}

			mult_modifier = {
				factor = 1.75
				is_lover = event_target:godfather_option_3
			}

			mult_modifier = {
				factor = 1.75
				is_close_relative = event_target:godfather_option_3
			}
		}
	}

	option = { # Pick 4 will be the godparent
		name = EVTOPTDHF20101

		trigger = { event_target:godfather_option_4 = { always = yes } }

		show_portrait = event_target:godfather_option_4

		event_target:godfather_option_4 = {
			show_scope_change = no

			if = {
				limit = { is_female = no }

				opinion = {
					name = opinion_godfather
					who = event_target:baptizing_child
					years = 30
				}
			}
			else = {
				opinion = {
					name = opinion_godmother
					who = event_target:baptizing_child
					years = 30
				}
			}

			character_event = { id = HF.20102 } # Notify
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 0.1
				is_rival = event_target:godfather_option_4
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_4 = { trait = lunatic }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_4 = { trait = possessed }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_4 = { trait = cruel }
			}

			mult_modifier = {
				factor = 0.25
				event_target:godfather_option_4 = { trait = envious }
			}

			mult_modifier = {
				factor = 1.75
				is_friend = event_target:godfather_option_4
			}

			mult_modifier = {
				factor = 1.75
				is_lover = event_target:godfather_option_4
			}

			mult_modifier = {
				factor = 1.75
				is_close_relative = event_target:godfather_option_4
			}
		}
	}

	after = {
		clear_event_target = godfather_option_1
		clear_event_target = godfather_option_2
		clear_event_target = godfather_option_3
		clear_event_target = godfather_option_4
		character_event = { id = HF.20103 } # Actual baptism.
	}
}

# New Godfather notified of baptism.
character_event = {
	id = HF.20102
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion
	portrait = event_target:baptizing_child

	desc = {
		text = EVTDESCAHF20102
		picture = GFX_evt_sacrifice
		trigger = {
			event_target:baptizing_child = { has_character_flag = flag_baptized_by_satan }
		}
	}
	desc = {
		text = EVTDESCBHF20102
		picture = GFX_evt_icon
		trigger = {
			event_target:baptizing_child = { NOT = { has_character_flag = flag_baptized_by_satan } }
		}
	}

	is_triggered_only = yes

	option = { # Good
		name = EVTOPTAHF20102

		tiered_prestige_reward_effect = yes

		tooltip = {
			if = {
				limit = { is_female = no }

				opinion = {
					name = opinion_godfather
					who = event_target:baptizing_child
					years = 30
				}
			}
			else = {
				opinion = {
					name = opinion_godmother
					who = event_target:baptizing_child
					years = 30
				}
			}
		}
	}
}

# Parent: Baptism itself happens.
character_event = {
	id = HF.20103
	border = GFX_event_normal_frame_religion
	portrait = event_target:baptizing_child

	desc = {
		text = EVTDESCAHF20103
		picture = GFX_evt_sacrifice
		trigger = {
			event_target:baptizing_child = {
				has_character_flag = flag_baptized_by_satan
			}
		}
	}
	desc = {
		text = EVTDESCBHF20103_ORTODOX
		picture = GFX_evt_pope
		trigger = {
			event_target:baptizing_child = {
				has_character_flag = flag_baptized_by_pope

				NOR = {
					has_character_flag = demon_child_non_pagan
					has_character_flag = demon_child
				}
			}

			event_target:scoped_baptizer = {
				has_landed_title = k_orthodox
			}
		}
	}
	desc = {
		text = EVTDESCBHF20103
		picture = GFX_evt_pope
		trigger = {
			event_target:baptizing_child = {
				has_character_flag = flag_baptized_by_pope

				NOR = {
					has_character_flag = demon_child_non_pagan
					has_character_flag = demon_child
				}
			}

			event_target:scoped_baptizer = {
				NOT = { has_landed_title = k_orthodox }
			}
		}
	}
	desc = {
		text = EVTDESCBHF20103_CURSED
		picture = GFX_evt_pope
		trigger = {
			event_target:baptizing_child = {
				has_character_flag = flag_baptized_by_pope

				OR = {
					has_character_flag = demon_child_non_pagan
					has_character_flag = demon_child
				}
			}
		}
	}
	desc = {
		text = EVTDESCCHF20103
		picture = GFX_evt_bishop
		trigger = {
			event_target:baptizing_child = {
				has_character_flag = flag_baptized_by_bishop
			}
		}
	}

	is_triggered_only = yes

	option = { # Good
		name = {
			text = EVTOPTAHF20103
			trigger = {
				event_target:baptizing_child = {
					trigger_if = {
						limit = { trait = baptized_by_pope }

						NOR = {
							has_character_flag = demon_child_non_pagan
							has_character_flag = demon_child
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTAHF20103_CURSED
			trigger = {
				event_target:baptizing_child = {
					has_character_flag = flag_baptized_by_pope

					OR = {
						has_character_flag = demon_child_non_pagan
						has_character_flag = demon_child
					}
				}
			}
		}

		show_portrait = event_target:scoped_baptizer
		clr_character_flag = flag_baptizing_child # Avoid using both the event and the targetted decision at the same time.

		event_target:baptizing_child = {
			show_scope_change = no

			if = {
				limit = { has_character_flag = flag_baptized_by_satan }

				save_persistent_event_target = {
					name = baptizing_satanist_per
					scope = event_target:scoped_baptizer
				}

				custom_tooltip = {
					text = tooltip_gain_baptized_by_satan

					add_trait = baptized_by_satan
					clr_character_flag = flag_baptized_by_satan
				}

				reverse_opinion = {
					name = opinion_baptized
					who = event_target:scoped_baptizer
					years = 20
				}
			}
			else_if = {
				limit = { has_character_flag = flag_baptized_by_pope }

				save_persistent_event_target = {
					name = baptizing_pope_per
					scope = event_target:scoped_baptizer
				}

				if = {
					limit = { religion = orthodox }

					custom_tooltip = {
						text = tooltip_gain_baptized_by_patriach

						add_trait = baptized_by_patriarch
						clr_character_flag = flag_baptized_by_pope
					}
				}
				else = { # Catholic/Fraticelli
					custom_tooltip = {
						text = tooltip_gain_baptized_by_pope

						add_trait = baptized_by_pope
						clr_character_flag = flag_baptized_by_pope
					}
				}

				reverse_opinion = {
					name = opinion_baptized
					who = event_target:scoped_baptizer
					years = 20
				}
			}
			else_if = {
				limit = { has_character_flag = flag_baptized_by_bishop }

				save_persistent_event_target = {
					name = baptizing_bishop_per
					scope = event_target:scoped_baptizer
				}

				custom_tooltip = {
					text = tooltip_gain_baptized_by_bishop

					add_trait = baptized_by_bishop
					clr_character_flag = flag_baptized_by_bishop
				}

				reverse_opinion = {
					name = opinion_baptized
					who = event_target:scoped_baptizer
					years = 20
				}
			}

			character_event = { id = HF.20104 } # Child notified
		}

		if = {
			limit = {
				OR = {
					spouse = { society_member_of = the_satanists }

					event_target:baptizing_child = {
						NOT = { trait = baptized_by_satan }
					}
				}
			}

			spouse = {
				character_event = { id = HF.20105 } # Spouse notified
			}
		}
	}
}

#  Child: Baptism has happened.
character_event = {
	id = HF.20104
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20104
		picture = GFX_evt_sacrifice
		trigger = {
			event_target:baptizing_child = { trait = baptized_by_satan }
		}
	}
	desc = {
		text = EVTDESCBHF20104
		picture = GFX_evt_pope
		trigger = {
			event_target:baptizing_child = { trait = baptized_by_pope }

			NOR = {
				has_character_flag = demon_child_non_pagan
				has_character_flag = demon_child
			}
		}
	}
	desc = {
		text = EVTDESCBHF20104_CURSED
		picture = GFX_evt_pope
		trigger = {
			event_target:baptizing_child = { trait = baptized_by_pope }

			OR = {
				has_character_flag = demon_child_non_pagan
				has_character_flag = demon_child
			}
		}
	}
	desc = {
		text = EVTDESCCHF20104
		picture = GFX_evt_bishop
		trigger = {
			event_target:baptizing_child = { trait = baptized_by_bishop }
		}
	}

	is_triggered_only = yes

	option = { # Guh
		name = {
			text = EVTOPTAHF20104
			trigger = {
				event_target:baptizing_child = {
					trigger_if = {
						limit = { trait = baptized_by_pope }

						NOR = {
							has_character_flag = demon_child_non_pagan
							has_character_flag = demon_child
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTAHF20104_CURSED
			trigger = {
				event_target:baptizing_child = {
					trait = baptized_by_pope

					OR = {
						has_character_flag = demon_child_non_pagan
						has_character_flag = demon_child
					}
				}
			}
		}

		if = {
			limit = { trait = baptized_by_satan }

			add_trait = baptized_by_satan

			FROM = {
				character_event = {
					id = HF.20106 # Initiate to satanists
					days = 5600
					random = 200
				}
			}
		}
		else_if = {
			limit = { trait = baptized_by_pope }

			add_trait = baptized_by_pope

			if = {
				limit = {
					OR = {
						has_character_flag = demon_child_non_pagan
						has_character_flag = demon_child
					}
				}

				add_scarred_tiered_effect = yes
			}
		}
		else_if = {
			limit = { trait = baptized_by_bishop }
			add_trait = baptized_by_bishop
		}

	}
}

# Spouse: Baptism has happened
character_event = {
	id = HF.20105
	picture = GFX_evt_bishop
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCAHF20103
		picture = GFX_evt_sacrifice
		trigger = { event_target:baptizing_child = { trait = baptized_by_satan } }
	}
	desc = {
		text = EVTDESCBHF20103
		picture = GFX_evt_pope
		trigger = { event_target:baptizing_child = { trait = baptized_by_pope } }
	}
	desc = {
		text = EVTDESCCHF20103
		picture = GFX_evt_bishop
		trigger = { event_target:baptizing_child = { trait = baptized_by_bishop } }
	}

	is_triggered_only = yes

	ai = no

	option = { # Good
		name = EVTOPTAHF20103
	}
}

# Parent: Child has grown enough to be introduced properly to Satanists.
character_event = {
	id = HF.20106
	desc = EVTDESCAHF20106
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	only_capable = yes

	trigger = {
		society_member_of = the_satanists

		FROM = {
			religion = ROOT
			is_alive = yes
			is_incapable = no
			NOT = { society_member_of = the_satanists }
			is_within_diplo_range = ROOT
		}
	}

	option = {
		name = EVTOPTAHF20106

		FROM = {
			show_scope_change = no

			join_society = the_satanists
			character_event = { id = HF.20107 }
		}
	}
}

# Child: introduced to Satanists at a young age
character_event = {
	id = HF.20107
	desc = EVTDESCAHF20107
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHF20107

		tooltip = {
			join_society = the_satanists
		}
	}
}

######################################################
# Baby Baptism
# second version of the event, firing from targeted-decision, hooks back into the previous chain.
character_event = {
	id = HF.20108
	desc = EVTDESCAHF20108
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		FROM = { save_event_target_as = baptizing_child }

		if = {
			limit = {
				society_member_of = the_satanists
				has_society_currency_major_trigger = yes
			}

			society = {
				random_society_member = {
					limit = { society_rank == 4 }
					save_event_target_as = scoped_satanist
				}
			}
		}

		if = {
			limit = {
				rightful_religious_head_scope = {
					controls_religion = yes
					block_general_event_trigger = no
				}
			}

			rightful_religious_head_scope = {
				save_event_target_as = scoped_pope
			}
		}

		random_realm_character = {
			limit = {
				is_theocracy = yes
				religion = ROOT
				controls_religion = no
				block_general_event_trigger = no

				OR = {
					higher_real_tier_than = BARON
					is_antipope = yes
					is_cardinal = yes
				}
			}

			save_event_target_as = scoped_bishop
		}
	}

	option = { # Satanist Baptism
		name = EVTOPTZHF20100

		trigger = {
			event_target:scoped_satanist = { always = yes }
		}

		custom_tooltip = { text = tooltip_HF20100_Z }

		show_portrait = event_target:scoped_satanist
		detract_society_currency_medium_effect = yes

		hidden_effect = {
			event_target:scoped_satanist = { save_event_target_as = scoped_baptizer }
			event_target:baptizing_child = { set_character_flag = flag_baptized_by_satan }
		}

		if = {
			limit = {
				society = {
					any_society_member = {
						same_realm = ROOT
						is_theocracy = no
						block_general_event_trigger = no

						NOR = {
							is_parent_of = event_target:baptizing_child
							has_any_opinion_modifier = opinion_godfather
							has_any_opinion_modifier = opinion_godmother
						}
					}
				}
			}

			character_event = { id = HF.20101 } # Godparent pick
		}
		else = {
			character_event = { id = HF.20103 } # Skip to baptism if no potential godparents are available.
		}

		ai_chance = {
			factor = 100

			# If the true heir can still come, don't waste your only chance to give this child the trait.
			mult_modifier = {
				factor = 0.1

				trigger_if = {
					limit = { has_law = cognatic_succession }
					FROM = { is_female = yes }
				}
				trigger_else = {
					has_law = enatic_cognatic_succession
					FROM = { is_female = no }
				}

				practical_age < 40
				any_spouse = { practical_age < 40 }
			}
		}
	}

	option = { # Papal Baptism
		name = {
			text = EVTOPTAHF20100_A
			trigger = {
				event_target:scoped_pope = {
					NOT = { religion = orthodox }
				}
			}
		}
		name = {
			text = EVTOPTAHF20100_B
			trigger = {
				event_target:scoped_pope = {
					religion = orthodox
				}
			}
		}

		custom_tooltip = { text = tooltip_HF20100_A }

		show_portrait = event_target:scoped_pope

		trigger = {
			event_target:scoped_pope = { always = yes }
		}

		scaled_wealth = {
			value = -2.0
			min = -350
			max = -750
		}

		tiered_piety_negative_effect = yes

		hidden_effect = {
			event_target:scoped_pope = { save_event_target_as = scoped_baptizer }
			event_target:baptizing_child = { set_character_flag = flag_baptized_by_pope }
		}

		if = {
			limit = {
				any_realm_character = {
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					NOR = {
						is_parent_of = event_target:baptizing_child
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
					}
				}
			}

			character_event = { id = HF.20101 } # Godparent pick
		}
		else = {
			character_event = { id = HF.20103 } # Skip to baptism if no potential godparents are available
		}

		ai_chance = {
			factor = 100

			trigger = {
				NOT = { trait = cynical }
			}

			mult_modifier = {
				factor = 1.7
				trait = zealous
			}

			mult_modifier = {
				factor = 0.5
				trait = greedy
			}

			mult_modifier = {
				factor = 0.01
				event_target:scoped_satanist = { always = yes }
			}

			# If the true heir can still come, don't waste your only chance to give this child the trait.
			mult_modifier = {
				factor = 0.1

				trigger_if = {
					limit = { has_law = cognatic_succession }
					FROM = { is_female = yes }
				}
				trigger_else = {
					has_law = enatic_cognatic_succession
					FROM = { is_female = no }
				}

				practical_age < 40
				any_spouse = { practical_age < 40 }
			}
		}
	}

	option = { # Prince-bishop Baptism
		name = EVTOPTBHF20100

		trigger = { event_target:scoped_bishop = { always = yes } }

		custom_tooltip = { text = tooltip_HF20100_B }

		show_portrait = event_target:scoped_bishop

		scaled_wealth = {
			value = -1.5
			min = -150
			max = -350
		}

		tiered_piety_negative_effect = yes

		hidden_effect = {
			event_target:scoped_bishop = { save_event_target_as = scoped_baptizer }
			event_target:baptizing_child = { set_character_flag = flag_baptized_by_bishop }
		}

		if = {
			limit = {
				any_realm_character = {
					religion = ROOT
					is_theocracy = no
					block_general_event_trigger = no

					NOR = {
						is_parent_of = event_target:baptizing_child
						has_any_opinion_modifier = opinion_godfather
						has_any_opinion_modifier = opinion_godmother
					}
				}
			}

			character_event = { id = HF.20101 } # Godparent pick
		}
		else = {
			character_event = { id = HF.20103 } # Skip to baptism if no potential godparents are available.
		}

		ai_chance = {
			factor = 50

			trigger = {
				NOT = { trait = cynical }
			}

			mult_modifier = {
				factor = 0.5
				trait = greedy
			}

			mult_modifier = {
				factor = 0.1
				society_member_of = the_satanists
			}

			# If the true heir can still come, don't waste your only chance to give this child the trait.
			mult_modifier = {
				factor = 0.1

				trigger_if = {
					limit = { has_law = cognatic_succession }
					FROM = { is_female = yes }
				}
				trigger_else = {
					has_law = enatic_cognatic_succession
					FROM = { is_female = no }
				}

				practical_age < 40
				any_spouse = { practical_age < 40 }
			}
		}
	}

	option = { # No, just regular baptism
		name = EVTOPTCHF20108

		custom_tooltip = { text = tooltip_HF20100_C }

		clr_character_flag = flag_baptizing_child

		ai_chance = { factor = 0 }
	}
}

####################################################################
# Additional benefits from Converter's new Priest.

# Hidden ping from the priest to decide what event to send to the Converter.
character_event = {
	id = HF.20110

	is_triggered_only = yes
	hide_window = yes

	only_capable = yes

	trigger = {
		religion = FROM

		FROM = {
			is_alive = yes
			is_incapable = no
		}
	}

	immediate = {
		random_list = {
			# Change to Gavelkind
			# Improve capital's infrastructure (province modifier)
			# Increase learning/stewardship/diplomacy
			# Chance to gain technology
			# Chance to gain Sponsor's culture as well
			# Chance to gain militant monks (event troops)

			100 = { # Offer chance to get Gavelkind
				trigger = {
					FROM = {
						has_law = succ_elective_gavelkind
						NOT = { has_character_flag = flag_converter_chaplain_refused_gavelkind }
					}
				}

				FROM = { character_event = { id = HF.20112 } }
			}

			25 = { # Improve capital's infrastructure (province modifiers)
				trigger = {
					FROM = {
						capital_scope = {
							NOR = {
								has_province_modifier = mass_baptism_capital_traders
								has_province_modifier = mass_baptism_capital_missionaries
								has_province_modifier = mass_baptism_capital_builders
							}
						}
					}
				}

				FROM = { character_event = { id = HF.20113 } }
			}

			25 = { # Increase learning/stewardship/diplomacy
				trigger = {
					OR = { # TODO: is this valid?
						diplomacy > FROM
						learning > FROM
						stewardship > FROM
					}
				}

				FROM = { character_event = { id = HF.20114 } }
			}

			10 = { # Chance to gain technology
				trigger = {
					FROM = { is_tribal = yes }
				}

				FROM = { character_event = { id = HF.20115 } }
			}

			5 = { # Chance to change culture
				trigger = {
					FROM = {
						culture_group = ROOT # Needs to be compatible already

						NOR = {
							culture = ROOT
							has_character_flag = flag_converter_refused_chaplain_culture_conversion
						}
					}
				}

				FROM = { character_event = { id = HF.20116 } }
			}

			5 = { # Chance to gain event troops.
				trigger = {
					is_tribal = yes
					culture = FROM # Completely integrated
					FROM = { has_any_opinion_modifier = opinion_baptism_sponsor_target } # Sponsor still lives
				}

				FROM = { character_event = { id = HF.20117 } }
			}

			1 = { # Skip a turn
				FROM = {
					repeat_event = {
						id = HF.20110
						days = 1500
						random = 500
					}
				}
			}
		}
	}
}

# Priest gives opportunity to change succession law to Gavelkind from Elective Gavelkind
character_event = {
	id = HF.20112
	desc = EVTDESCAHF20112
	picture = GFX_evt_monk
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20112

		trigger = { has_law = succ_elective_gavelkind }

		tiered_prestige_negative_effect = yes

		primary_title = {
			show_scope_change = no

			add_law = succ_gavelkind
		}

		hidden_effect = {
			any_demesne_title = {
				add_law = {
					law = succ_gavelkind
					cooldown = no
					opinion_effect = no
				}
			}

			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTBHF20112

		set_character_flag = flag_converter_chaplain_refused_gavelkind

		hidden_tooltip = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1000
					random = 250
				}
			}
		}

		ai_chance = { factor = 0 }
	}
}

# Priest gives opportunity to apply modifier on capital.
character_event = {
	id = HF.20113
	desc = EVTDESCAHF20113
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20113

		trigger = {
			capital_scope = {
				NOT = { has_province_modifier = mass_baptism_capital_traders }
			}
		}

		tiered_prestige_negative_effect = yes

		capital_scope = {
			show_scope_change = no

			add_province_modifier = {
				name = mass_baptism_capital_traders
				years = 5
			}
		}

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTBHF20113

		trigger = {
			capital_scope = {
				NOT = { has_province_modifier = mass_baptism_capital_missionaries }
			}
		}

		tiered_prestige_negative_effect = yes

		capital_scope = {
			show_scope_change = no

			add_province_modifier = {
				name = mass_baptism_capital_missionaries
				years = 5
			}
		}

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTCHF20113

		trigger = {
			capital_scope = {
				NOT = { has_province_modifier = mass_baptism_capital_builders }
			}
		}

		tiered_prestige_negative_effect = yes

		capital_scope = {
			show_scope_change = no

			add_province_modifier = {
				name = mass_baptism_capital_builders
				years = 5
			}
		}

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 20 }
	}

	option = {
		name = EVTOPTDHF20113

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1000
					random = 250
				}
			}
		}

		ai_chance = { factor = 10 }
	}
}

# Priest gives opportunity to increase attribute
character_event = {
	id = HF.20114
	desc = EVTDESCAHF20114
	picture = GFX_evt_library
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20114

		trigger = { diplomacy < FROM }

		tiered_prestige_negative_effect = yes
		change_diplomacy = 1

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTBHF20114

		trigger = { stewardship < FROM }

		tiered_prestige_negative_effect = yes
		change_stewardship = 1

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTCHF20114

		trigger = { learning < FROM }

		tiered_prestige_negative_effect = yes
		change_learning = 1

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTDHF20114

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1000
					random = 250
				}
			}
		}

		ai_chance = { factor = 0 }
	}
}

# Gain technology
character_event = {
	id = HF.20115
	desc = EVTDESCHFA20115
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20115

		tiered_prestige_negative_effect = yes
		military_techpoints = 30

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTBHF20115

		tiered_prestige_negative_effect = yes
		economy_techpoints = 30

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTCHF20115

		tiered_prestige_negative_effect = yes
		culture_techpoints = 30

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTDHF20115

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1000
					random = 250
				}
			}
		}

		ai_chance = { factor = 10 }
	}
}

# Change culture
character_event = {
	id = HF.20116
	desc = EVTDESCHFA20116
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20116

		tiered_prestige_negative_effect = yes
		culture = FROM

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 5
				trait = trusting
			}
		}
	}

	option = {
		name = EVTOPTBHF20116

		set_character_flag = flag_converter_refused_chaplain_culture_conversion

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1000
					random = 250
				}
			}
		}

		ai_chance = { factor = 99 }
	}
}

# Militant faithful arrive
character_event = {
	id = HF.20117
	desc = EVTDESCHFA20117
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20117

		tiered_prestige_negative_effect = yes

		spawn_unit = {
			province = capital_scope
			home = capital_scope
			owner = THIS
			match_character = THIS
			match_mult = 0.075
			match_min = 50
			match_max = 500
			attrition = 1.0
			cannot_inherit = yes
		}

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1500
					random = 500
				}
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTBHF20117

		set_character_flag = flag_converter_refused_chaplain_culture_conversion

		hidden_effect = {
			FROM = {
				character_event = {
					id = HF.20110
					days = 1000
					random = 250
				}
			}
		}

		ai_chance = { factor = 10 }
	}
}

# Court Chaplain Makes you change your name
character_event = {
	id = HF.20118
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCHFA20118
		picture = GFX_evt_icon
		trigger = { religion_group = christian }
	}
	desc = {
		text = EVTDESCHFB20118
		picture = GFX_evt_imam
		trigger = { religion_group = muslim }
	}

	is_triggered_only = yes

	trigger = {
		OR = {
			religion_group = christian
			religion_group = muslim
		}

		event_target:convert_lord_spiritual = {
			is_alive = yes
			religion = ROOT
			is_incapable = no
		}
	}

	option = {
		name = EVTOPTAHF20118

		tiered_prestige_negative_effect = yes
		tiered_piety_reward_effect = yes

		prompt_name = {
			player = ROOT
			type = BAPTISM
			name_list = religion
		}

		hidden_effect = {
			any_close_relative= {
				limit = {
					same_realm = ROOT
					religion = ROOT
					is_incapable = no
				}

				character_event = { id = HF.20119 }
			}
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTBHF20118

		tiered_prestige_reward_effect = yes
		tiered_piety_negative_effect = yes

		ai_chance = { factor = 10 }
	}
}

# Close relatives switch as well
character_event = {
	id = HF.20119
	desc = EVTDESCHFA20119
	picture = GFX_evt_icon
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTAHF20119

		tiered_prestige_negative_effect = yes
		tiered_piety_reward_effect = yes

		prompt_name = {
			player = ROOT
			type = BAPTISM
			name_list = religion
		}

		ai_chance = { factor = 30 }
	}

	option = {
		name = EVTOPTBHF20119

		tiered_piety_negative_effect = yes

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 5
				NOT = { true_religion = FROM }
			}
		}
	}
}