###########################################
#										#
# Warrior Lodge flavor events			#
#										#
# ID HF.500-HF.561						#
# ID HF.14001-HF.HF.14009				#
# ID HF.51000-HF.51010					#
# ID HFP.14005							#
#										#
###########################################

namespace = HF

### Train other member setup
character_event = {
	id = HF.500
	desc = HFP_500_DESC
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	portrait = event_target:combatant_1

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	min_age = 16
	war = no
	only_capable = yes
	prisoner = no

	trigger = {
		NOT = { has_character_flag = call_to_legend_active }
		society_rank == 4
		is_member_of_any_warrior_lodge_trigger = yes
		is_inaccessible_trigger = no

		society = {
			any_society_member = {
				count >= 4

				is_inaccessible_or_incapable_trigger = no
				in_command = no
				is_adult = yes
				ai = yes
				society_rank < 4

				NOR = {
					has_character_modifier = recent_duel_timer
					character = ROOT
				}
			}
		}
	}

	immediate = {

		random_list = {
			50 = { sound_effect = fighting_instructions_01 }
			50 = { sound_effect = fighting_instructions_02 }
		}

		hidden_effect = {
			save_event_target_as = hero_instigating_duel

			society = {
				random_society_member = { # Picks someone who would need some training...
					limit = {
						is_inaccessible_or_incapable_trigger = no
						in_command = no
						is_adult = yes
						ai = yes
						society_rank < 4

						NOR = {
							has_character_modifier = recent_duel_timer
							character = ROOT
						}
					}
					preferred_limit = { combat_rating < 11 }
					preferred_limit = { combat_rating < 16 }
					preferred_limit = { combat_rating < 21 }
					preferred_limit = { combat_rating < 26 }
					save_event_target_as = combatant_1
				}
				event_target:combatant_1 = {
					any_society_member = { # Pick someone even
						limit = {
							same_society_as = ROOT
							is_inaccessible_or_incapable_trigger = no
							in_command = no
							is_adult = yes
							ai = yes
							society_rank < 4

							NOR = {
								has_character_modifier = recent_duel_timer
								character = ROOT
								character = event_target:combatant_1
							}
						}
						score_value = {
							value = 10
							matching_soldier_score = yes
						}
						save_event_target_as = society_practice_duelist_target_2
					}
				}

				any_society_member = { # Pick someone bad
					limit = {
						is_inaccessible_or_incapable_trigger = no
						in_command = no
						is_adult = yes
						ai = yes
						society_rank < 4

						NOR = {
							has_character_modifier = recent_duel_timer
							character = ROOT
							character = event_target:combatant_1
							character = event_target:society_practice_duelist_target_2
						}
					}
					score_value = {
						value = 10
						bad_soldier_outcome_score = yes
					}
					save_event_target_as = society_practice_duelist_target_1
				}
				any_society_member = { # Pick someone awesome
					limit = {
						is_inaccessible_or_incapable_trigger = no
						in_command = no
						is_adult = yes
						ai = yes
						society_rank < 4

						NOR = {
							has_character_modifier = recent_duel_timer
							character = ROOT
							character = event_target:combatant_1
							character = event_target:society_practice_duelist_target_1
							character = event_target:society_practice_duelist_target_2
						}
					}
					score_value = {
						value = 10
						good_soldier_outcome_score = yes
					}
					save_event_target_as = society_practice_duelist_target_3
				}
			}
		}
	}

	option = { # Duel option 1
		name = EVTOPTA_HF_500
		show_portrait = event_target:society_practice_duelist_target_1
		custom_tooltip = { text = easy_duel_tt }

		hidden_effect = {
			event_target:combatant_1 = {
				set_character_flag = mock_duel
				set_character_flag = easy_duel
				set_character_flag = notify_instigating_hero
			}
			event_target:society_practice_duelist_target_1 = {
				save_event_target_as = combatant_2
				apply_degree_of_dishonorable_duel_effect = yes # checks a bunch of age and health statuses...
				character_event = { id = HFP.10095 }
			}
		}
	}

	option = { # Duel option 2
		name = EVTOPTB_HF_500
		show_portrait = event_target:society_practice_duelist_target_2
		custom_tooltip = { text = even_duel_tt }

		hidden_effect = {
			event_target:combatant_1 = {
				set_character_flag = mock_duel
				set_character_flag = even_duel
				set_character_flag = notify_instigating_hero
			}
			event_target:society_practice_duelist_target_2 = {
				save_event_target_as = combatant_2
				apply_degree_of_dishonorable_duel_effect = yes # checks a bunch of age and health statuses...
				character_event = { id = HFP.10095 }
			}
		}
	}

	option = { # Duel option 3
		name = EVTOPTC_HF_500
		show_portrait = event_target:society_practice_duelist_target_3
		custom_tooltip = { text = dangerous_duel_tt }

		hidden_effect = {
			event_target:combatant_1 = {
				set_character_flag = mock_duel
				set_character_flag = hard_duel
				set_character_flag = notify_instigating_hero
			}
			event_target:society_practice_duelist_target_3 = {
				save_event_target_as = combatant_2
				apply_degree_of_dishonorable_duel_effect = yes # checks a bunch of age and health statuses...
				character_event = { id = HFP.10095 }
			}
		}
	}

	option = { # Do not duel anyone
		name = EVTOPTD_HF_500

		detract_society_currency_trivial_effect = yes
		ai_chance = { factor = 0 }
	}
}

character_event = { # Win!
	id = HFP.501
	desc = HFP_501_DESC
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	portrait = event_target:combatant_1

	is_triggered_only = yes

	trigger = {
		event_target:combatant_1 = { is_alive = yes }
	}

	immediate = {
		sound_effect = duel_win

		event_target:combatant_1 = {
			random_list = {
				33 = { # I Appreciated this!
					set_character_flag = appreciated_duel

					mult_modifier = {
						factor = 3
						trait = trusting
					}

					# For Easy Duels
					mult_modifier = {
						factor = 2
						trait = greedy
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = slothful
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = envious
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 3
						trait = proud
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = ambitious
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = cruel
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = craven
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = brave
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = patient
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = kind
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = humble
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = temperate
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = even_duel
					}

					# For Hard Duels
					mult_modifier = {
						factor = 5
						trait = proud
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 5
						trait = ambitious
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 5
						trait = brave
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = humble
						has_character_flag = hard_duel
					}
				}
				33 = { # This was beneath me...
					set_character_flag = beneath_me_duel

					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = patient
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = kind
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = humble
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = temperate
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = just
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 5
						trait = brave
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = envious
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = proud
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = ambitious
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = cruel
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = even_duel
					}

					# For Hard Duels
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = temperate
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = content
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = hard_duel
					}
				}
				33 = { # I could have died!
					set_character_flag = feared_for_life_duel

					trigger = {
						NOT = { has_character_flag = easy_duel }
					}

					mult_modifier = {
						factor = 0.25
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
					}
					mult_modifier = {
						factor = 2
						trait = honest
					}
					mult_modifier = {
						factor = 2
						trait = proud
					}
					mult_modifier = {
						factor = 2
						trait = cynical
					}
					mult_modifier = {
						factor = 2
						trait = wounded
					}
					mult_modifier = {
						factor = 2
						trait = severely_injured
					}
					mult_modifier = {
						factor = 5
						trait = paranoid
					}
					mult_modifier = {
						factor = 5
						trait = craven
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTA_HF_501
		show_portrait = event_target:combatant_2

		event_target:combatant_1 = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag
				easy_duel = { add_society_currency_tiny_effect = yes }
				even_duel = { add_society_currency_minor_effect = yes }
				hard_duel = { add_society_currency_medium_effect = yes }
			}

			if = {
				limit = { has_character_flag = appreciated_duel }

				opinion = {
					name = opinion_great_leader
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_friend = ROOT }
					}

					random = {
						chance = 5
						add_friend = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					add_society_currency_tiny_effect = yes
				}
			}
			else_if = {
				limit = { has_character_flag = feared_for_life_duel }

				opinion = {
					name = opinion_tried_to_get_me_killed
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 15
						add_rival = ROOT
					}

				}
				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}
			else = {
				opinion = {
					name = opinion_disrespects_me
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 5
						add_rival = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}

			clr_character_flag = easy_duel
			clr_character_flag = even_duel
			clr_character_flag = hard_duel
			clr_character_flag = appreciated_duel
			clr_character_flag = beneath_me_duel
			clr_character_flag = feared_for_life_duel
			clr_character_flag = poor_choice_duel
		}

		clr_character_flag = notify_mild_injury
		clr_character_flag = notify_severely_injured
	}
}

character_event = { # Lose...
	id = HFP.502
	desc = HFP_502_DESC
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	portrait = event_target:combatant_1

	is_triggered_only = yes

	immediate = {
		sound_effect = duel_lose

		event_target:combatant_1 = {
			random_list = {
				33 = { # I Appreciated this!
					set_character_flag = appreciated_duel

					# These traits do not mind losing
					mult_modifier = {
						factor = 5
						trait = humble
					}
					mult_modifier = {
						factor = 2
						trait = brave
					}
					mult_modifier = {
						factor = 5
						trait = patient
					}
					mult_modifier = {
						factor = 2
						trait = content
					}
					mult_modifier = {
						factor = 2
						trait = kind
					}
					mult_modifier = {
						factor = 2
						trait = temperate
					}
					mult_modifier = {
						factor = 3
						trait = trusting
					}

					# For Easy Duels
					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = just
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = even_duel
					}
				}
				33 = { # This was beneath me...
					set_character_flag = poor_choice_duel

					# These traits just hate losing
					mult_modifier = {
						factor = 2
						trait = envious
					}
					mult_modifier = {
						factor = 5
						trait = wroth
					}
					mult_modifier = {
						factor = 2
						trait = proud
					}
					mult_modifier = {
						factor = 5
						trait = ambitious
					}
					mult_modifier = {
						factor = 2
						trait = cruel
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
					}

					# For Easy Duels
					mult_modifier = {
						factor = 2
						trait = greedy
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = slothful
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = craven
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = even_duel
					}

					# For Hard Duels
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = brave
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = hard_duel
					}
				}
				33 = { # I could have died!
					set_character_flag = feared_for_life_duel

					trigger = {
						NOT = { has_character_flag = easy_duel }
					}

					mult_modifier = {
						factor = 0.25
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
					}
					mult_modifier = {
						factor = 2
						trait = honest
					}
					mult_modifier = {
						factor = 2
						trait = proud
					}
					mult_modifier = {
						factor = 2
						trait = cynical
					}
					mult_modifier = {
						factor = 2
						trait = wounded
					}
					mult_modifier = {
						factor = 2
						trait = severely_injured
					}
					mult_modifier = {
						factor = 5
						trait = paranoid
					}
					mult_modifier = {
						factor = 5
						trait = craven
					}
				}
			}
		}
	}

	trigger = {
		event_target:combatant_1 = { is_alive = yes }
	}

	option = {
		name = EVTOPTA_HF_501
		show_portrait = event_target:combatant_2

		event_target:combatant_1 = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag
				easy_duel = { detract_society_currency_trivial_effect = yes }
				even_duel = { detract_society_currency_tiny_effect = yes }
				hard_duel = { detract_society_currency_minor_effect = yes }
			}

			if = {
				limit = { has_character_flag = appreciated_duel }

				opinion = {
					name = opinion_great_leader
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_friend = ROOT }
					}
					random = {
						chance = 5
						add_friend = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					add_society_currency_tiny_effect = yes
				}
			}
			else_if = {
				limit = { has_character_flag = feared_for_life_duel }

				opinion = {
					name = opinion_tried_to_get_me_killed
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 15
						add_rival = ROOT
					}
				}
				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}
			else = {
				opinion = {
					name = opinion_disrespects_me
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 5
						add_rival = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}

			clr_character_flag = easy_duel
			clr_character_flag = even_duel
			clr_character_flag = hard_duel
			clr_character_flag = appreciated_duel
			clr_character_flag = beneath_me_duel
			clr_character_flag = feared_for_life_duel
			clr_character_flag = poor_choice_duel
		}

		clr_character_flag = notify_mild_injury
		clr_character_flag = notify_severely_injured
	}
}

character_event = { # Defender ran away!
	id = HFP.503
	desc = HFP_503_DESC
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	portrait = event_target:combatant_1

	is_triggered_only = yes

	trigger = {
		event_target:combatant_1 = { is_alive = yes }
	}

	option = {
		name = EVTOPTA_HF_503
		show_portrait = event_target:combatant_2

		event_target:combatant_1 = {
			show_scope_change = no

			add_society_currency_trivial_effect = yes
			clr_character_flag = easy_duel
			clr_character_flag = even_duel
			clr_character_flag = hard_duel
			clr_character_flag = appreciated_duel
			clr_character_flag = beneath_me_duel
			clr_character_flag = feared_for_life_duel
			clr_character_flag = poor_choice_duel
		}

		clr_character_flag = notify_mild_injury
		clr_character_flag = notify_severely_injured
	}
}

character_event = { # Attacker ran away...
	id = HFP.504
	desc = HFP_504_DESC
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	portrait = event_target:combatant_1

	is_triggered_only = yes

	trigger = {
		event_target:combatant_1 = { is_alive = yes }
	}

	option = {
		name = EVTOPTA_HF_503
		show_portrait = event_target:combatant_2

		event_target:combatant_1 = {
			show_scope_change = no

			detract_society_currency_trivial_effect = yes
			clr_character_flag = easy_duel
			clr_character_flag = even_duel
			clr_character_flag = hard_duel
			clr_character_flag = appreciated_duel
			clr_character_flag = beneath_me_duel
			clr_character_flag = feared_for_life_duel
			clr_character_flag = poor_choice_duel
		}

		clr_character_flag = notify_mild_injury
		clr_character_flag = notify_severely_injured
	}
}

character_event = { # Won, but both wounded
	id = HFP.505
	desc = HFP_505_DESC
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	portrait = event_target:combatant_1

	is_triggered_only = yes

	trigger = {
		event_target:combatant_1 = { is_alive = yes }
	}

	immediate = {
		sound_effect = duel_win

		event_target:combatant_1 = {
			random_list = {
				33 = { # I Appreciated this!
					set_character_flag = appreciated_duel

					mult_modifier = {
						factor = 3
						trait = trusting
					}

					# For Easy Duels
					mult_modifier = {
						factor = 2
						trait = greedy
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = slothful
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = envious
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 3
						trait = proud
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = ambitious
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = cruel
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = craven
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = brave
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = patient
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = kind
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = humble
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = temperate
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = even_duel
					}

					# For Hard Duels
					mult_modifier = {
						factor = 5
						trait = proud
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 5
						trait = ambitious
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 5
						trait = brave
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = humble
						has_character_flag = hard_duel
					}
				}
				33 = { # This was beneath me...
					set_character_flag = beneath_me_duel

					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = patient
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = kind
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = humble
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = temperate
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = just
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 5
						trait = brave
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = envious
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = proud
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = ambitious
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = cruel
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = even_duel
					}

					# For Hard Duels
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = temperate
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = content
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = hard_duel
					}
				}
				33 = { # I could have died!
					set_character_flag = feared_for_life_duel

					trigger = {
						NOT = { has_character_flag = easy_duel }
					}

					mult_modifier = {
						factor = 0.25
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
					}
					mult_modifier = {
						factor = 2
						trait = honest
					}
					mult_modifier = {
						factor = 2
						trait = proud
					}
					mult_modifier = {
						factor = 2
						trait = cynical
					}
					mult_modifier = {
						factor = 2
						trait = wounded
					}
					mult_modifier = {
						factor = 2
						trait = severely_injured
					}
					mult_modifier = {
						factor = 5
						trait = paranoid
					}
					mult_modifier = {
						factor = 5
						trait = craven
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTA_HF_501
		show_portrait = event_target:combatant_2

		event_target:combatant_1 = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag
				easy_duel = { add_society_currency_tiny_effect = yes }
				even_duel = { add_society_currency_minor_effect = yes }
				hard_duel = { add_society_currency_medium_effect = yes }
			}

			if = {
				limit = { has_character_flag = appreciated_duel }

				opinion = {
					name = opinion_great_leader
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_friend = ROOT }
					}
					random = {
						chance = 5
						add_friend = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					add_society_currency_tiny_effect = yes
				}
			}
			else_if = {
				limit = { has_character_flag = feared_for_life_duel }

				opinion = {
					name = opinion_tried_to_get_me_killed
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 15
						add_rival = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}
			else = {
				opinion = {
					name = opinion_disrespects_me
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 5
						add_rival = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}

			clr_character_flag = easy_duel
			clr_character_flag = even_duel
			clr_character_flag = hard_duel
			clr_character_flag = appreciated_duel
			clr_character_flag = beneath_me_duel
			clr_character_flag = feared_for_life_duel
			clr_character_flag = poor_choice_duel
		}

		clr_character_flag = notify_mild_injury
		clr_character_flag = notify_severely_injured
	}
}

character_event = { # Lost, but both wounded
	id = HFP.506
	desc = HFP_506_DESC
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	portrait = event_target:combatant_1

	is_triggered_only = yes

	trigger = {
		event_target:combatant_1 = { is_alive = yes }
	}

	immediate = {
		sound_effect = duel_lose
		event_target:combatant_1 = {
			random_list = {
				33 = { # I Appreciated this!
					set_character_flag = appreciated_duel

					# These traits do not mind losing
					mult_modifier = {
						factor = 5
						trait = humble
					}
					mult_modifier = {
						factor = 2
						trait = brave
					}
					mult_modifier = {
						factor = 5
						trait = patient
					}
					mult_modifier = {
						factor = 2
						trait = content
					}
					mult_modifier = {
						factor = 2
						trait = kind
					}
					mult_modifier = {
						factor = 2
						trait = temperate
					}
					mult_modifier = {
						factor = 3
						trait = trusting
					}

					# For Easy Duels
					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = just
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = honest
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = even_duel
					}
				}
				33 = { # This was beneath me...
					set_character_flag = poor_choice_duel

					# These traits just hate losing
					mult_modifier = {
						factor = 2
						trait = envious
					}
					mult_modifier = {
						factor = 5
						trait = wroth
					}
					mult_modifier = {
						factor = 2
						trait = proud
					}
					mult_modifier = {
						factor = 5
						trait = ambitious
					}
					mult_modifier = {
						factor = 2
						trait = cruel
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
					}

					# For Easy Duels
					mult_modifier = {
						factor = 2
						trait = greedy
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = slothful
						has_character_flag = easy_duel
					}
					mult_modifier = {
						factor = 2
						trait = craven
						has_character_flag = easy_duel
					}

					# For Even Duels
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = even_duel
					}

					# For Hard Duels
					mult_modifier = {
						factor = 5
						trait = just
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = cynical
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
						has_character_flag = hard_duel
					}
					mult_modifier = {
						factor = 2
						trait = paranoid
						has_character_flag = hard_duel
					}
				}
				33 = { # I could have died!
					set_character_flag = feared_for_life_duel

					trigger = {
						NOT = { has_character_flag = easy_duel }
					}

					mult_modifier = {
						factor = 0.25
						has_character_flag = even_duel
					}
					mult_modifier = {
						factor = 2
						trait = stubborn
					}
					mult_modifier = {
						factor = 2
						trait = arbitrary
					}
					mult_modifier = {
						factor = 2
						trait = honest
					}
					mult_modifier = {
						factor = 2
						trait = proud
					}
					mult_modifier = {
						factor = 2
						trait = cynical
					}
					mult_modifier = {
						factor = 2
						trait = wounded
					}
					mult_modifier = {
						factor = 2
						trait = severely_injured
					}
					mult_modifier = {
						factor = 5
						trait = paranoid
					}
					mult_modifier = {
						factor = 5
						trait = craven
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTA_HF_501
		show_portrait = event_target:combatant_2

		event_target:combatant_1 = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag
				easy_duel = { detract_society_currency_trivial_effect = yes }
				even_duel = { detract_society_currency_tiny_effect = yes }
				hard_duel = { detract_society_currency_minor_effect = yes }
			}

			if = {
				limit = { has_character_flag = appreciated_duel }

				opinion = {
					name = opinion_great_leader
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_friend = ROOT }
					}
					random = {
						chance = 5
						add_friend = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					add_society_currency_tiny_effect = yes
				}
			}
			else_if = {
				limit = { has_character_flag = feared_for_life_duel }

				opinion = {
					name = opinion_tried_to_get_me_killed
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 15
						add_rival = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}
			else = {
				opinion = {
					name = opinion_disrespects_me
					who = ROOT
					years = 5
				}

				if = {
					limit = {
						NOT = { is_rival = ROOT }
					}
					random = {
						chance = 5
						add_rival = ROOT
					}
				}

				ROOT = {
					show_scope_change = no
					detract_society_currency_trivial_effect = yes
				}
			}

			clr_character_flag = easy_duel
			clr_character_flag = even_duel
			clr_character_flag = hard_duel
			clr_character_flag = appreciated_duel
			clr_character_flag = beneath_me_duel
			clr_character_flag = feared_for_life_duel
			clr_character_flag = poor_choice_duel
		}

		clr_character_flag = notify_mild_injury
		clr_character_flag = notify_severely_injured
	}
}


### Warrior Lodge members with high PCS might go out and duel random people to the death, symbolizes the mission
character_event = {
	id = HF.550

	hide_window = yes
	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	ai = yes
	min_age = 16
	only_capable = yes
	prisoner = no
	in_command = no

	trigger = {
		NOR = {
			has_character_flag = call_to_legend_active
			has_character_modifier = recent_duel_timer
			trait = shy
		}

		trigger_if = {
			limit = { society_rank == 3 }
			combat_rating >= 15
		}
		trigger_else = {
			society_rank == 4
			combat_rating >= 25
		}

		is_member_of_any_warrior_lodge_trigger = yes
		is_inaccessible_trigger = no
		has_injury_trigger = no
		is_ill = no
		has_symptom_trigger = no

		top_liege = {
			OR = {
				any_neighbor_independent_ruler = {
					any_realm_character = {
						is_inaccessible_or_incapable_trigger = no
						ai = yes
						is_adult = yes
						liege = { ai = yes }

						NOR = {
							has_character_modifier = bedridden_illness
							has_character_modifier = severe_illness
							is_married = ROOT
							is_consort = ROOT
							same_society_as = ROOT
							religion = ROOT
							higher_tier_than = DUKE
							spouse = { higher_real_tier_than = DUKE }
							father = { higher_real_tier_than = DUKE }
							mother = { higher_real_tier_than = DUKE }
						}
					}
				}

				any_realm_character = {
					is_inaccessible_or_incapable_trigger = no
					ai = yes
					is_adult = yes
					liege = { ai = yes }

					NOR = {
						has_character_modifier = bedridden_illness
						has_character_modifier = severe_illness
						is_married = ROOT
						is_consort = ROOT
						same_society_as = ROOT
						religion = ROOT
						higher_tier_than = DUKE
						spouse = { higher_real_tier_than = DUKE }
						father = { higher_real_tier_than = DUKE }
						mother = { higher_real_tier_than = DUKE }
					}
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 25
			NOT = {
				any_kill_list_character = {
					death_reason = death_duel
				}
			}
		}
		mult_modifier = {
			factor = 1.5
			society_rank == 4
		}
		mult_modifier = {
			factor = 2
			combat_rating >= 50
		}
		mult_modifier = {
			factor = 2
			combat_rating >= 70
		}
		mult_modifier = {
			factor = 2
			combat_rating >= 90
		}
		mult_modifier = {
			factor = 3
			trait = ambitious
		}
		mult_modifier = {
			factor = 3
			trait = brave
		}
		mult_modifier = {
			factor = 2
			trait = gregarious
		}
		mult_modifier = {
			factor = 2
			trait = zealous
		}
		mult_modifier = {
			factor = 2
			trait = wroth
		}
		mult_modifier = {
			factor = 2
			trait = diligent
		}
		mult_modifier = {
			factor = 2
			trait = proud
		}
		mult_modifier = {
			factor = 0.5
			trait = content
		}
		mult_modifier = {
			factor = 0.5
			trait = patient
		}
		mult_modifier = {
			factor = 0.5
			trait = temperate
		}
		mult_modifier = {
			factor = 0.5
			trait = slothful
		}
	}

	immediate = {
		save_event_target_as = combatant_1

		top_liege = {
			any_realm_character = {
				limit = {
					is_inaccessible_or_incapable_trigger = no
					ai = yes
					is_adult = yes
					liege = { ai = yes }
					same_sex = ROOT

					NOR = {
						has_character_modifier = bedridden_illness
						has_character_modifier = severe_illness
						is_married = ROOT
						is_consort = ROOT
						same_society_as = ROOT
						religion = ROOT
						higher_tier_than = DUKE
						spouse = { higher_real_tier_than = DUKE }
						father = { higher_real_tier_than = DUKE }
						mother = { higher_real_tier_than = DUKE }
					}
				}
				score_value = {
					value = 10
					bad_soldier_outcome_score = yes
				}
				save_event_target_as = combatant_2

				apply_degree_of_dishonorable_duel_effect = yes # checks a bunch of age and health statuses...
				character_event = { id = HFP.10095 }
			}

			if = {
				limit = {
					NOT = { event_target:combatant_2 = { always = yes } }
				}
			}

			random_neighbor_independent_ruler = {
				limit = {
					any_realm_character = {
						is_inaccessible_or_incapable_trigger = no
						ai = yes
						is_adult = yes
						liege = { ai = yes }
						same_sex = ROOT

						NOR = {
							has_character_modifier = bedridden_illness
							has_character_modifier = severe_illness
							is_married = ROOT
							is_consort = ROOT
							same_society_as = ROOT
							religion = ROOT
							higher_tier_than = DUKE
							spouse = { higher_real_tier_than = DUKE }
							father = { higher_real_tier_than = DUKE }
							mother = { higher_real_tier_than = DUKE }
						}
					}
				}

				any_realm_character = {
					limit = {
						is_inaccessible_or_incapable_trigger = no
						ai = yes
						is_adult = yes
						liege = { ai = yes }
						same_sex = ROOT

						NOR = {
							has_character_modifier = bedridden_illness
							has_character_modifier = severe_illness
							is_married = ROOT
							is_consort = ROOT
							same_society_as = ROOT
							religion = ROOT
							higher_tier_than = DUKE
							spouse = { higher_real_tier_than = DUKE }
							father = { higher_real_tier_than = DUKE }
							mother = { higher_real_tier_than = DUKE }
						}
					}
					score_value = {
						value = 10
						bad_soldier_outcome_score = yes
					}
					save_event_target_as = combatant_2

					apply_degree_of_dishonorable_duel_effect = yes # checks a bunch of age and health statuses...
					character_event = { id = HFP.10095 }
				}
			}
		}
	}
}


### Notify players when a lodge member is killed in a duel
character_event = {
	id = HF.560

	hide_window = yes
	is_triggered_only = yes # on_death

	is_in_society = yes

	trigger = {
		is_member_of_any_warrior_lodge_trigger = yes

		OR = {
			death_reason = death_duel
			death_reason = death_battle_duel
			death_reason = death_mission_duel
		}
	}

	immediate = { # Inform players that fellow society member has been killed in a duel
		save_event_target_as = lodge_member_killed
		killer = {
			save_event_target_as = lodge_member_killer
		}
		any_player = {
			limit = {
				same_society_as = ROOT
				NOT = { character = ROOT }
			}
			character_event = { id = HF.561 }
		}
	}
}

# Actual notification
character_event = {
	id = HF.561
	desc = HF_561_DESC
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	notification = yes

	option = {
		name = CURSES
	}
}


##### Teaching Moment #####

# Event for "Teacher"
character_event = {
	id = HF.14001
	title = teaching_moment_lack_of_focus_title
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war
	portrait = event_target:student
	sound = fighting_instructions_01

	desc = {
		text = EVTDESC_HF_14001_bravery
		trigger = { has_character_flag = teaching_bravery@event_target:student }
	}
	desc = {
		text = EVTDESC_HF_14001_ambition
		trigger = { has_character_flag = teaching_ambition@event_target:student }
	}
	desc = {
		text = EVTDESC_HF_14001_patience
		trigger = { has_character_flag = teaching_patience@event_target:student }
	}
	desc = {
		text = EVTDESC_HF_14001_diligence
		trigger = { has_character_flag = teaching_diligence@event_target:student }
	}

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	has_dlc = "Holy Fury"
	min_age = 16
	war = no
	only_capable = yes
	prisoner = no

	trigger = {
		is_member_of_any_warrior_lodge_trigger = yes
		is_inaccessible_trigger = no
		NOT = { has_character_modifier = teaching_moment_cooldown }

		OR = {
			AND = {
				trait = brave

				society = {
					any_society_member = {
						is_inaccessible_or_incapable_trigger = no
						in_command = no

						NOR = {
							trait = brave
							has_character_modifier = teaching_moment_cooldown
						}
					}
				}
			}
			AND = {
				trait = ambitious

				society = {
					any_society_member = {
						is_inaccessible_or_incapable_trigger = no
						in_command = no

						NOR = {
							trait = ambitious
							has_character_modifier = teaching_moment_cooldown
						}
					}
				}
			}
			AND = {
				trait = patient

				society = {
					any_society_member = {
						is_inaccessible_or_incapable_trigger = no
						in_command = no

						NOR = {
							trait = patient
							has_character_modifier = teaching_moment_cooldown
						}
					}
				}
			}
			AND = {
				trait = diligent

				society = {
					any_society_member = {
						is_inaccessible_or_incapable_trigger = no
						in_command = no

						NOR = {
							trait = diligent
							has_character_modifier = teaching_moment_cooldown
						}
					}
				}
			}
		}
	}

	immediate = {
		save_event_target_as = teacher

		add_character_modifier = { # to prevent spam
			name = teaching_moment_cooldown
			years = 5
			hidden = yes
		}

		society = {
			random_list = { # Select a society member to teach a thing or two...
				25 = {
					trigger = {
						ROOT = { trait = brave }

						any_society_member = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = brave
								has_character_modifier = teaching_moment_cooldown
							}
						}
					}

					mult_modifier = { # more likely if someone is actually Craven
						factor = 2
						any_society_member = {
							trait = craven
							is_inaccessible_or_incapable_trigger = no
							in_command = no
							NOT = { has_character_modifier = teaching_moment_cooldown }
						}
					}

					random_society_member = {
						limit = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = brave
								has_character_modifier = teaching_moment_cooldown
							}
						}
						preferred_limit = {
							society_rank < 4
							war = no
						}
						preferred_limit = {
							society_rank < 4
						}
						preferred_limit = {
							war = no
						}
						set_character_flag = learning_bravery@event_target:teacher
						save_event_target_as = student
					}

					ROOT = { set_character_flag = teaching_bravery@event_target:student }
				}
				25 = {
					trigger = {
						ROOT = { trait = ambitious }

						any_society_member = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = ambitious
								has_character_modifier = teaching_moment_cooldown
							}
						}
					}

					mult_modifier = { # more likely if someone is actually Content
						factor = 2
						any_society_member = {
							trait = content
							is_inaccessible_or_incapable_trigger = no
							in_command = no
							NOT = { has_character_modifier = teaching_moment_cooldown }
						}
					}

					random_society_member = {
						limit = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = ambitious
								has_character_modifier = teaching_moment_cooldown
							}
						}
						preferred_limit = {
							society_rank < 4
							war = no
						}
						preferred_limit = {
							society_rank < 4
						}
						preferred_limit = {
							war = no
						}
						set_character_flag = learning_ambition@event_target:teacher
						save_event_target_as = student
					}

					ROOT = { set_character_flag = teaching_ambition@event_target:student }
				}
				25 = {
					trigger = {
						ROOT = { trait = patient }

						any_society_member = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = patient
								has_character_modifier = teaching_moment_cooldown
							}
						}
					}

					random_society_member = {
						limit = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = patient
								has_character_modifier = teaching_moment_cooldown
							}
						}
						preferred_limit = {
							society_rank < 4
							war = no
						}
						preferred_limit = {
							society_rank < 4
						}
						preferred_limit = {
							war = no
						}
						set_character_flag = learning_patience@event_target:teacher
						save_event_target_as = student
					}

					ROOT = { set_character_flag = teaching_patience@event_target:student }
				}
				25 = {
					trigger = {
						ROOT = { trait = diligent }

						any_society_member = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = diligent
								has_character_modifier = teaching_moment_cooldown
							}
						}
					}

					mult_modifier = { # more likely if someone is actually Slotful
						factor = 2
						any_society_member = {
							trait = slothful
							is_inaccessible_or_incapable_trigger = no
							in_command = no
							NOT = { has_character_modifier = teaching_moment_cooldown }
						}
					}

					random_society_member = {
						limit = {
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								trait = diligent
								has_character_modifier = teaching_moment_cooldown
							}
						}
						preferred_limit = {
							society_rank < 4
							war = no
						}
						preferred_limit = {
							society_rank < 4
						}
						preferred_limit = {
							war = no
						}
						set_character_flag = learning_diligence@event_target:teacher
						save_event_target_as = student
					}

					ROOT = { set_character_flag = teaching_diligence@event_target:student }
				}
			}
		}
		event_target:student = {
			add_character_modifier = { # to prevent spam
				name = teaching_moment_cooldown
				years = 5
				hidden = yes
			}
		}
	}

	option = { # Yes, let's offer them some guidance...
		name = {
			text = EVTOPTA_HF_14001_bravery
			trigger = { has_character_flag = teaching_bravery@event_target:student }
		}
		name = {
			text = EVTOPTA_HF_14001_ambition
			trigger = { has_character_flag = teaching_ambition@event_target:student }
		}
		name = {
			text = EVTOPTA_HF_14001_patience
			trigger = { has_character_flag = teaching_patience@event_target:student }
		}
		name = {
			text = EVTOPTA_HF_14001_diligence
			trigger = { has_character_flag = teaching_diligence@event_target:student }
		}

		custom_tooltip = { text = EVTOPTA_HF_14001_TT }
		add_society_currency_tiny_effect = yes
		event_target:student = { character_event = { id = HF.14002 days = 1 } } # Offer guidance...
	}

	option = { # Nah/Opt out
		name = EVTOPTB_HF_14001
		custom_tooltip = { text = EVTOPTB_HF_14001_TT }

		clr_character_flag = teaching_bravery@event_target:student
		clr_character_flag = teaching_ambition@event_target:student
		clr_character_flag = teaching_patience@event_target:student
		clr_character_flag = teaching_diligence@event_target:student

		ai_chance = { factor = 0 }
	}
}

# Event for "Student" - Someone wants to offer me guidance
character_event = {
	id = HF.14002
	title = teaching_moment_lack_of_focus_title
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war
	sound = fighting_instructions_02

	desc = {
		text = EVTDESC_HF_14002_bravery
		trigger = { has_character_flag = learning_bravery@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14002_ambition
		trigger = { has_character_flag = learning_ambition@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14002_patience
		trigger = { has_character_flag = learning_patience@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14002_diligence
		trigger = { has_character_flag = learning_diligence@event_target:teacher }
	}

	is_triggered_only = yes

	trigger = {
		event_target:teacher = { is_alive = yes }
	}

	option = { # Yes, I need help
		name = EVTOPTA_HF_14002
		custom_tooltip = { text = EVTOPTA_HF_14002_TT }

		trigger_switch = {
			on_trigger = has_character_flag

			learning_bravery@event_target:teacher = { show_trait = brave	custom_tooltip = { text = could_lead_to_brave_tt } }
			learning_ambition@event_target:teacher = { show_trait = ambitious custom_tooltip = { text = could_lead_to_ambitious_tt } }
			learning_patience@event_target:teacher = { show_trait = patient custom_tooltip = { text = could_lead_to_patient_tt } }
			learning_diligence@event_target:teacher = { show_trait = diligent custom_tooltip = { text = could_lead_to_diligent_tt } }
		}

		event_target:teacher = { character_event = { id = HF.14003 days = 3 } } # Offer accepted...

		ai_chance = {
			factor = 10

			trigger = {
				NOT = { is_rival = FROM }
			}

			mult_modifier = {
				factor = 10
				has_pleasant_personality_trigger = yes
			}
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			mult_modifier = {
				factor = 10
				FROM = { ROOT_possibly_romantically_interested_trigger = yes }
			}
		}
	}

	option = { # No, what a rude suggestion!
		name = EVTOPTB_HF_14002
		custom_tooltip = { text = EVTOPTB_HF_14002_TT }

		prestige = 10

		event_target:teacher = {
			set_character_flag = they_insulted_me
			character_event = { id = HF.14004 days = 5 } # Offer rejected! How insulting!
		}

		clr_character_flag = learning_bravery@event_target:teacher
		clr_character_flag = learning_ambition@event_target:teacher
		clr_character_flag = learning_patience@event_target:teacher
		clr_character_flag = learning_diligence@event_target:teacher

		ai_chance = {
			factor = 1

			trigger = {
				NOT = { is_friend = FROM }
			}

			mult_modifier = {
				factor = 100
				is_rival = FROM
			}
			mult_modifier = {
				factor = 10
				is_evil_trigger = yes
			}
			mult_modifier = {
				factor = 10
				has_unpleasant_personality_trigger = yes
			}
		}
	}

	option = { # Leave me alone!
		name = EVTOPTC_HF_14002
		custom_tooltip = { text = EVTOPTC_HF_14002_TT }

		event_target:teacher = { character_event = { id = HF.14004 days = 3 } } # Offer rejected!

		clr_character_flag = learning_bravery@event_target:teacher
		clr_character_flag = learning_ambition@event_target:teacher
		clr_character_flag = learning_patience@event_target:teacher
		clr_character_flag = learning_diligence@event_target:teacher

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 10
				trait = depressed
			}
			mult_modifier = {
				factor = 10
				trait = stressed
			}
			mult_modifier = {
				factor = 10
				is_pregnant = yes
			}
		}
	}
}

# Event for "Teacher" - They accepted my help!
character_event = {
	id = HF.14003
	title = teaching_moment_lack_of_focus_title
	desc = EVTDESC_HF_14003
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		event_target:student = { is_alive = yes }
	}

	option = { # I'll bring my [thing]
		name = EVTOPTA_HF_14003
		custom_tooltip = { text = EVTOPTA_HF_14003_TT }
		prestige = 5

		if = {
			limit = { ai = no } # AIs don't have to pay
			scaled_wealth = { value = -1 min = -15 }
		}

		random = {
			chance = 25
			add_trait_fully_proud_effect = yes
		}

		ai_chance = {
			factor = 1

			mult_modifier = { # to not have AIs change traits all the time
				factor = 10
				trait = proud
			}
		}
	}

	option = { # Let's not get carried away
		name = EVTOPTB_HF_14003
		custom_tooltip = { text = EVTOPTB_HF_14003_TT }

		random = {
			chance = 25
			add_trait_fully_humble_effect = yes
		}

		ai_chance = {
			factor = 1

			mult_modifier = { # to not have AIs change traits all the time
				factor = 10
				trait = humble
			}
		}
	}

	after = {
		hidden_effect = {
			random_list = {
				10 = { # Great success
					mult_modifier = {
						factor = 10
						is_benevolent_trigger = yes # Nice characters want to learn
					}
					mult_modifier = {
						factor = 10
						has_pleasant_personality_trigger = yes # Friendly characters are easier to teach
					}
					mult_modifier = {
						factor = 1.5
						has_pleasant_trait_trigger = yes # Unfriendly characters are hard to teach
					}

					event_target:student = {
						character_event = {
							id = HF.14006 # Training result
							days = 10
							random = 25
						}
					}
				}
				20 = { # Some success
					event_target:student = {
						character_event = {
							id = HF.14007 # Training result!
							days = 10
							random = 25
						}
					}
				}
				5 = { # Failure
					mult_modifier = {
						factor = 10
						is_evil_trigger = yes # Evil characters don't wanna learn
					}
					mult_modifier = {
						factor = 10
						has_unpleasant_personality_trigger = yes # Unfriendly characters are hard to teach
					}
					mult_modifier = {
						factor = 1.5
						has_unpleasant_trait_trigger = yes # Unfriendly characters are hard to teach
					}

					event_target:student = {
						character_event = {
							id = HF.14008 # Training result!
							days = 10
							random = 25
						}
					}
				}
			}
		}
	}
}

# Event for "Teacher" - They rejected my help
character_event = {
	id = HF.14004
	title = teaching_moment_lack_of_focus_title
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_HF_14004_A
		trigger = { NOT = { has_character_flag = they_insulted_me } }
	}
	desc = {
		text = EVTDESC_HF_14004_B
		trigger = { has_character_flag = they_insulted_me }
	}

	is_triggered_only = yes

	option = { # That ungrateful little... (RIVALRY)
		name = EVTOPTA_HF_14004
		trigger = { has_character_flag = they_insulted_me }

		clr_character_flag = they_insulted_me
		tooltip = { add_rival = FROM }

		event_target:student = { character_event = { id = HF.14005 days = 3 } } # Offense *taken*!

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 10
				trait = wroth
			}
			mult_modifier = {
				factor = 10
				has_unpleasant_personality_trigger = yes
			}
			mult_modifier = {
				factor = 10
				event_target:student = { root_potentially_interested_in_rivaling_this_trigger = yes }
			}
		}
	}

	option = { # I can't force progress (Let it go!)
		name = EVTOPTB_HF_14004

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 10
				trait = humble
			}
			mult_modifier = {
				factor = 10
				trait = patient
			}
		}
	}

	after = {
		clr_character_flag = they_insulted_me
		clr_character_flag = teaching_bravery@event_target:student
		clr_character_flag = teaching_ambition@event_target:student
		clr_character_flag = teaching_patience@event_target:student
		clr_character_flag = teaching_diligence@event_target:student
	}
}

# Event for "Student" - They took offense to my rejection
character_event = {
	id = HF.14005
	title = teaching_moment_lack_of_focus_title
	desc = EVTDESC_HF_14005
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war

	is_triggered_only = yes


	option = { # Some people sure are sensitive...
		name = EVTOPTA_HF_14005

		add_rival = event_target:teacher
	}
}


### Teching Outcome events ###

# Great success (fires for Student)
character_event = {
	id = HF.14006
	title = teaching_moment_lack_of_focus_title
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war
	sound = fighting_instructions_01

	desc = {
		text = EVTDESC_HF_14006_bravery
		trigger = { has_character_flag = learning_bravery@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14006_ambition
		trigger = { has_character_flag = learning_ambition@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14006_patience
		trigger = { has_character_flag = learning_patience@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14006_diligence
		trigger = { has_character_flag = learning_diligence@event_target:teacher }
	}

	is_triggered_only = yes

	option = { # It went fantastic! Adds trait immediately
		name = EVTOPTA_HF_14006

		prestige = 15
		add_society_currency_trivial_effect = yes

		trigger_switch = {
			on_trigger = has_character_flag

			learning_bravery@event_target:teacher = {
				add_trait = brave
				event_target:teacher = { set_character_flag = they_gained_brave }
			}

			learning_ambition@event_target:teacher = {
				add_trait = ambitious
				event_target:teacher = { set_character_flag = they_gained_ambitious }
			}

			learning_patience@event_target:teacher = {
				add_trait = patient
				event_target:teacher = { set_character_flag = they_gained_patient }
			}

			learning_diligence@event_target:teacher = {
				add_trait = diligent
				event_target:teacher = { set_character_flag = they_gained_diligent }
			}
		}

		if = {
			limit = {
				NOT = { is_friend = event_target:teacher }
			}

			tooltip = { add_friend = event_target:teacher } # *actually* added in the follow-up
		}

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 10
				event_target:teacher = { num_of_friends < 1 }
			}
		}
	}

	option = { # Kiss them in gratitude
		name = EVTOPTB_HF_14006

		trigger = {
			event_target:teacher = {
				NOT = { is_lover = ROOT }

				trigger_if = {
					limit = { is_close_relative = ROOT }
					religion_has_incest = yes
					ROOT = { religion_has_incest = yes }
				}
			}

			# for safety
			is_adult = yes
			NOT = { trait = celibate }
		}

		prestige = 15
		add_society_currency_trivial_effect = yes
		event_target:teacher = { set_character_flag = kiss_of_gratitude }

		trigger_switch = {
			on_trigger = has_character_flag

			learning_bravery@event_target:teacher = {
				remove_trait_silently_craven_effect = yes
				add_trait = brave
				event_target:teacher = { set_character_flag = they_gained_brave }
			}

			learning_ambition@event_target:teacher = {
				remove_trait_silently_content_effect = yes
				add_trait = ambitious
				event_target:teacher = { set_character_flag = they_gained_ambitious }
			}

			learning_patience@event_target:teacher = {
				remove_trait_silently_wroth_effect = yes
				add_trait = patient
				event_target:teacher = { set_character_flag = they_gained_patient }
			}

			learning_diligence@event_target:teacher = {
				remove_trait_silently_slothful_effect = yes
				add_trait = diligent
				event_target:teacher = { set_character_flag = they_gained_diligent }
			}
		}

		add_trait_partially_silently_lustful_effect = yes

		if = {
			limit = {
				event_target:teacher = {
					OR = {
						has_opinion_modifier = { who = ROOT name = opinion_budding_romance }
						has_character_flag = carried_torch_for@ROOT
						has_character_flag = carrying_torch_for@ROOT
					}
				}
			}

			custom_tooltip = { text = EVTOPTB_HF_14006_TT_romance }
			tooltip = { add_lover = event_target:teacher }
			event_target:teacher = { set_character_flag = become_lovers }
		}
		else_if = {
			limit = {
				event_target:teacher = {
					root_attraction_trigger = yes
					attracted_to_root_trigger = yes
					opinion = { who = ROOT value >= 15 }

					NOR = {
						trait = chaste
						trait = celibate
					}
				}
			}

			custom_tooltip = { text = EVTOPTB_HF_14006_TT_romance }

			tooltip = {
				opinion = {
					name = opinion_budding_romance
					who = event_target:teacher
					years = 10
				}
				reverse_opinion = {
					name = opinion_budding_romance
					who = event_target:teacher
					years = 10
				}
			}

			event_target:teacher = { set_character_flag = both_gain_romance }
		}
		else_if = {
			limit = {
				event_target:teacher = {
					root_attraction_trigger = yes
				}
			}

			custom_tooltip = { text = EVTOPTB_HF_14006_TT_student_crushes }

			tooltip = {
				opinion = {
					name = opinion_budding_romance
					who = event_target:teacher
					years = 10
				}
			}

			event_target:teacher = { set_character_flag = student_gains_crush }
		}
		else_if = {
			limit = {
				event_target:teacher = {
					attracted_to_root_trigger = yes
				}
			}

			custom_tooltip = { text = EVTOPTB_HF_14006_TT_teacher_crushes }

			tooltip = {
				reverse_opinion = {
					name = opinion_budding_romance
					who = event_target:teacher
					years = 10
				}
			}

			event_target:teacher = { set_character_flag = teacher_gains_crush }
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 100
				event_target:teacher = { prev_is_lonely_this_romance_makes_sense_trigger = yes }
			}
			mult_modifier = {
				factor = 10
				event_target:teacher = { has_lover = no }
			}
			mult_modifier = {
				factor = 10
				trait = lustful
			}
			mult_modifier = {
				factor = 0.1
				trait = chaste
			}
			mult_modifier = {
				factor = 0.1
				trait = eunuch
			}
		}
	}

	after = {
		event_target:teacher = {
			set_character_flag = great_outcome
			character_event = { id = HF.14009 } # Notify teacher of ending...
		}
	}
}

# Alright outcome (fires for Student)
character_event = {
	id = HF.14007
	title = teaching_moment_lack_of_focus_title
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war
	sound = fighting_instructions_01

	desc = {
		text = EVTDESC_HF_14007_bravery
		trigger = { has_character_flag = learning_bravery@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14007_ambition
		trigger = { has_character_flag = learning_ambition@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14007_patience
		trigger = { has_character_flag = learning_patience@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14007_diligence
		trigger = { has_character_flag = learning_diligence@event_target:teacher }
	}

	is_triggered_only = yes

	option = { # Removes bad trait/adds good trait
		name = {
			text = EVTOPTA_HF_14007_bravery
			trigger = { has_character_flag = learning_bravery@event_target:teacher }
		}
		name = {
			text = EVTOPTA_HF_14007_ambition
			trigger = { has_character_flag = learning_ambition@event_target:teacher }
		}
		name = {
			text = EVTOPTA_HF_14007_patience
			trigger = { has_character_flag = learning_patience@event_target:teacher }
		}
		name = {
			text = EVTOPTA_HF_14007_diligence
			trigger = { has_character_flag = learning_diligence@event_target:teacher }
		}

		add_society_currency_tiny_effect = yes

		trigger_switch = {
			on_trigger = has_character_flag

			learning_bravery@event_target:teacher = {
				if = {
					limit = { trait = craven }

					remove_trait = craven
					event_target:teacher = { set_character_flag = they_lost_craven }
				}
				else_if = {
					limit = {
						NOT = { trait = brave }
					}

					add_trait = brave
					event_target:teacher = { set_character_flag = they_gained_brave }
				}
			}

			learning_ambition@event_target:teacher = {
				if = {
					limit = { trait = content }

					remove_trait = content
					event_target:teacher = { set_character_flag = they_lost_content }
				}
				else_if = {
					limit = {
						NOT = { trait = ambitious }
					}

					add_trait = ambitious
					event_target:teacher = { set_character_flag = they_gained_ambitious }
				}
			}

			learning_patience@event_target:teacher = {
				# Because Wroth isn't necessarily *bad*, compared to Patient, we skip the in-between state
				remove_trait_silently_wroth_effect = yes
				add_trait = patient
				event_target:teacher = { set_character_flag = they_gained_patient }
			}

			learning_diligence@event_target:teacher = {
				if = {
					limit = { trait = slothful }

					remove_trait = slothful
					event_target:teacher = { set_character_flag = they_lost_slothful }
				}
				else_if = {
					limit = {
						NOT = { trait = diligent }
					}

					add_trait = diligent
					event_target:teacher = { set_character_flag = they_gained_diligent }
				}
			}
		}

		event_target:teacher = { set_character_flag = good_outcome }

		if = {
			limit = {
				NOT = { is_friend = event_target:teacher }
			}

			if = { # if you already have an opinion in place, become friends...
				limit = {
					OR = {
						reverse_has_opinion_modifier = { who = event_target:teacher name = opinion_budding_friendship }
						has_opinion_modifier = { who = event_target:teacher name = opinion_budding_friendship }
					}
				}
				tooltip = { add_friend = event_target:teacher }
			}
			else = { # otherwise, add opinions... (*actually* added in follow-up)
				tooltip = {
					opinion = {
						name = opinion_budding_friendship
						who = event_target:teacher
						years = 10
					}
					reverse_opinion = {
						name = opinion_budding_friendship
						who = event_target:teacher
						years = 10
					}
				}
			}
		}

		event_target:teacher = { character_event = { id = HF.14009 } } # Notify teacher of ending...
	}
}

# Bad outcome (fires for Student)
character_event = {
	id = HF.14008
	title = teaching_moment_lack_of_focus_title
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war
	sound = fighting_instructions_01

	desc = {
		text = EVTDESC_HF_14008_bravery
		trigger = { has_character_flag = learning_bravery@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14008_ambition
		trigger = { has_character_flag = learning_ambition@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14008_patience
		trigger = { has_character_flag = learning_patience@event_target:teacher }
	}
	desc = {
		text = EVTDESC_HF_14008_diligence
		trigger = { has_character_flag = learning_diligence@event_target:teacher }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_HF_14008 # I don't know why I don't learn

		prestige = -15
	}

	option = {
		name = EVTOPTB_HF_14008 # It was *their* fault!

		event_target:teacher = { set_character_flag = they_blame_me }

		tooltip = {
			opinion = {
				name = opinion_lousy_teacher
				who = event_target:teacher
				years = 10
			}
			reverse_opinion = {
				name = opinion_spoiled_ingrate
				who = event_target:teacher
				years = 10
			}
		}
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			learning_bravery@event_target:teacher = {
				add_trait = vomiting
				set_character_flag = disease_not_serious

				character_event = {
					id = HFP.14005 # remove vomiting
					days = 10
					random = 30
				}

				if = {
					limit = { trait = brave }

					remove_trait = brave
					event_target:teacher = { set_character_flag = they_lost_brave }
				}
				else_if = {
					limit = {
						NOT = { trait = craven }
					}

					add_trait_silently_craven_effect = yes
					event_target:teacher = { set_character_flag = they_gained_craven }
				}
			}

			learning_ambition@event_target:teacher = {
				if = {
					limit = { trait = ambitious }

					remove_trait = ambitious
					event_target:teacher = { set_character_flag = they_lost_ambitious }
				}
				else_if = {
					limit = {
						NOT = { trait = content }
					}

					add_trait = content
					event_target:teacher = { set_character_flag = they_gained_content }
				}
			}

			learning_patience@event_target:teacher = {
				if = {
					limit = {
						NOT = { trait = wroth }
					}

					remove_trait_silently_patient_effect = yes
					add_trait = wroth
					event_target:teacher = { set_character_flag = they_gained_wroth }
				}
				else_if = {
					limit = {
						NOT = { trait = envious }
					}

					remove_trait_silently_kind_effect = yes
					add_trait = envious
					event_target:teacher = { set_character_flag = they_gained_envious }
				}
				else_if = {
					limit = {
						NOT = { trait = stubborn }
					}

					add_trait = stubborn
					event_target:teacher = { set_character_flag = they_gained_stubborn }
				}
			}

			learning_diligence@event_target:teacher = {
				if = {
					limit = { trait = diligent }

					remove_trait = diligent
					event_target:teacher = { set_character_flag = they_lost_diligent }
				}
				else_if = {
					limit = {
						NOT = { trait = slothful }
					}

					add_trait = slothful
					event_target:teacher = { set_character_flag = they_gained_slothful }
				}
			}
		}

		event_target:teacher = {
			set_character_flag = bad_outcome
			character_event = { id = HF.14009 } # Notify teacher of ending
		}

		clr_character_flag = learning_bravery@event_target:teacher
		clr_character_flag = learning_ambition@event_target:teacher
		clr_character_flag = learning_patience@event_target:teacher
		clr_character_flag = learning_diligence@event_target:teacher
	}
}

# Final outcome notification (fires for Teacher)
character_event = {
	id = HF.14009
	title = teaching_moment_lack_of_focus_title
	picture = GFX_evt_teaching_moment
	border = GFX_event_normal_frame_war
	sound = fighting_instructions_02

	desc = {
		text = EVTDESC_HF_14009_bravery
		trigger = { has_character_flag = teaching_bravery@event_target:student }
	}
	desc = {
		text = EVTDESC_HF_14009_ambition
		trigger = { has_character_flag = teaching_ambition@event_target:student }
	}
	desc = {
		text = EVTDESC_HF_14009_patience
		trigger = { has_character_flag = teaching_patience@event_target:student }
	}
	desc = {
		text = EVTDESC_HF_14009_diligence
		trigger = { has_character_flag = teaching_diligence@event_target:student }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_HF_14009 # They did *so* well!

		trigger = {
			has_character_flag = great_outcome
			NOT = { has_character_flag = kiss_of_gratitude }
		}

		if = {
			limit = {
				NOT = { is_friend = event_target:student }
			}
			add_friend = event_target:student
		}
	}

	option = {
		name = EVTOPTA_HF_14009_romance # They want to kiss me!

		trigger = {
			has_character_flag = great_outcome
			has_character_flag = kiss_of_gratitude
		}

		trigger_switch = {
			on_trigger = has_character_flag

			become_lovers = {
				add_lover = event_target:student
			}
			both_gain_romance = {
				opinion = {
					name = opinion_budding_romance
					who = event_target:student
					years = 10
				}
				reverse_opinion = {
					name = opinion_budding_romance
					who = event_target:student
					years = 10
				}
			}
			student_gains_crush = {
				reverse_opinion = {
					name = opinion_budding_romance
					who = event_target:student
					years = 10
				}
			}
			teacher_gains_crush = {
				opinion = {
					name = opinion_budding_romance
					who = event_target:student
					years = 10
				}
			}
		}
	}

	option = {
		name = EVTOPTB_HF_14009 # They did fairly well!
		trigger = { has_character_flag = good_outcome }

		if = {
			limit = {
				NOT = { is_friend = event_target:student }
			}

			if = { # if you already have an opinion in place, become friends...
				limit = {
					OR = {
						reverse_has_opinion_modifier = { who = event_target:student name = opinion_budding_friendship }
						has_opinion_modifier = { who = event_target:student name = opinion_budding_friendship }
					}
				}
				add_friend = event_target:student
			}
			else = { # otherwise, add opinions...
				opinion = {
					name = opinion_budding_friendship
					who = event_target:student
					years = 10
				}
				reverse_opinion = {
					name = opinion_budding_friendship
					who = event_target:student
					years = 10
				}
			}
		}
	}

	option = { # They failed...
		name = {
			text = EVTOPTC_HF_14009_1
			trigger = { has_character_flag = they_blame_me }
		}
		name = {
			text = EVTOPTC_HF_14009_2
			trigger = { NOT = { has_character_flag = they_blame_me } }
		}

		trigger = { has_character_flag = bad_outcome }

		if = {
			limit = { has_character_flag = they_blame_me }

			opinion = {
				name = opinion_spoiled_ingrate
				who = event_target:student
				years = 10
			}
			reverse_opinion = {
				name = opinion_lousy_teacher
				who = event_target:student
				years = 10
			}
		}
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			they_gained_brave	= { event_target:student = { show_scope_change = no add_trait = brave } }
			they_gained_ambitious = { event_target:student = { show_scope_change = no add_trait = ambitious } }
			they_gained_patient = { event_target:student = { show_scope_change = no add_trait = patient } }
			they_gained_diligent = { event_target:student = { show_scope_change = no add_trait = diligent } }
			they_gained_craven = { event_target:student = { show_scope_change = no add_trait = craven } }
			they_gained_content = { event_target:student = { show_scope_change = no add_trait = content } }
			they_gained_wroth	= { event_target:student = { show_scope_change = no add_trait = wroth } }
			they_gained_slothful = { event_target:student = { show_scope_change = no add_trait = slothful } }
			they_gained_envious = { event_target:student = { show_scope_change = no add_trait = envious } }
			they_gained_stubborn = { event_target:student = { show_scope_change = no add_trait = stubborn } }
			they_lost_brave	= { event_target:student = { show_scope_change = no remove_trait = brave } }
			they_lost_ambitious = { event_target:student = { show_scope_change = no remove_trait = ambitious } }
			they_lost_patient	= { event_target:student = { show_scope_change = no remove_trait = patient } }
			they_lost_diligent = { event_target:student = { show_scope_change = no remove_trait = diligent } }
			they_lost_craven	= { event_target:student = { show_scope_change = no remove_trait = craven } }
			they_lost_content	= { event_target:student = { show_scope_change = no remove_trait = content } }
			they_lost_slothful = { event_target:student = { show_scope_change = no remove_trait = slothful } }
		}

		clr_character_flag = great_outcome
		clr_character_flag = good_outcome
		clr_character_flag = bad_outcome
		clr_character_flag = teaching_bravery@event_target:student
		clr_character_flag = teaching_ambition@event_target:student
		clr_character_flag = teaching_patience@event_target:student
		clr_character_flag = teaching_diligence@event_target:student
		clr_character_flag = kiss_of_gratitude
		clr_character_flag = student_gains_crush
		clr_character_flag = teacher_gains_crush
		clr_character_flag = both_gain_romance
		clr_character_flag = become_lovers
		clr_character_flag = they_blame_me
		clr_character_flag = they_gained_brave
		clr_character_flag = they_gained_ambitious
		clr_character_flag = they_gained_patient
		clr_character_flag = they_gained_diligent
		clr_character_flag = they_gained_craven
		clr_character_flag = they_gained_content
		clr_character_flag = they_gained_wroth
		clr_character_flag = they_gained_slothful
		clr_character_flag = they_gained_envious
		clr_character_flag = they_gained_stubborn
		clr_character_flag = they_lost_brave
		clr_character_flag = they_lost_ambitious
		clr_character_flag = they_lost_patient
		clr_character_flag = they_lost_diligent
		clr_character_flag = they_lost_craven
		clr_character_flag = they_lost_content
		clr_character_flag = they_lost_slothful
	}
}


### Crucible steel weapon chain ###

# On death, spawn crucible steel weapon chain?
character_event = {
	id = HF.51000

	hide_window = yes
	is_triggered_only = yes # on_death, random_events

	has_dlc = "Holy Fury"
	is_in_society = yes
	min_age = 16

	trigger = {
		has_any_leadership_trait_trigger = yes
		is_member_of_any_warrior_lodge_trigger = yes

		OR = {
			death_reason = death_battle
			death_reason = death_duel
			death_reason = death_battle_duel
			death_reason = death_mission_duel
		}

		calc_true_if = {
			amount >= 2

			martial >= 18
			trait = shieldmaiden
			trait = berserker
			has_lifestyle_martial_trigger = yes
			this_is_sea_raider_trigger = yes
			has_crusade_trait_trigger = yes
		}

		OR = {
			any_friend = {
				same_society_as = ROOT
				block_general_event_trigger = no
			}
			any_lover = {
				same_society_as = ROOT
				block_general_event_trigger = no
			}
		}
	}

	immediate = {
		random_friend = {
			limit = {
				same_society_as = ROOT
				block_general_event_trigger = no
			}
			save_event_target_as = mourning_friend
		}

		random_lover = {
			limit = {
				same_society_as = ROOT
				block_general_event_trigger = no
			}
			save_event_target_as = mourning_lover
		}

		random_list = {
			40 = {
				trigger = {
					event_target:mourning_friend = { always = yes }
				}

				mult_modifier = {
					factor = 2
					event_target:mourning_friend = {
						num_of_artifacts < 1
					}
				}

				event_target:mourning_friend = {
					character_event = { id = HF.51001 }
				}
			}
			40 = {
				trigger = {
					event_target:mourning_lover = { always = yes }
				}

				mult_modifier = {
					factor = 2
					event_target:mourning_lover = {
						num_of_artifacts < 1
					}
				}

				event_target:mourning_lover = {
					character_event = { id = HF.51001 }
				}
			}
			20 = { } # nothing happens
		}
	}
}

# Mourning friend/lover decides how to mourn FROM
character_event = {
	id = HF.51001
	desc = EVTDESC_HF_51001
	border = GFX_event_normal_frame_war
	picture = GFX_evt_died_battle

	is_triggered_only = yes

	immediate = {
		FROM = {
			save_event_target_as = dead_warrior
		}
	}

	# TODO: Should this option be gated by the supernatural game rule?
	option = { # I shall have a weapon forged [From.GetHerHis] honor!
		name = EVTOPTA_HF_51001

		trigger = {
			any_courtier = {
				OR = {
					is_learned_trigger = yes
					has_character_flag = is_court_physician
					has_minor_title = title_court_physician
					has_minor_title = title_teacher
					has_minor_title = title_volva
					has_minor_title = title_lawspeaker
					has_minor_title = title_court_skald
					has_minor_title = title_venerable_elder
					learning >= 18
				}
			}
		}

		custom_tooltip = { text = EVTTTA_HF_51001 } # You try to find a smithy of worth to make this weapon...;;;;;;;;;;;;x
		character_event = { id = HF.51002 days = 35 }
	}

	option = { # Their techniques must continue to be taught!
		name = EVTOPTB_HF_51001
		trigger = { can_have_more_leadership_traits = yes }

		add_same_commander_trait_as_FROM = yes
	}

	option = { # A moment in calm solitude is the best way to pay respects.
		name = EVTOPTC_HF_51001
		custom_tooltip = { text = tooltip_HF_A_51008 }

		this_post_weight_gain_flavor_effect = yes
	}
}

# ROOT learns of a ritual on how to infuse a weapon with the strength of FROM
character_event = {
	id = HF.51002
	desc = EVTDESC_HF_51002
	border = GFX_event_normal_frame_war
	picture = GFX_evt_armory
	portrait = event_target:weapon_forger

	is_triggered_only = yes

	immediate = {
		FROM = {
			random_close_relative = {
				save_event_target_as = potential_sacrifice
			}
		}

		random_courtier = {
			limit = {
				OR = {
					is_learned_trigger = yes
					has_character_flag = is_court_physician
					has_minor_title = title_court_physician
					has_minor_title = title_teacher
					has_minor_title = title_volva
					has_minor_title = title_lawspeaker
					has_minor_title = title_court_skald
					has_minor_title = title_venerable_elder
					learning >= 18
				}
			}
			save_event_target_as = weapon_forger
		}
	}

	option = { # Forgive me, my friend, but I require your strength.
		name = EVTOPTA_HF_51002
		show_portrait = event_target:dead_warrior
		custom_tooltip = { text = EVTTTA_HF_51002 } # You decide to risk getting caught retrieving [dead_warrior.GetFirstName] remains...
		set_character_flag = decided_to_dig_up

		hidden_effect = {
			random_list = {
				50 = {
					mult_modifier = {
						factor = 1.5
						trait = deceitful
					}
					mult_modifier = {
						factor = 1.1
						trait = paranoid
					}
					mult_modifier = {
						factor = 1.4
						trait = patient
					}
					mult_modifier = {
						factor = 1.1
						trait = cruel
					}
					mult_modifier = {
						factor = 0.9
						trait = wroth
					}
					mult_modifier = {
						factor = 0.9
						trait = honest
					}
					mult_modifier = {
						factor = 0.9
						trait = trusting
					}
					mult_modifier = {
						factor = 0.1
						has_severe_disability_trigger = yes
					}
					mult_modifier = {
						factor = 0.5
						has_medium_disability_trigger = yes
					}
					mult_modifier = {
						factor = 0.5
						has_mental_disorder_trigger = yes
					}
					mult_modifier = {
						factor = 1.2
						intrigue >= 15
					}
					mult_modifier = {
						factor = 1.5
						intrigue >= 18
					}
					mult_modifier = {
						factor = 1.5
						is_strong_trigger = yes
					}
					mult_modifier = {
						factor = 1.5
						is_smart_trigger = yes
					}
					mult_modifier = {
						factor = 0.8
						is_weak_trigger = yes
					}
					mult_modifier = {
						factor = 0.8
						is_dumb_trigger = yes
					}
					character_event = { id = HF.51004 days = 35 } # Things go right
				}
				50 = {
					character_event = { id = HF.51003 days = 35 } # Things go wrong
				}
			}
		}
	}

	option = { # The blood of a family member will have to do.
		name = EVTOPTB_HF_51002
		show_portrait = event_target:potential_sacrifice

		trigger = {
			event_target:potential_sacrifice = { always = yes }
		}

		custom_tooltip = { text = EVTTTB_HF_51002 } # You decide to try and kidnap [potential_sacrifice.GetFirstName]...
		set_character_flag = decided_to_kidnap

		hidden_effect = {
			random_list = {
				50 = {
					mult_modifier = {
						factor = 1.5
						trait = deceitful
					}
					mult_modifier = {
						factor = 1.1
						trait = paranoid
					}
					mult_modifier = {
						factor = 1.4
						trait = patient
					}
					mult_modifier = {
						factor = 1.1
						trait = cruel
					}
					mult_modifier = {
						factor = 0.9
						trait = wroth
					}
					mult_modifier = {
						factor = 0.9
						trait = honest
					}
					mult_modifier = {
						factor = 0.9
						trait = trusting
					}
					mult_modifier = {
						factor = 0.1
						has_severe_disability_trigger = yes
					}
					mult_modifier = {
						factor = 0.5
						has_medium_disability_trigger = yes
					}
					mult_modifier = {
						factor = 0.5
						has_mental_disorder_trigger = yes
					}
					mult_modifier = {
						factor = 1.2
						intrigue >= 15
					}
					mult_modifier = {
						factor = 1.5
						intrigue >= 18
					}
					mult_modifier = {
						factor = 1.5
						is_strong_trigger = yes
					}
					mult_modifier = {
						factor = 1.5
						is_smart_trigger = yes
					}
					mult_modifier = {
						factor = 0.8
						is_weak_trigger = yes
					}
					mult_modifier = {
						factor = 0.8
						is_dumb_trigger = yes
					}

					character_event = { id = HF.51004 days = 35 } # Things go right
				}
				50 = {
					character_event = { id = HF.51003 days = 35 } # Things go wrong
				}
			}
		}
	}

	option = { # No, stop this nonsense! Away with you!
		name = EVTOPTC_HF_51002

		reverse_opinion = {
			name = opinion_extremely_disappointed
			who = event_target:weapon_forger
			years = 5
		}
	}
}

# ROOT gets caught doing something controversial...
character_event = {
	id = HF.51003
	desc = EVTDESC_HF_51003
	picture = GFX_evt_armory
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		any_courtier = {
			count >= 2
			block_general_event_trigger = no
		}
	}

	fail_trigger_effect = {
		character_event = { id = HF.51004 days = 35 } # Things go right
	}

	immediate = {
		random_courtier = {
			limit = { block_general_event_trigger = no }
			save_event_target_as = witness1
		}

		random_courtier = {
			limit = {
				block_general_event_trigger = no
				NOT = { character = event_target:witness1 }
			}
			save_event_target_as = witness2
		}
	}

	option = { # No! It's not what you think!
		name = EVTOPTA_HF_51003

		reverse_opinion = {
			name = opinion_heretic
			who = event_target:witness1
			years = 5
		}
		reverse_opinion = {
			name = opinion_heretic
			who = event_target:witness2
			years = 5
		}
	}

	option = { # It was [weapon_forger.GetTitledFirstName]! [weapon_forger.GetSheHeCap] told me to do this!
		name = EVTOPTB_HF_51003

		reverse_opinion = {
			name = opinion_heretic
			who = event_target:weapon_forger
			years = 5
		}
	}

	after = {
		add_character_modifier = {
			name = crucible_weapon_caught_heretic
			years = 5
		}

		clr_character_flag = decided_to_kidnap
		clr_character_flag = decided_to_dig_up
	}
}

# ROOT succeeds! Time to pick a weapon...
character_event = {
	id = HF.51004
	desc = EVTDESC_HF_51004
	picture = GFX_evt_camaraderie
	border = GFX_event_normal_frame_war
	portrait = event_target:dead_warrior

	is_triggered_only = yes

	trigger = {
		trigger_if = {
			limit = {
				NOT = { event_target:weapon_forger = { is_alive = yes } }
			}

			any_courtier = {
				OR = {
					is_learned_trigger = yes
					has_character_flag = is_court_physician
					has_minor_title = title_court_physician
					has_minor_title = title_teacher
					has_minor_title = title_volva
					has_minor_title = title_lawspeaker
					has_minor_title = title_court_skald
					has_minor_title = title_venerable_elder
					learning >= 18
				}
			}
		}
	}

	immediate = {
		# In case the previous weapon forger is dead, get a new one
		if = {
			limit = {
				NOT = { event_target:weapon_forger = { is_alive = yes } }
			}

			random_courtier = {
				limit = {
					OR = {
						is_learned_trigger = yes
						has_character_flag = is_court_physician
						has_minor_title = title_court_physician
						has_minor_title = title_teacher
						has_minor_title = title_volva
						has_minor_title = title_lawspeaker
						has_minor_title = title_court_skald
						has_minor_title = title_venerable_elder
						learning >= 18
					}
				}
				save_event_target_as = weapon_forger
			}
		}
	}


	option = { # An axe is the most appropriate way to honor [dead_warrior.GetFirstName].
		name = EVTOPTA_HF_51004
		show_portrait = event_target:weapon_forger

		set_character_flag = crucible_steel_axe
	}

	option = { # [dead_warrior.GetFirstName] would have wanted a sword in [dead_warrior.GetHerHis] name.
		name = EVTOPTB_HF_51004
		show_portrait = event_target:weapon_forger

		set_character_flag = crucible_steel_sword
	}

	option = { # A mace to crush both my and the old enemies of [dead_warrior.GetFirstName].
		name = EVTOPTC_HF_51004
		show_portrait = event_target:weapon_forger

		set_character_flag = crucible_steel_mace
	}

	after = {
		clr_character_flag = decided_to_kidnap
		clr_character_flag = decided_to_dig_up

		hidden_effect = {
			random_list = {
				20 = { # Bad stuff!
					random_list = {
						33 = {
							character_event = { id = HF.51005 days = 65 } # Weapon shatters on first use
						}
						33 = {
							character_event = { id = HF.51006 days = 65 } # Weapon vanishes
						}
						33 = {
							trigger = {
								any_courtier = {
									is_adult = no
									is_inaccessible_or_incapable_trigger = no
								}
							}
							character_event = { id = HF.51007 days = 65 } # Child accident
						}
					}
				}
				80 = { # Good stuff!
					random_list = {
						33 = {
							character_event = { id = HF.51008 days = 65 } # Good weapon
						}
						66 = {
							character_event = { id = HF.51009 days = 65 } # Soulbound Legendary weapon
						}
					}
				}
			}
		}
	}
}

# Bad - Weapon shatters on first use
character_event = {
	id = HF.51005
	desc = EVTDESC_HF_51005
	picture = GFX_evt_duel_scene
	border = GFX_event_normal_frame_war
	portrait = event_target:dead_warrior

	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		is_inaccessible_trigger = no
	}

	fail_trigger_effect = {
		# Try again later...
		repeat_event = {
			id = HF.51005
			days = 65
		}
	}

	immediate = {
		# In case the previous weapon forger is dead, get a new one
		if = {
			limit = {
				event_target:weapon_forger = { is_alive = no }
			}

			random_courtier = {
				limit = {
					OR = {
						is_learned_trigger = yes
						has_character_flag = is_court_physician
						has_minor_title = title_court_physician
						has_minor_title = title_teacher
						has_minor_title = title_volva
						has_minor_title = title_lawspeaker
						has_minor_title = title_court_skald
						has_minor_title = title_venerable_elder
						learning >= 18
					}
				}
				save_event_target_as = weapon_forger
			}
		}
	}

	option = { # ...It was simply bad luck, nothing else.
		name = EVTOPTA_HF_51005

		add_character_modifier = {
			name = crucible_weapon_very_bad_omen
			years = 5
		}
	}

	option = { # This is clearly your fault!
		name = EVTOPTB_HF_51005

		reverse_opinion = {
			name = opinion_horrified
			who = event_target:weapon_forger
			years = 5
		}

		add_character_modifier = {
			name = crucible_weapon_caught_heretic
			years = 5
		}
	}

	option = { # I will sacrifice your life to appease the gods.
		name = EVTOPTC_HF_51005

		event_target:weapon_forger = {
			show_scope_change = no
			death = { death_reason = death_sacrificed }
		}
	}

	after = {
		clr_character_flag = crucible_steel_axe
		clr_character_flag = crucible_steel_sword
		clr_character_flag = crucible_steel_mace
	}
}

# Bad - Weapon forger mysteriously vanishes?
character_event = {
	id = HF.51006
	desc = EVTDESC_HF_51006
	picture = GFX_evt_duel_scene
	border = GFX_event_normal_frame_war
	portrait = event_target:dead_warrior

	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		is_inaccessible_trigger = no
	}

	fail_trigger_effect = {
		# Try again later...
		repeat_event = {
			id = HF.51006
			days = 65
		}
	}

	immediate = {
		# In case the previous weapon forger is dead, get a new one
		if = {
			limit = {
				event_target:weapon_forger = { is_alive = no }
			}

			random_courtier = {
				limit = {
					OR = {
						is_learned_trigger = yes
						has_character_flag = is_court_physician
						has_minor_title = title_court_physician
						has_minor_title = title_teacher
						has_minor_title = title_volva
						has_minor_title = title_lawspeaker
						has_minor_title = title_court_skald
						has_minor_title = title_venerable_elder
						learning >= 18
					}
				}
				save_event_target_as = weapon_forger
			}
		}
	}

	option = { # Find [weapon_forger.GetHerHim] and kill [weapon_forger.GetHerHim]!
		name = EVTOPTA_HF_51006

		random_list = {
			30 = { # They run off with good weapon!
				event_target:weapon_forger = {
					show_scope_change = no

					banish = yes

					hidden_effect = {
						ROOT = {
							trigger_switch = {
								on_trigger = has_character_flag

								crucible_steel_axe = { event_target:weapon_forger = { add_artifact = axe_whispering } }
								crucible_steel_sword = { event_target:weapon_forger = { add_artifact = sword_whispering } }
								crucible_steel_mace = { event_target:weapon_forger = { add_artifact = mace_whispering } }
							}
						}
					}
				}
			}

			70 = {
				event_target:weapon_forger = {
					show_scope_change = no
					death = { death_reason = death_execution }
				}

				add_trait_fully_wroth_effect = yes
			}
		}
	}

	option = { # [weapon_forger.GetSheHeCap] is simply running late, that is all.
		name = EVTOPTB_HF_51006

		add_character_modifier = {
			name = crucible_weapon_caught_heretic
			years = 5
		}

		random_list = {
			50 = { # They run off with good weapon!
				event_target:weapon_forger = {
					show_scope_change = no

					banish = yes

					hidden_effect = {
						ROOT = {
							trigger_switch = {
								on_trigger = has_character_flag

								crucible_steel_axe = { event_target:weapon_forger = { add_artifact = axe_whispering } }
								crucible_steel_sword = { event_target:weapon_forger = { add_artifact = sword_whispering } }
								crucible_steel_mace = { event_target:weapon_forger = { add_artifact = mace_whispering } }
							}
						}
					}
				}
			}

			50 = {
				event_target:weapon_forger = {
					show_scope_change = no
					death = { death_reason = death_execution } # TODO: This seems like the wrong reason
				}

				add_trait_trusting_effect = yes
				add_trait_patient_effect = yes
			}
		}
	}

	after = {
		clr_character_flag = crucible_steel_axe
		clr_character_flag = crucible_steel_sword
		clr_character_flag = crucible_steel_mace
	}
}

# Bad - A child injures themselves
character_event = {
	id = HF.51007
	desc = EVTDESC_HF_51007
	picture = GFX_evt_child_play
	border = GFX_event_normal_frame_war
	portrait = event_target:dead_warrior

	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		is_inaccessible_trigger = no

		any_courtier = {
			is_adult = no
			is_inaccessible_or_incapable_trigger = no
		}
	}

	fail_trigger_effect = {
		# Try again later...
		repeat_event = {
			id = HF.51007
			days = 65
		}
	}

	immediate = {
		# In case the previous weapon forger is dead, get a new one
		if = {
			limit = {
				event_target:weapon_forger = { is_alive = no }
			}

			random_courtier = {
				limit = {
					OR = {
						is_learned_trigger = yes
						has_character_flag = is_court_physician
						has_minor_title = title_court_physician
						has_minor_title = title_teacher
						has_minor_title = title_volva
						has_minor_title = title_lawspeaker
						has_minor_title = title_court_skald
						has_minor_title = title_venerable_elder
						learning >= 18
					}
				}
				save_event_target_as = weapon_forger
			}
		}

		random_courtier = {
			limit = {
				is_adult = no
				is_inaccessible_or_incapable_trigger = no
			}
			save_event_target_as = unfortunate_child
		}
	}

	option = { # This is a cursed weapon that thirsts for blood! Get rid of it!
		name = EVTOPTA_HF_51007

		event_target:unfortunate_child = {
			show_scope_change = no
			add_maimed_trait_effect = yes
		}
	}

	option = { # The weapon is not what injured the child. The blame is on [unfortunate_child.GetFirstName]
		name = EVTOPTB_HF_51007

		trigger_switch = {
			on_trigger = has_character_flag
			crucible_steel_axe = { add_artifact = axe_whispering }
			crucible_steel_sword = { add_artifact = sword_whispering }
			crucible_steel_mace = { add_artifact = mace_whispering }
		}

		event_target:unfortunate_child = {
			show_scope_change = no
			add_maimed_trait_effect = yes
		}

		reverse_opinion = {
			name = opinion_horrified
			who = event_target:weapon_forger
			years = 5
		}

		add_character_modifier = {
			name = crucible_weapon_very_bad_omen
			years = 5
		}
	}


	after = {
		# event_target:unfortunate_child = { add_maimed_trait_effect = yes } # Moved into options, because "after" does not show portraits

		clr_character_flag = crucible_steel_axe
		clr_character_flag = crucible_steel_sword
		clr_character_flag = crucible_steel_mace
	}
}

# Good - A weapon is forged
character_event = {
	id = HF.51008
	desc = EVTDESC_HF_51008
	picture = GFX_evt_armory
	border = GFX_event_normal_frame_war
	portrait = event_target:dead_warrior

	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		is_inaccessible_trigger = no
	}

	fail_trigger_effect = {
		# Try again later...
		repeat_event = {
			id = HF.51008
			days = 65
		}
	}

	immediate = {
		# In case the previous weapon forger is dead, get a new one
		if = {
			limit = {
				event_target:weapon_forger = { is_alive = no }
			}

			random_courtier = {
				limit = {
					OR = {
						is_learned_trigger = yes
						has_character_flag = is_court_physician
						has_minor_title = title_court_physician
						has_minor_title = title_teacher
						has_minor_title = title_volva
						has_minor_title = title_lawspeaker
						has_minor_title = title_court_skald
						has_minor_title = title_venerable_elder
						learning >= 18
					}
				}
				save_event_target_as = weapon_forger
			}
		}
	}

	option = { # I hope [dead_warrior.GetFirstName] is witnessing this from the afterlife.
		name = EVTOPTA_HF_51008
		custom_tooltip = { text = tooltip_HF_A_51008 }

		this_post_weight_gain_flavor_effect = yes
	}

	option = { # Well, if you say so...;;;;;;;;;;;;x
		name = EVTOPTB_HF_51008

		add_trait_fully_silently_cynical_effect = yes
	}

	option = { # I do not appreciate you lying to me, [weapon_forger.GetFirstName]
		name = EVTOPTC_HF_51008

		add_trait_partially_silently_cruel_effect = yes

		event_target:weapon_forger = {
			show_scope_change = no

			death = { death_reason = death_execution }
		}
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			crucible_steel_axe = { add_artifact = axe_tier_1_new }
			crucible_steel_sword = { add_artifact = sword_tier_1_new }
			crucible_steel_mace = { add_artifact = mace_tier_1_new }
		}

		clr_character_flag = crucible_steel_axe
		clr_character_flag = crucible_steel_sword
		clr_character_flag = crucible_steel_mace
	}
}

# Good - Whispering weapon
character_event = {
	id = HF.51009
	picture = GFX_evt_duel_scene
	border = GFX_event_normal_frame_war
	portrait = event_target:dead_warrior

	desc = EVTDESC_HF_51009
	desc = EVTDESC_HF_51010

	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		is_inaccessible_trigger = no
	}

	fail_trigger_effect = {
		# Try again later...
		repeat_event = {
			id = HF.51009
			days = 65
		}
	}

	option = { # A part of [dead_warrior.GetFirstName] truly is in this weapon.
		name = EVTOPTA_HF_51009

		trigger_switch = {
			on_trigger = has_character_flag
			crucible_steel_axe = { add_artifact = axe_whispering }
			crucible_steel_sword = { add_artifact = sword_whispering }
			crucible_steel_mace = { add_artifact = mace_whispering }
		}
	}

	option = { # No! This is a cursed weapon that thirsts for blood! Get rid of it!
		name = EVTOPTB_HF_51009
	}

	after = {
		clr_character_flag = crucible_steel_axe
		clr_character_flag = crucible_steel_sword
		clr_character_flag = crucible_steel_mace
	}
}


# TODO: This seems out of place
namespace = HFP

# Removing vomiting (non-dlc locked version)
character_event = {
	id = HFP.14005
	picture = GFX_evt_recovery
	desc = EVTDESC_RIP_11005
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = vomiting
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = vomiting
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}