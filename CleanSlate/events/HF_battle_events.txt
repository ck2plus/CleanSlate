########################################
###### New battle events 2018 ##########
##### Written by Milla Isaksson ########
########################################

namespace = HFP

### Testing events ###
character_event = { # on_death event to log commander deaths in game.
	id = HFP.10997

	is_triggered_only = yes # on_death
	hide_window = yes

	has_character_flag = commanders_have_died_for_me

	immediate = {
		log = "BATTLE EVENTS: Commanders dead for ME (during my lifetime): [Root.my_commander_deaths_in_battle.GetValue] individual characters."
		log = "BATTLE EVENTS: Commanders dead, in TOTAL: [global_deaths_in_battle.GetValue] individual characters."
	}
}

####################################################################################
#### Tombola for battle events - fires for a commander leading a unit in battle ####
####################################################################################
character_event = {
	id = HFP.11000

	is_triggered_only = yes # on_combat_pulse, random_events
	hide_window = yes

	trigger = {
		is_alive = yes
		NOT = { has_character_flag = battle_event_in_progess }

		# You can't be fighting null-character
		OR = {
			FROM = { always = yes }
			FROMFROM = { always = yes }

			# An attempt to combat the "null-character" fights
	#		location = {
	#			ROOT = {
	#				any_current_enemy = {
	#					any_unit = {
	#						location = {
	#							province = PREVPREVPREVPREV
	#						}
	#					}
	#				}
	#			}
	#		}
		}

	#	log = "BATTLE EVENT: FROM yields enemy commander: [From.GetBestName] "
	#	log = "BATTLE EVENT: FROMFROM yields enemy liege: [FromFrom.GetBestName] "
	#	log = "BATTLE EVENT: ROOT is: [Root.GetBestName]"
	}

	fail_trigger_effect = {
	#	log = "BATTLE EVENT: FROM and FROMFROM are both empty."
	#	log = "BATTLE EVENT: ROOT was: [Root.GetBestName]"

		change_variable = {
			which = global_combat_pulse_failed_to_find_leader
			value = 1
		}

	#	if = {
	#		limit = {
	#			NOR = {
	#				FROM = { always = yes }
	#				FROMFROM = { always = yes }
	#			}
	#
	#			if = {
	#				limit = {
	#					location = { # An attempt to combat the "null-character" fights
	#						ROOT = {
	#							any_current_enemy = {
	#								any_unit = {
	#									location = {
	#										province = PREVPREVPREVPREV
	#									}
	#								}
	#							}
	#						}
	#					}
	#				}
	#
	#				change_variable = {
	#					which = global_combat_pulse_failed_to_find_leader
	#					value = 1
	#				}
	#			}
	#			else = {
	#				change_variable = {
	#					which = global_combat_pulse_found_back_up
	#					value = 1
	#				}
	#			}
	#		}
	#	}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 0.25
			ai = yes # Quick fix to reduce the amount of time the AI gets the events
		}
	}

	immediate = {
		disallow_new_battle_events_effect = yes # to keep the tombola from spamming you...

		# To keep scopes straight...
		save_event_target_as = home_commander

		# Workaround: in rare edge cases, the flank leader will belong to a flank which has fled, while the commander already *died* and code fails to update this
		if = {
			limit = {
				FROM = {
					character = yes
					is_alive = yes
					is_dying = no
				}
			}

			FROM = { save_event_target_as = enemy_commander }
		}

		FROMFROM = { save_event_target_as = enemy_liege } # Note: might be the same character as enemy_commander
		location = { save_event_target_as = battlefield_location }
		capital_scope = { save_event_target_as = home_capital_province }

		# In case the enemy-liege is not found (hacky work-around)
		if = {
			limit = { NOT = { event_target:enemy_liege = { always = yes } } }

			FROM = { save_event_target_as = enemy_liege } # Note: FROM is saved twice, as different targets, for sake of loc
			log = "BATTLE EVENT: Retargeting: [enemy_liege.GetTitledFirstName] is the 'enemy liege' AND commander."
			log = "BATTLE EVENT: Retargeting: [Root.GetBestName] is ROOT."
		}

		# In case the enemy-liege is STILL not found: an attempt to combat the "null-character" fights...
		if = {
			limit = { NOT = { event_target:enemy_liege = { always = yes } } }

			location = {
				ROOT = {
					random_current_enemy = {
						preferred_limit = {
							any_unit = {
								location = {
									province = PREVPREVPREVPREV
								}
							}
						}

						save_event_target_as = enemy_liege # for sake of loc
					}
				}
			}

			log = "BATTLE EVENT: Retargeting: [enemy_liege.GetTitledFirstName] is the new RANDOMLY PICKED ALMOST 'enemy liege'. [Root.GetTitledFirstName] is ROOT."
		}

		# Special handling for loc:
		# REQUIRED event targets for setting up duel evaluation! NOTE: not strictly duels here, but used for loc. [Don't copy this to anywhere else].
		save_event_target_as = combatant_1 # The person receiving the first event...
		event_target:enemy_commander = { save_event_target_as = combatant_2 } # The target of the battle...

		random_list = {
			##### Warrior Lodge exclusive ######
			20 = {
				trigger = {
					is_member_of_any_warrior_lodge_trigger = yes
					has_dlc = "Holy Fury"
					NOT = { any_artifact = { has_artifact_flag = battlefield_loot } }
				}

				good_soldier_outcome_score = yes

				character_event = { id = HFP.11026 }  # Find a weapon on the battlefield
			}

			20 = {
				trigger = {
					is_member_of_any_warrior_lodge_trigger = yes
					has_dlc = "Holy Fury"
					has_nickname = no
				}

				good_soldier_outcome_score = yes

				character_event = { id = HFP.11027 } # Pick a nickname!
			}

			10 = {
				trigger = {
					is_member_of_any_warrior_lodge_trigger = yes
					has_dlc = "Holy Fury"
					event_target:enemy_commander = { always = yes } # There has to be an opponent...
					NOT = { has_character_modifier = battle_events_1_cooldown }
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_1_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11028 } # You decapitate your enemy, and take their skull as a trophy.
			}

			20 = {
				trigger = {
					is_member_of_any_warrior_lodge_trigger = yes
					has_dlc = "Holy Fury"
					NOT = { trait = brawny }
				}

				good_soldier_outcome_score = yes

				character_event = { id = HFP.11034 } # You become Brawny.
			}

			20 = {
				trigger = {
					is_member_of_any_warrior_lodge_trigger = yes
					has_dlc = "Holy Fury"
					NOT = { has_character_modifier = battle_events_2_cooldown }

					any_unit_leader = {
						NOT = { character = ROOT }
						root_potentially_interested_in_rivaling_this_trigger = no
					}
				}

				bad_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_2_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11036 } # You are impressed by fellow commander
			}

			20 = {
				trigger = {
					is_member_of_any_warrior_lodge_trigger = yes
					has_dlc = "Holy Fury"

					# If something cool happened at your capital once and you haven't already addressed it...
					event_target:home_capital_province = {
						OR = {
							AND = {
								persistent_event_target:local_dead_commander_target = { always = yes }
								ROOT = { NOT = { has_character_modifier = glory_days } }
							}
							AND = {
								persistent_event_target:local_inspiring_commander_target = { always = yes }
								ROOT = { NOT = { has_character_modifier = proud_role_model } }
							}
							AND = {
								persistent_event_target:local_fearsome_commander_target = { always = yes }
								ROOT = { NOT = { has_character_modifier = center_of_attention } }
							}
						}
					}

					NOT = { has_character_modifier = battle_events_3_cooldown }
				}

				add_character_modifier = {
					name = battle_events_3_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11037 } # You reminisce about previous battles (hooked from previous events)
			}

			6 = {
				trigger = {
					is_member_of_any_warrior_lodge_trigger = yes
					has_dlc = "Holy Fury"

					OR = {
						has_nickname = no
						trait = depressed
						trait = stressed
					}
				}

				good_soldier_outcome_score = yes

				character_event = { id = HFP.11038 } # An event where you gain a nickname/lose stressed/depressed
			}

			#### INJURIES...
			20 = {
				trigger = {
					NOT = { trait = berserker }
					is_indomitable_trigger = no # The "Indomitable" power blocks "very bad stuff"
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				# Fix to the quick fix
				if = {
					limit = { random < 75 }
					allow_new_battle_events_effect = yes
				}
				else = {
					character_event = { id = HFP.11001 } # Killed (remake of 242)
				}
			}

			30 = {
				trigger = {
					NOR = {
						trait = wounded
						trait = berserker
					}
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				character_event = { id = HFP.11010 } # Become Wounded/Bruised (choose injury or gain Craven/lose Brave + lose prestige)
			}

			30 = {
				trigger = {
					NOT = { trait = berserker }

					trigger_if = {
						limit = { has_dlc = "Reapers" }

						NAND = { # CleanSlate: What about mangled and blinded?
							trait = one_eyed
							trait = one_handed
							trait = one_legged
							trait = disfigured
						}
					}
					trigger_else = {
						NOT = { trait = maimed }
					}
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				character_event = { id = HFP.11011 } # Maimed (randomly selected maiming, if has RIP. Otherwise, Maimed.)
			}

			5 = {
				trigger = {
					is_incapable = no
					immortal = no
					is_indomitable_trigger = no # The "Indomitable" power blocks "very bad stuff"
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				character_event = { id = HFP.11012 } # Serious head-injury (remake of 245). Chance to become Disfigured (if has RIP) or Incapable
			}

			30 = {
				trigger = {
					event_target:enemy_commander = {
						is_alive = yes
						NOT = { has_character_flag = about_to_challenge_enemy_commander } # So this isn't about to fire the other way around
					}

					NOT = { has_character_modifier = battle_events_4_cooldown }

					NAND = {
						has_pet_animal_trigger = no # The event is purely negative without the pet to sacrifice
						is_indomitable_trigger = yes
					}
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				additive_modifier = { # For the more varied versions...
					value = 10
					has_pet_animal_trigger = yes
				}

				add_character_modifier = {
					name = battle_events_4_cooldown
					years = 1
					hidden = yes
				}

				set_character_flag = about_to_challenge_enemy_commander
				character_event = { id = HFP.11025 } # Your pet to the rescue (otherwise something else)!
			}

			#### GENERAL IMPROVEMENTS (traits/tech/skill)...
			50 = {
				trigger = {
					ai = no
					NOT = { has_character_modifier = battle_events_9_cooldown }

					# There has to be an opponent (who is AI)...
					event_target:enemy_commander = {
						is_alive = yes
						ai = yes
					}
				}

				good_soldier_outcome_score = yes
				bad_soldier_outcome_enemy_commander_score = yes

				add_character_modifier = {
					name = battle_events_9_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11050 } # You spot an enemy (likely to be way worse than you): easy pickings!
			}

			50 = {
				trigger = {
					OR = {
						trait = misguided_warrior
						trait = tough_soldier
						trait = skilled_tactician
					}

					NOT = { has_character_modifier = battle_events_5_cooldown }
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_5_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11013 } # Improves martial education (remake of 246)
			}

			40 = {
				trigger = {
					martial < 10
					NOT = { has_character_modifier = battle_events_6_cooldown }
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_6_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11014 } # Flat improvement to martial skill or province modifier
			}

			40 = {
				trigger = {
					OR = {
						trait = brilliant_strategist
						trait = skilled_tactician
					}

					is_landed = yes

					event_target:home_capital_province = {
						NOT = { has_province_modifier = war_knowledge }
					}
				}

				good_soldier_outcome_score = yes
				character_event = { id = HFP.11016 } # Knowledge boost in capital from battle or tech points
			}

			60 = {
				trigger = {
					can_have_more_leadership_traits = yes
					NOT = { has_character_modifier = battle_events_7_cooldown } # All commander traits-giving events are set to need a year in between firing...
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_7_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11017 } # Gain Combat Trait 1
			}

			40 = {
				trigger = {
					can_have_more_leadership_traits = yes
					NOT = { has_character_modifier = battle_events_7_cooldown } # All commander traits-giving events are set to need a year in between firing...
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_7_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11020 } # Gain Combat Trait 2
			}

			40 = {
				trigger = {
					can_have_more_leadership_traits = yes
					NOT = { has_character_modifier = battle_events_7_cooldown } # All commander traits-giving events are set to need a year in between firing...
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_7_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11021 } # Gain Combat Trait 3
			}

			40 = {
				trigger = {
					can_have_more_leadership_traits = yes
					NOT = { has_character_modifier = battle_events_7_cooldown } # All commander traits-giving events are set to need a year in between firing...
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_7_cooldown
					years = 1
					hidden = yes
				}

				character_event = { id = HFP.11022 } # Gain Combat Trait 4
			}

			20 = {
				trigger = {
					# Either you have a child, or you have a friend...
					OR = {
						any_child_even_if_dead = {
							age >= 10
							practical_age < 40
							NOT = { at_location = ROOT }
						}

						any_friend = {
							age >= 10
							NOT = { at_location = ROOT }
						}
					}

					NOR = {
						trait = patient
						trait = wroth
						trait = blinded # Because you *see* something. Uh, yeah.
						has_character_modifier = battle_events_8_cooldown # All commander traits-giving events are set to need a year in between firing...
					}
				}

				good_soldier_outcome_score = yes

				add_character_modifier = {
					name = battle_events_8_cooldown
					years = 10
					hidden = yes
				}

				character_event = { id = HFP.11049 } # See someone you recognize (?). Gain Wroth/Patient
			}

			#### GAIN TRAITS/MISC...

			20 = {
				trigger = {
					any_owned_bloodline = {
						has_bloodline_flag = bloodline_battle_bards
						bloodline_is_active_for = PREV
					}

					has_dlc = "Holy Fury"

					NOR = {
						has_character_modifier = inspired_singer
						has_character_modifier = inspired_drummer
					}
				}

				good_soldier_outcome_score = yes

				character_event = { id = HF.12405 } # BATTLE BARDS: Bonus event for any *battle bard bloodline*
			}

			20 = {
				trigger = {
					has_job_title = job_marshal
					trait = cruel
				}

				character_event = { id = HFP.11023 } # Marshal: Unnecessary violence (fires for marshal, then liege might gain Cruel)
			}

			50 = {
				trigger = {
					primary_title = {
						NOT = { has_title_flag = ze_dyn_merc }
					}

					has_character_flag = is_mercenary_leader
					mercenary = yes

					trigger_if = {
						limit = { has_character_flag = fought_great_commander }

						had_character_flag = {
							flag = fought_great_commander
							months >= 6
						}
					}

					FROM = {
						OR = {
							martial >= 15
							has_nickname = yes
							higher_real_tier_than = DUKE
							prestige >= 2500
						}
					}
				}

				character_event = { id = HL.10300 } # Fighting a great commander (AI only, then notifies liege)
			}

			# LOSE TRAITS
			50 = {
				trigger = {
					has_character_flag = is_mercenary_leader
					mercenary = yes
					trait = craven

					primary_title = {
						NOT = { has_title_flag = ze_dyn_merc }
					}
				}

				character_event = { id = HL.10200 } # Lose Craven (Old Horse Lords event)
			}

			# MISC: Old events
			100 = {
				trigger = {
					culture_group = north_germanic
					religion_openly_norse_or_reformed_trigger = yes

					OR = {
						trait = wroth
						trait = aggressive_leader
					}

					has_dlc = "The Old Gods"
					NOT = { trait = berserker }
					practical_age < 50
				}

				character_event = { id = TOG.3000 } # Becomes Berserker
				log = "fired OLD battle EVENT TOG.3000"
			}

			100 = {
				trigger = {
					trait = berserker
					has_dlc = "The Old Gods"

					NOR = {
						trait = maimed
						trait = one_legged
					}
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				character_event = { id = TOG.3001 } # Berserker Maimed
				log = "fired OLD battle EVENT TOG.3001"
			}

			100 = {
				trigger = {
					trait = berserker
					has_dlc = "The Old Gods"
					NOT = { trait = wounded }
					is_maimed_trigger = no
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				character_event = { id = TOG.3002 } # Berserker Wounded
				log = "fired OLD battle EVENT TOG.3002"
			}

			100 = {
				trigger = {
					trait = berserker
					has_dlc = "The Old Gods"
				}

				bad_soldier_outcome_score = yes
				warrior_lodge_risk_reduction_score = yes

				character_event = { id = TOG.3003 } # Berserker Killed - Updated with new notification events
				log = "fired OLD battle EVENT TOG.3003"
			}

			100 = {
				trigger = {
					trait = berserker
					has_dlc = "The Old Gods"
				}

				good_soldier_outcome_score = yes

				character_event = { id = TOG.3004 } # Berserker Kills Many
				log = "fired OLD battle EVENT TOG.3004"
			}

			30 = {
				trigger = {
					trait = shieldmaiden
					at_location = liege

					OR = {
						religion_openly_norse_or_reformed_trigger = yes
						liege = { is_member_of_any_warrior_lodge_trigger = yes }
					}

					liege = {
						is_adult = yes
						prisoner = no
						NOT = { has_character_modifier = lucky_to_be_alive }
					}

					prisoner = no
					is_incapable = no

					NOR = {
						has_character_modifier = favored_shieldmaiden
						has_character_modifier = bad_shieldmaiden
						has_character_modifier = clumsy_shieldmaiden
						has_character_modifier = inattentive_soldier
					}
				}

				character_event = { id = 79009 } # Shieldmaiden can save liege on battlefield (choice for Shieldmaiden who is ROOT)
				log = "fired OLD battle EVENT 79009"
			}

			30 = {
				trigger = {
					OR = {
						religion_openly_norse_or_reformed_trigger = yes
						is_member_of_any_warrior_lodge_trigger = yes
					}

					any_courtier_or_vassal = {
						trait = shieldmaiden
						has_minor_title = title_commander
						is_incapable = no
						prisoner = no
					}

					is_adult = yes
					is_incapable = no
				}

				character_event = { id = 79001 } # Shieldmaiden saves liege, but she is injured (small chain, fired for liege who is ROOT)
				log = "fired OLD battle EVENT 79001"
			}

			5 = {
				trigger = {
					is_ruler = yes
					NOT = { trait = craven }
					health_traits < 1
					independent = no

					liege = {
						any_vassal = {
							at_location = ROOT
							in_command = yes
							in_battle = yes
							health_traits < 1

							opinion = {
								who = ROOT
								value >= -30
							}

							opinion = {
								who = ROOT
								value < 30
							}

							NOR = {
								war_with = ROOT
								character = ROOT
							}
						}
					}
				}

				mult_modifier = {
					factor = 2
					trait = brave
				}

				character_event = { id = 6910 } # Save someone's life at the battlefield...  become very good friend.
				log = "fired OLD battle EVENT 6910"
			}

			# SCRYING VISIONS (2)
			100 = {
				trigger = {
					has_battle_omen_modifier_trigger = yes
					has_dlc = "Mystics"
					can_have_more_leadership_traits = yes

					NAND = {
						trait = direct_leader
						trait = unyielding_leader
						trait = inspiring_leader
					}
				}

				good_soldier_outcome_score = yes

				mult_modifier = {
					factor = 2.5
					has_character_modifier = good_battle_omen
				}

				mult_modifier = {
					factor = 0.9
					has_character_modifier = bad_battle_omen
				}

				character_event = { id = MNM.1202 }  # Scrying vision inspires greatness
				log = "fired OLD battle EVENT MNM.1202"
			}

			100 = {
				trigger = {
					has_battle_omen_modifier_trigger = yes
					has_dlc = "Mystics"
				}

				bad_soldier_outcome_score = yes

				mult_modifier = {
					factor = 2.5
					has_character_modifier = bad_battle_omen
				}

				mult_modifier = {
					factor = 0.9
					has_character_modifier = good_battle_omen
				}

				character_event = { id = MNM.1203 } # Scrying vision injury
				log = "fired OLD battle EVENT MNM.1203"
			}

			2 = {
				trigger = { is_indomitable_trigger = no }

				character_event = { id = HFP.30200 }
			}
		}
	}
}

### BATTLE EVENT: Killed in action (fired from HFP.11000)
character_event = {
	id = HFP.11001
	title = the_battle_at_location
	desc = EVTDESC_HFP_11001_A
	desc = EVTDESC_HFP_11001_B
	desc = EVTDESC_HFP_11001_C
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = lose_battle

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you... (if MP)
		save_beloved_character_effect = yes # Find someone to think of in dying moment...

		random_rival = {
			save_event_target_as = random_rival_target # For loc and extra fun
		}

		# Sets up weapons for localization...
		set_dueling_weapon_effect = yes
		event_target:enemy_commander = { set_dueling_weapon_effect = yes }

		# In case there was an artifact available for fighting with (it might be lost to the enemy)...
		if = {
			limit = { event_target:dueling_weapon_1 = { always = yes } }
			set_character_flag = dropped_weapon
		}

		### Saved in tombola:
		# event_target:home_commander
		# event_target:enemy_commander (originally FROM)
		# event_target:enemy_liege (originally FROMFROM)
		# event_target:battlefield_location (location of battle)

		### Saved in *this* event:
		# event_target:home_liege (liege of home_commander, if there is one)

		if = {
			limit = { independent = no }

			liege = {
				save_event_target_as = home_liege
				character_event = { id = HFP.11002 } # Send notification to home_liege...
			}
		}

		event_target:enemy_liege = { # The LIEGE of the commander on the opposing side
			if = {
				limit = {
					NOR = { # If they are not below you, or YOU...
						is_vassal_or_below_of = ROOT
						character = ROOT
					}
				}

				set_character_flag = temp_battle_kill_242

				if = {
					limit = { ROOT = { has_character_flag = dropped_weapon } }

					# If there *was* no enemy commander, we need to deal with the dropped weapon...
					if = {
						limit = {
							NOT = { event_target:enemy_commander = { always = yes } }
						}

						character_event = { id = HFP.11004 } # Send choice event about taking the weapon from the dead commander...
					}
				}
				else = { # If a dropped weapon is *not* involved (most common)...
					if = {
						limit = {
							# If there is a commander, and you are not that commander...
							trigger_if = {
								limit = { event_target:enemy_commander = { always = yes } }
								enemy_commander_and_liege_are_different_characters = yes
							}
						}

						character_event = { id = HFP.11005 } # Send regular notification of killing this commander...
					}
				}
			}
		}

		event_target:enemy_commander = { # The commander of the opposing side
			if = {
				limit = {
					NOR = {
						has_character_flag = temp_battle_kill_242
						is_vassal_or_below_of = ROOT
						character = ROOT
					}
				}

				##### For tiered rewards..., for later effects...

				if = {
					limit = { duelist_skill_compared_to_prev_high_group_trigger = yes }
					set_character_flag = fought_worse_warrior@ROOT
				}
				else_if = {
					limit = { duelist_skill_compared_to_prev_low_group_trigger = yes }
					set_character_flag = fought_great_warrior@ROOT
				}
				else = {
					set_character_flag = fought_even_warrior@ROOT
				}

				#####

				if = {
					limit = { ROOT = { has_character_flag = dropped_weapon } }
					character_event = { id = HFP.11003 } # Send choice event about taking the weapon from the dead commander (then forward to enemy liege)...
				}
				else = { # If a dropped weapon is *not* involved (most common)...
					character_event = { id = HFP.11005 } # Send notification of killing this commander...
				}
			}
		}

		event_target:enemy_liege = {
			clr_character_flag = temp_battle_kill_242 # For handling old TOG-events...
		}

		if = {
			limit = { multiplayer = yes }

			set_character_flag = is_battlefield_duel
			debug_battle_death_counter_effect = yes # For debug purposes

			if = {
				limit = { # If it does *not* make sense that the enemy_commander killed home_commander...
					OR = {
						is_vassal_or_below_of = event_target:enemy_commander
						character = event_target:enemy_commander
						NOT = { event_target:enemy_commander = { always = yes } }
					}
				}

				death = { death_reason = death_battle }
			}
			else = {
				death = {
					death_reason = death_battle
					killer = event_target:enemy_commander
				}
			}
		}
	}

	option = {
		name = {
			text = ALAS
			trigger = {
				trigger_if = {
					limit = { event_target:random_rival_target = { always = yes } }

					trigger_if = {
						limit = {
							OR = {
								trait = kind
								is_pious_trigger = yes
							}
						}

						NOT = { trait = cruel }
						is_impious_trigger = no
					}
					trigger_else = {
						OR = {
							trait = cruel
							is_impious_trigger = yes
						}
					}
				}

				NOR = {
					is_lover = event_target:my_beloved
					is_parent_of = event_target:my_beloved
					is_child_of = event_target:my_beloved
					is_married = event_target:my_beloved
				}
			}
		}
		name = {
			text = EVTOPTA_HFP_10001_kind # I should've made peace with <Rival>
			trigger = {
				event_target:random_rival_target = { always = yes }

				OR = {
					trait = kind
					is_pious_trigger = yes
				}

				NOR = {
					trait = cruel
					is_impious_trigger = yes
					is_lover = event_target:my_beloved
					is_parent_of = event_target:my_beloved
					is_child_of = event_target:my_beloved
					is_married = event_target:my_beloved
				}
			}
		}
		name = {
			text = EVTOPTA_HFP_10001_cruel # <Rival> outlived me?!
			trigger = {
				event_target:random_rival_target = { always = yes }

				OR = {
					trait = cruel
					is_impious_trigger = yes
				}

				NOR = {
					trait = kind
					is_pious_trigger = yes
					is_lover = event_target:my_beloved
					is_parent_of = event_target:my_beloved
					is_child_of = event_target:my_beloved
					is_married = event_target:my_beloved
				}
			}
		}
		name = {
			text = EVTOPTA_HFP_10001_lover # Tell "my_beloved" that I love him/her...
			trigger = {
				OR = {
					is_lover = event_target:my_beloved
					is_parent_of = event_target:my_beloved
					is_child_of = event_target:my_beloved
					is_married = event_target:my_beloved
				}
			}
		}

		# For portraits and tooltips...
		if = {
			limit = {
				OR = {
					is_lover = event_target:my_beloved
					is_parent_of = event_target:my_beloved
					is_child_of = event_target:my_beloved
					is_married = event_target:my_beloved
				}
			}

			show_portrait = event_target:my_beloved
		}

		if = {
			limit = { event_target:home_liege = { always = yes } }

			custom_tooltip = { text = home_liege_will_be_notified_of_death_tt }
			show_portrait = event_target:home_liege
		}

		if = {
			limit = { event_target:enemy_commander = { always = yes } }

			if = {
				limit = { has_character_flag = dropped_weapon }
				custom_tooltip = { text = enemy_commander_looms_over_your_artifact_tt }
			}
			else = {
				custom_tooltip = { text = enemy_commander_looms_over_you_tt }
			}

			show_portrait = event_target:enemy_commander
		}

		if = {
			limit = {
				event_target:random_rival_target = { always = yes }

				trigger_if = {
					limit = {
						OR = {
							trait = kind
							is_pious_trigger = yes
						}
					}

					NOT = { trait = cruel }
					is_impious_trigger = no
				}
				trigger_else = {
					OR = {
						trait = cruel
						is_impious_trigger = yes
					}
				}
			}

			show_portrait = event_target:random_rival_target
		}

		if = { # This is currently a little too common maybe?
			limit = {
				is_landed = yes
				is_member_of_any_warrior_lodge_trigger = yes
			}

			event_target:home_capital_province = {
				show_scope_change = no

				add_province_modifier = {
					name = province_mourning_warrior_death
					years = 1
				}

				save_persistent_event_target = {
					name = local_dead_commander_target # Hook-in: Warrior Lodges
					scope = event_target:home_commander
				}
			}
		}

		### Actual death (if not MP)
		if = {
			limit = { multiplayer = no }

			set_character_flag = is_battlefield_duel
			debug_battle_death_counter_effect = yes # For debug purposes

			if = {
				limit = { # If it does *not* make sense that the enemy_commander killed home_commander...
					OR = {
						is_vassal_or_below_of = event_target:enemy_commander
						character = event_target:enemy_commander
						NOT = { event_target:enemy_commander = { always = yes } }
					}
				}

				death = { death_reason = death_battle }
			}
			else = {
				death = {
					death_reason = death_battle
					killer = event_target:enemy_commander
				}

			}
		}
	}
}

# Follow-up: Home (liege) is informed that their commander has been killed (fired from HFP.11001)
character_event = {
	id = HFP.11002
	title = commander_lost
	desc = EVTDESC_HFP_11002 # Based on: EVTDESC253
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = lose_battle

	is_triggered_only = yes

	option = { # DEFAULT
		name = EVTOPTA_HFP_11002 # Another one bites the dust

		trigger = {
			NOT = { is_lover = event_target:home_commander }
		}

		prestige = -10
	}

	option = {
		name = EVTOPTB_HFP_11002 # I will avenge you, my beloved!

		trigger = {
			# If you had some kind of close relationship with them (and it makes sense)...BUT not lovers.
			event_target:home_commander = {
				OR = {
					is_child_of = ROOT
					is_married = ROOT
					is_parent_of = ROOT
					sibling = ROOT
				}

				root_potentially_interested_in_rivaling_this_trigger = no
				NOT = { is_lover = ROOT }
			}

			event_target:enemy_commander = {
				is_alive = yes
			}
		}

		prestige = -10

		add_character_modifier = {
			name = seeking_vengeance
			days = 1000
		}

		if = {
			limit = {
				event_target:home_commander = {
					killer = { character = event_target:enemy_commander }
				}
			}

			tooltip = {
				event_target:enemy_commander = {
					show_scope_change = no

					prestige = 15
				}
			}

			add_rival = event_target:enemy_commander
		}
	}

	option = {
		name = 253_lover # Nooo, my sweet love!

		trigger = { is_lover = event_target:home_commander }

		prestige = -10

		add_character_modifier = {
			name = grieving_over_warrior_lover
			days = 1000
		}


		if = {
			limit = {
				event_target:home_commander = {
					killer = {
						character = event_target:enemy_commander
						is_alive = yes
					}
				}
			}

			tooltip = {
				event_target:enemy_commander = {
					show_scope_change = no

					prestige = 15
				}
			}

			add_rival = event_target:enemy_commander
		}
	}
}

# Follow-up: Enemy COMMANDER is informed that the commander of the opposing forces has been killed AND dropped a weapon (fired from HFP.11001)
character_event = {
	id = HFP.11003
	title = commander_slain
	desc = EVTDESC_HFP_11003
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = { # I'll take that
		name = EVTOPTA_HFP_10003

		# The dropped weapon (during testing, will be inherited first)
		event_target:dueling_weapon_1 = {
			show_scope_change = no

			transfer_artifact = {
				from = event_target:home_commander # Not actually, but the tooltip will say so. It will *actually* come from the "owner", which might at this point be the heir of the dead commander...
				to = ROOT
			}
		}

		if = {
			limit = { enemy_commander_and_liege_are_different_characters = yes }

			event_target:enemy_liege = {
				character_event = {
					id = HFP.11005 # Liege gets generic notification about death...
					days = 1
				}
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 1.5
				trait = greedy
			}

			mult_modifier = {
				factor = 1.5
				trait = proud
			}

			mult_modifier = {
				factor = 1.5
				is_evil_trigger = yes
			}

			mult_modifier = {
				factor = 2
				any_artifact = { is_dueling_weapon_artifact_and_equipped = no }
			}
		}
	}

	option = { # I'll give it to my liege
		name = EVTOPTB_HFP_10003

		trigger = { enemy_commander_and_liege_are_different_characters = yes }

		event_target:enemy_liege = {
			show_scope_change = no

			tooltip = {
				opinion = {
					name = opinion_grateful
					who = ROOT
					years = 3
				}
			}

			character_event = {
				id = HFP.11004 # Give liege the same option you got...
				days = 1
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 1.5
				trait = charitable
			}

			mult_modifier = {
				factor = 1.5
				trait = kind
			}

			mult_modifier = {
				factor = 1.5
				trait = just
			}

			mult_modifier = {
				factor = 1.5
				any_artifact = { is_dueling_weapon_artifact_and_equipped = yes }
			}
		}
	}

	option = { # I won't steal from the dead
		name = EVTOPTC_HFP_10003

		piety = 30

		if = {
			limit = { enemy_commander_and_liege_are_different_characters = yes }

			event_target:enemy_liege = {
				character_event = {
					id = HFP.11005 # Liege gets generic notification about death...
					days = 1
				}
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 1.5
				is_benevolent_trigger = yes
			}

			mult_modifier = {
				factor = 2
				is_pious_trigger = yes
			}
		}
	}

	after = {
		apply_opinion_reward_effect = yes
		allow_new_battle_events_effect = yes
	}
}

# Follow-up: Enemy LIEGE is informed that the commander of the opposing forces has been killed AND dropped a weapon
# (either a follow-up from HFP.11003, or from HFP.11001 (for the killed commander) if no friendly commander was present)
character_event = {
	id = HFP.11004
	title = commander_slain
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	desc = { # If there was a commander...
		text = EVTDESC_HFP_11004_A
		trigger = { event_target:enemy_commander = { always = yes } }
	}
	desc = { # Else, if the event was sent directly to you...
		text = EVTDESC_HFP_11004_B
		trigger = { NOT = { event_target:enemy_commander = { always = yes } } }
	}

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = { # I'll take that
		name = EVTOPTA_HFP_10003

		# The dropped weapon (during testing, will be inherited first)
		event_target:dueling_weapon_1 = {
			show_scope_change = no

			transfer_artifact = {
				from = owner
				to = ROOT
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 1.5
				trait = greedy
			}

			mult_modifier = {
				factor = 1.5
				trait = proud
			}

			mult_modifier = {
				factor = 1.5
				is_evil_trigger = yes
			}

			mult_modifier = {
				factor = 2
				any_artifact = { is_dueling_weapon_artifact_and_equipped = no }
			}
		}
	}

	option = { # I won't steal from the dead
		name = EVTOPTC_HFP_10003

		piety = 30

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 1.5
				is_benevolent_trigger = yes
			}

			mult_modifier = {
				factor = 1.5
				is_pious_trigger = yes
			}
		}
	}

	after = {
		apply_opinion_reward_effect = yes
		allow_new_battle_events_effect = yes
	}
}

# Follow-up: Enemy liege *or* commander is informed that the commander of the opposing forces has been killed.
# (sent from HFP.11001 (from the killed commander) if no weapon was dropped)
character_event = {
	id = HFP.11005
	title = commander_slain
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	desc = { # If you are the enemy liege...
		text = EVTDESC_HFP_11005_A
		trigger = { character = event_target:enemy_liege }
	}
	desc = { # If you are the enemy commander...
		text = EVTDESC_HFP_11005_B
		trigger = { character = event_target:enemy_commander }
	}

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = EVTOPTA249

		show_portrait = event_target:home_commander
		prestige = 15

		apply_opinion_reward_effect = yes
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Generic Wounded in action (fired from HFP.11000)
character_event = {
	id = HFP.11010 # "inspired" by 243
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = lose_battle

	desc = {
		text = EVTDESC_HFP_11010_A
		trigger = { has_character_flag = desc_A }
	}
	desc = {
		text = EVTDESC_HFP_11010_B
		trigger = { has_character_flag = desc_B }
	}
	desc = {
		text = EVTDESC_HFP_11010_C
		trigger = { has_character_flag = desc_C }
	}

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_negative_effect = yes

		# For consistency between description and event options
		random_list = {
			33 = { set_character_flag = desc_A }
			33 = { set_character_flag = desc_B }
			33 = { set_character_flag = desc_C }
		}

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				disallow_new_battle_events_effect = yes # To keep the tombola from spamming your potential target...
			}
		}

		set_battle_duels_option_flag_effect = yes
		set_character_flag = skip_wounded_trait

		# Randomize bruised body part
		random_list = {
			10 = {
				trigger = { NOT = { trait = blinded } }

				if = {
					limit = { trait = one_eyed }
					set_character_flag = injury_both_eyes
				}
				else = {
					set_character_flag = injury_eye
				}
			}

			10 = {
				trigger = { NOT = { trait = one_handed } }
				set_character_flag = injury_hand
			}

			10 = {
				trigger = { NOT = { trait = one_legged } }
				set_character_flag = injury_leg
			}

			3 = {
				trigger = { NOT = { trait = disfigured } }
				set_character_flag = injury_face
			}

			1 = {
				trigger = { NOT = { trait = mangled } }
				set_character_flag = injury_mangled_body
			}

			fallback = { # Only in case you already have ALL the other maimed traits?
				set_character_flag = injury_could_be_lethal
			}
		}
	}

	option = { # Special option: High Combat-rating only (no enemy commander present)
		name = EVTOPT_HFP_11010_C
		tooltip_info = combat_rating

		trigger = {
			has_character_flag = high_PCS_opt

			NOT = { event_target:enemy_commander = { always = yes } }
		}

		prestige = 15
		pacifists_lose_piety_effect = yes
		allow_new_battle_events_effect = yes

		ai_chance = { factor = 6 }
	}

	option = { # Special option: Duel enemy commander instead (if you have great combat rating)
		name = EVTOPT_HFP_11011_C
		tooltip_info_custom = available_because_duels

		trigger = {
			has_character_flag = duel_enemy_opt

			# To ensure you do not try to duel commanders who literally *just* died (in battle, presumably)
			event_target:enemy_commander = {
				is_alive = yes
				is_dying = no
			}
		}

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes

		ai_chance = {
			factor = 50

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	option = { # Special option: Duel enemy commander instead (but you have terrible Combat Rating - blocks option above + gives Brave)
		name = EVTOPT_HFP_11011_C
		tooltip_info_custom = available_because_duels_bad

		trigger = {
			has_character_flag = duel_enemy_opt_gain_brave

			# To ensure you do not try to duel commanders who literally *just* died (in battle, presumably)
			event_target:enemy_commander = {
				is_alive = yes
				is_dying = no
			}
		}

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes
		add_trait_partially_silently_brave_effect = yes

		ai_chance = {
			factor = 1

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	option = { # Special option: Duel enemy commander instead (you are Brave already - unlocks dueling regardless, but should block the two above)
		name = EVTOPT_HFP_11011_C
		tooltip_info = brave

		trigger = {
			has_character_flag = duel_enemy_opt_is_brave

			# To ensure you do not try to duel commanders who literally *just* died (in battle, presumably)
			event_target:enemy_commander = {
				is_alive = yes
				is_dying = no
			}
		}

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes
		add_trait_partially_silently_brave_effect = yes

		ai_chance = {
			factor = 1

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}
		}
	}

	option = { # Special option: I distract them with song!
		name = {
			text = EVTOPT_HFP_11010_Bard_1 # I must survive...
			trigger = { has_character_flag = desc_A }
		}
		name = {
			text = EVTOPT_HFP_11010_Bard_2 #"Let me sing you the one about the idiot [enemy culture]?"
			trigger = { has_character_flag = desc_B }
		}
		name = {
			text = EVTOPT_HFP_11010_Bard_3 # I will write songs, mocking you!
			trigger = { has_character_flag = desc_C }
		}

		tooltip_info_custom = because_bloodline_tt

		trigger = {
			any_owned_bloodline = {
				has_bloodline_flag = bloodline_battle_bards # Only for Battle Bard Bloodlines
				bloodline_is_active_for = PREV
			}
		}

		if = {
			limit = { has_character_flag = desc_C }
			custom_tooltip = { text = EVTOPT_HFP_11010_Bard_3_TT }
		}

		prestige = 15
		allow_new_battle_events_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}

		ai_chance = { factor = 2 }
	}

	option = { # I accept injury
		name = EVTOPT_HFP_11010_A

		apply_duel_wounded_effect = yes
		add_blood_splatter_effect = yes
		pacifists_lose_piety_effect = yes

		random = {
			chance = 80
			add_trait_partially_brave_effect = yes
		}

		allow_new_battle_events_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 3
				trait = craven
			}
		}
	}

	option = { # I will do nothing/escape somehow (lose brave/gain craven)
		name = {
			text = EVTOPT_HFP_11010_B_1 # Hide
			trigger = { has_character_flag = desc_A }
		}
		name = {
			text = EVTOPT_HFP_11010_B_2 # Run
			trigger = { has_character_flag = desc_B }
		}
		name = {
			text = EVTOPT_HFP_11010_B_3 # Play dead/distract
			trigger = { has_character_flag = desc_C }
		}

		random = {
			chance = 50
			add_trait_partially_craven_effect = yes
		}

		prestige = -50
		allow_new_battle_events_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}

		ai_chance = {
			factor = 2

			bad_soldier_outcome_score = yes
		}
	}

	after = {
		clr_character_flag = skip_wounded_trait
		clr_character_flag = injury_both_eyes
		clr_character_flag = injury_eye
		clr_character_flag = injury_hand
		clr_character_flag = injury_leg
		clr_character_flag = injury_face
		clr_character_flag = injury_mangled_body
		clr_character_flag = injury_maimed
		clr_character_flag = injury_could_be_lethal

		clr_character_flag = high_PCS_opt
		clr_character_flag = duel_enemy_opt
		clr_character_flag = duel_enemy_opt_gain_brave
		clr_character_flag = duel_enemy_opt_is_brave

		clr_character_flag = desc_A
		clr_character_flag = desc_B
		clr_character_flag = desc_C
	}
}

### BATTLE EVENT: Maimed in action (fired from HFP.11000)
character_event = {
	id = HFP.11011 # "inspired" by 244
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = lose_battle

	desc = {
		text = EVTDESC_HFP_11011_A
		trigger = { has_character_flag = desc_A }
	}
	desc = {
		text = EVTDESC_HFP_11011_B_1 # Default variant B
		trigger = {
			has_character_flag = desc_B
			NOT = { event_target:enemy_commander = { always = yes } }
		}
	}
	desc = {
		text = EVTDESC_HFP_11011_B_2 # Second variant: makes sure to fetch the correct culture for the enemy commander, if they exist
		trigger = {
			has_character_flag = desc_B
			event_target:enemy_commander = { always = yes }
		}
	}
	desc = {
		text = EVTDESC_HFP_11011_C
		trigger = { has_character_flag = desc_C }
	}

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_negative_effect = yes
		set_battle_duels_option_flag_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				disallow_new_battle_events_effect = yes # To keep the tombola from spamming your potential target...
			}
		}

		hidden_effect = {
			save_beloved_character_effect = yes # event_target:my_beloved (might be platonic, children, etc)
		}

		random_list = {
			33 = { set_character_flag = desc_A }
			33 = { set_character_flag = desc_B }
			33 = { set_character_flag = desc_C }
		}

		if = {
			limit = { has_dlc = "Reapers" }

			# Randomize injured body part.
			random_list = {
				10 = {
					trigger = { NOT = { trait = blinded } }

					if = {
						limit = { trait = one_eyed }
						set_character_flag = injury_both_eyes
					}
					else = {
						set_character_flag = injury_eye
					}
				}

				10 = {
					trigger = { NOT = { trait = one_handed } }
					set_character_flag = injury_hand
				}

				10 = {
					trigger = { NOT = { trait = one_legged } }
					set_character_flag = injury_leg
				}

				3 = {
					trigger = { NOT = { trait = disfigured } }
					set_character_flag = injury_face
				}

				1 = {
					trigger = { NOT = { trait = mangled } }
					set_character_flag = injury_mangled_body
				}

				fallback = { # Only in case you already have ALL the other maimed traits?
					set_character_flag = injury_could_be_lethal
				}
			}
		}
		else = { # Without Reapers, chance to get the old trait...
			set_character_flag = injury_maimed
		}

		set_character_flag = skip_wounded_trait

		random_artifact = {
			limit = { is_artifact_equipped = yes }

			preferred_limit = { artifact_type = military_strategy_guide }
			preferred_limit = { has_artifact_flag = combat_weapon }
			preferred_limit = { has_artifact_flag = armor }
			preferred_limit = {
				has_artifact_flag = about_martial
				has_artifact_flag = book
				has_artifact_flag = created
			}
			preferred_limit = { quality >= 1 }
			preferred_limit = { quality >= 2 }
			preferred_limit = { quality >= 3 }

			save_event_target_as = equipped_artifact
		}
	}

	option = { # Special option: High Combat-rating only (no enemy commander present)
		name = EVTOPT_HFP_11011_A
		tooltip_info = combat_rating

		trigger = {
			has_character_flag = high_PCS_opt

			NOT = { event_target:enemy_commander = { always = yes } }
		}

		apply_duel_wounded_effect = yes # Milder than other options
		add_blood_splatter_effect = yes
		allow_new_battle_events_effect = yes

		ai_chance = { factor = 300 }
	}

	option = { # Special option: Duel enemy commander instead (if you have great combat rating)
		tooltip_info_custom = available_because_duels
		name = EVTOPT_HFP_11011_C

		trigger = {
			has_character_flag = duel_enemy_opt

			# To ensure you do not try to duel commanders who literally *just* died (in battle, presumably)
			event_target:enemy_commander = {
				is_alive = yes
				is_dying = no
			}
		}

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes

		ai_chance = {
			factor = 50

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	option = { # Special option: Duel enemy commander instead (but you have terrible Combat Rating - blocks option above + gives Brave)
		name = EVTOPT_HFP_11011_C
		tooltip_info_custom = available_because_duels_bad

		trigger = {
			has_character_flag = duel_enemy_opt_gain_brave

			# To ensure you do not try to duel commanders who literally *just* died (in battle, presumably)
			event_target:enemy_commander = {
				is_alive = yes
				is_dying = no
			}
		}

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes
		add_trait_partially_silently_brave_effect = yes

		ai_chance = {
			factor = 50

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	option = { # Special option: Duel enemy commander instead (you are Brave already - unlocks dueling regardless, but should block the two above)
		name = EVTOPT_HFP_11011_C
		tooltip_info = brave

		trigger = {
			has_character_flag = duel_enemy_opt_is_brave

			# To ensure you do not try to duel commanders who literally *just* died (in battle, presumably)
			event_target:enemy_commander = {
				is_alive = yes
				is_dying = no
			}
		}

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes
		add_trait_partially_silently_brave_effect = yes

		ai_chance = {
			factor = 50

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	option = { # Special option: I distract them with song!
		name = {
			text = EVTOPT_HFP_11011_Bard_1 # I'll try to remember this...! *run*
			trigger = { has_character_flag = desc_A }
		}
		name = {
			text = EVTOPT_HFP_11011_Bard_2 # "Wait, have you heard the one about [enemy culture] [small animal]?"
			trigger = { has_character_flag = desc_B }
		}
		name = {
			text = EVTOPT_HFP_11011_Bard_3 # Come to hear me sing, have you?
			trigger = { has_character_flag = desc_C }
		}
		tooltip_info_custom = because_bloodline_tt

		trigger = {
			any_owned_bloodline = {
				has_bloodline_flag = bloodline_battle_bards # Only for Battle Bard Bloodlines
				bloodline_is_active_for = PREV
			}
		}

		trigger_switch = {
			on_trigger = has_character_flag

			desc_A = {
				custom_tooltip = { text = EVTOPT_HFP_11011_Bard_1_TT } # Run away
				prestige = -50
			}

			desc_B = {
				custom_tooltip = { text = EVTOPT_HFP_11011_Bard_2_TT } # Talk your way out
				apply_duel_wounded_effect = yes
			}

			desc_C = {
				custom_tooltip = { text = EVTOPT_HFP_11011_Bard_3_TT } # BATTLE HYMN ATTACK!!
				prestige = 15
			}
		}

		allow_new_battle_events_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}

		ai_chance = { factor = 100 }
	}

	option = { # Special option: if has an equipped artifact
		name = EVTOPT_HFP_11011_B # Wait, take this artifact and spare me!
		tooltip_info_custom = reason_has_equipped_artifact

		trigger = {
			event_target:equipped_artifact = { always = yes }

			# Either someone is alive to give it to, OR, it's something that is allowed to be destroyed...
			OR = {
				event_target:enemy_commander = { is_alive = yes }
				event_target:enemy_liege = { is_alive = yes }

				event_target:equipped_artifact = {
					is_indestructible = no
					NOT = { has_artifact_flag = flag_considering_donation }
				}
			}
		}

		# You throw the [equipped_artifact] to the ground...
		if = {
			limit = {
				event_target:equipped_artifact = {
					has_artifact_flag = combat_weapon
				}
			}

			custom_tooltip = { text = EVTOPT_HFP_11011_B_TT_weapon }
		}
		else_if = {
			limit = {
				event_target:equipped_artifact = {
					has_artifact_flag = armor
				}
			}

			custom_tooltip = { text = EVTOPT_HFP_11011_B_TT_armor }
		}
		else = {
			custom_tooltip = { text = EVTOPT_HFP_11011_B_TT_fallback }
		}

		if = { # If there is an enemy commander, give them the artifact...
			limit = {
				event_target:enemy_commander = { is_alive = yes }
			}

			event_target:equipped_artifact = {
				show_scope_change = no

				set_artifact_flag = stolen_from@ROOT # Hook-in: Alex, for stolen artifact CB?

				transfer_artifact = {
					from = ROOT
					to = event_target:enemy_commander
				}
			}

			event_target:enemy_commander = {
				character_event = { id = HFP.11018 }
			}
		}
		else_if = { # Else, if there is an enemy LIEGE, give them the artifact...
			limit = {
				event_target:enemy_liege = { is_alive = yes }
			}

			event_target:equipped_artifact = {
				show_scope_change = no

				set_artifact_flag = stolen_from@ROOT # Hook-in: Alex, for stolen artifact CB?

				transfer_artifact = {
					from = ROOT
					to = event_target:enemy_liege
				}
			}

			event_target:enemy_liege = {
				character_event = { id = HFP.11018 }
			}
		}
		else = { # Else, just destroy it
			custom_tooltip = {
				text = artifact_is_removed_tt

				event_target:equipped_artifact = {
					destroy_artifact = yes
				}
			}
		}

		allow_new_battle_events_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = craven
			}

			mult_modifier = {
				factor = 0.5
				trait = greedy
			}

			mult_modifier = {
				factor = 2
				any_artifact = { is_dueling_weapon_artifact_and_equipped = yes }
			}
		}
	}

	option = {
		name = CURSES

		apply_selected_duel_injury_effect = yes
		add_blood_splatter_effect = yes

		if = { # Opinion malus with the enemy commander if relevant...
			limit = {
				event_target:enemy_commander = { always = yes }
			}

			opinion = {
				name = opinion_injured_me_in_battle
				who = event_target:enemy_commander
				years = 15
			}
		}
		else = { # Otherwise, highlight the enemy liege...
			show_portrait = event_target:enemy_liege
		}

		if = { # Show the portrait of the person you're talking about...
			limit = { has_character_flag = desc_A }
			show_portrait = event_target:my_beloved
		}

		add_battle_PTSD_effect = yes # Sends delayed follow-up event

		hidden_effect = {
			if = {
				limit = {
					is_member_of_any_warrior_lodge_trigger = yes
					event_target:enemy_commander = { is_member_of_any_warrior_lodge_trigger = yes }
				}

				save_persistent_event_target = {
					name = maimed_me_in_battle_target # Hook-in: Warrior Lodges (disliked_target_selection_score)
					scope = event_target:enemy_commander
				}
			}
		}

		allow_new_battle_events_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 3
				trait = craven
			}
		}
	}

	after = {
		clr_character_flag = skip_wounded_trait
		clr_character_flag = injury_both_eyes
		clr_character_flag = injury_eye
		clr_character_flag = injury_hand
		clr_character_flag = injury_leg
		clr_character_flag = injury_face
		clr_character_flag = injury_mangled_body
		clr_character_flag = injury_maimed
		clr_character_flag = injury_could_be_lethal
		clr_character_flag = high_PCS_opt
		clr_character_flag = duel_enemy_opt
		clr_character_flag = duel_enemy_opt_gain_brave
		clr_character_flag = duel_enemy_opt_is_brave
		clr_character_flag = desc_A
		clr_character_flag = desc_B
		clr_character_flag = desc_C
	}
}

### BATTLE EVENT: Serious head injury in action (fired from HFP.11000)
character_event = {
	id = HFP.11012 # inspired by 245
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = lose_battle

	desc = {
		text = EVTDESC_HFP_11012_A # You become incapable
		trigger = { has_character_flag = wounded_incapable }
	}
	desc = {
		text = EVTDESC_HFP_11012_B # You are disfigured
		trigger = { has_character_flag = wounded_disfigured }
	}

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_negative_effect = yes
		add_blood_splatter_effect = yes

		random_list = {
			60 = {
				trigger = {
					has_dlc = "Reapers"
					NOT = { trait = disfigured }
				}

				set_character_flag = wounded_disfigured
			}

			40 = { set_character_flag = wounded_incapable }
		}
	}

	option = {
		name = EVTOPTA_HFP_11012

		trigger = { has_character_flag = wounded_incapable }

		custom_tooltip = { text = EVTOPTA_HFP_11012_tt }
		add_trait = incapable
	}

	option = {
		name = EVTOPTB_HFP_11012

		trigger = { has_character_flag = wounded_disfigured }

		custom_tooltip = { text = EVTOPTB_HFP_11012_tt }
		add_trait = disfigured
		add_trait = severely_injured
		resolve_severely_injured_effect = yes
	}

	after = {
		clr_character_flag = wounded_incapable
		clr_character_flag = wounded_disfigured
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Character skill improves (fired from HFP.11000)
character_event = {
	id = HFP.11013 # remake of 246
	title = the_battle_at_location
	desc = EVTDESC_HFP_11013_A # EVTDESC246
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = win_battle

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = {
		name = EVTOPTB_HFP_11013

		# Because bragging
		add_trait_fully_silently_proud_effect = yes
	}

	option = {
		name = EVTOPTA_HFP_11013

		# Because not bragging
		add_trait_fully_silently_humble_effect = yes
	}

	after = {
		upgrade_education_effect = yes
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Flat improvement to martial skill (fired from HFP.11000)
character_event = {
	id = HFP.11014 # 247
	title = the_battle_at_location
	desc = EVTDESC_HFP_11014_A
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = win_battle

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = {
		name = EVTOPTA_HFP_11014

		change_martial = 1
	}

	option = {
		name = EVTOPTB_HFP_11014

		add_trait_partially_silently_humble_effect = yes

		if = {
			limit = { is_landed = yes }

			event_target:home_capital_province = {
				show_scope_change = no

				add_province_modifier = {
					name = province_team_spirit
					years = 2
				}

				save_persistent_event_target = {
					name = local_inspiring_commander_target # Hook-in: Warrior Lodges
					scope = event_target:home_commander
				}
			}
		}
		else_if = {
			limit = { # Liege (if there is one) is notified of this bonus
				event_target:home_liege = { always = yes }
			}

			event_target:home_liege = {
				character_event = { id = HFP.11015 }
			}
		}
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

# Follow-up: Liege gets notified about commander doing well, inspiring troops!
character_event = {
	id = HFP.11015
	title = the_battle_at_location
	desc = EVTDESC_HFP_11015
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = EVTOPTA_HFP_11015

		capital_scope = {
			show_scope_change = no

			add_province_modifier = {
				name = province_team_spirit
				years = 2
			}

			save_persistent_event_target = {
				name = local_inspiring_commander_target	# Hook-in: Warrior Lodges
				scope = event_target:home_commander
			}
		}

		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Tech Increase in Capital (fired from HFP.11000)
character_event = {
	id = HFP.11016
	title = the_battle_at_location
	desc = EVTDESC_HFP_11016
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:invited_character

	is_triggered_only = yes
	hide_new = yes

	immediate = {
		disallow_new_battle_events_effect = yes # to keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
		spawn_good_commander_effect = yes
	}

	option = {
		name = EVTOPTA_HFP_11016 # Yes, this is excellent news!

		scaled_wealth = {
			value = -0.5
			min = -45
			max = -500
		}

		military_techpoints = 30

		event_target:home_capital_province = {
			show_scope_change = no

			add_province_modifier = {
				name = war_knowledge
				years = 10
			}
		}

		hidden_effect = { event_target:invited_character = { leave_court_and_die_effect = yes } }
	}

	option = { # We need to focus on the short term benefits right now
		name = EVTOPTB_HFP_11016

		custom_tooltip = { text = a_commander_joins_your_court_tt }
		show_portrait = event_target:invited_character

		pacifists_lose_piety_effect = yes
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Gain Commander trait (fired from HFP.11000)
character_event = {
	id = HFP.11017
	title = the_battle_at_location
	desc = EVTDESC_HFP_11017
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = win_battle

	hide_from = yes
	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = {
		name = EVTOPTK96500 # Jungle Terrain Specialization

		trigger = {
			location = { terrain = jungle }
			NOT = { trait = jungle_expert }
		}

		add_trait = jungle_expert
	}

	option = {
		name = EVTOPTL96500 # War elephants

		trigger = {
			has_dharmic_religion_trigger = yes
			NOT = { trait = war_elephant_leader }
		}

		add_trait = war_elephant_leader
	}

	option = {
		name = EVTOPTM96500 # WINTER Terrain Specialization

		trigger = {
			location = { is_winter = yes }
			NOT = { trait = winter_soldier }
		}

		add_trait = winter_soldier
	}

	option = {
		name = EVTOPTA96500 # Rough Terrain Specialization

		trigger = {
			location = {
				OR = {
					terrain = forest
					terrain = hills
				}
			}

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = rough_terrain_expert
	}

	option = {
		name = EVTOPTB96500 # Flat Terrain Specialization

		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = farmlands
					terrain = steppe
				}
			}

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = flat_terrain_expert
	}

	option = {
		name = EVTOPTC96500 # Mountain Terrain Specialization

		trigger = {
			location = { terrain = mountain }

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = mountain_expert
	}

	option = {
		name = EVTOPTD96500 # Desert Terrain Leader

		trigger = {
			location = { terrain = desert }

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = desert_expert
	}

	option = {
		name = EVTOPTE96500 # Cavalry

		trigger = {
			NOR = {
				trait = cavalry_leader
				trait = heavy_infantry_leader
				trait = light_foot_leader
			}
		}

		add_trait = cavalry_leader
	}

	option = {
		name = EVTOPTF96500 # Light Infantry

		trigger = {
			NOR = {
				trait = cavalry_leader
				trait = heavy_infantry_leader
				trait = light_foot_leader
			}
		}

		add_trait = light_foot_leader
	}

	option = {
		name = EVTOPTG96500 # Heavy Infantry

		trigger = {
			NOR = {
				trait = cavalry_leader
				trait = heavy_infantry_leader
				trait = light_foot_leader
			}
		}

		add_trait = heavy_infantry_leader
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

# Follow-up: Enemy COMMANDER/LIEGE is informed that the commander of the opposing forces has dropped an item in exchange for their life (Sent from event: HFP.11011)
character_event = {
	id = HFP.11018
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	desc = {
		text = EVTDESC_HFP_11018_A_weapon
		trigger = {
			character = event_target:enemy_commander
			event_target:equipped_artifact = { has_artifact_flag = combat_weapon }
		}
	}
	desc = {
		text = EVTDESC_HFP_11018_A_armor
		trigger = {
			character = event_target:enemy_commander
			event_target:equipped_artifact = { has_artifact_flag = armor }
		}
	}
	desc = {
		text = EVTDESC_HFP_11018_A_other
		trigger = {
			character = event_target:enemy_commander
			event_target:equipped_artifact = {
				NOR = {
					has_artifact_flag = armor
					has_artifact_flag = combat_weapon
				}
			}
		}
	}
	desc = {
		text = EVTDESC_HFP_11018_B_weapon
		trigger = {
			character = event_target:enemy_liege
			NOT = { character = event_target:enemy_commander }
			event_target:equipped_artifact = { has_artifact_flag = combat_weapon }
		}
	}
	desc = {
		text = EVTDESC_HFP_11018_B_armor
		trigger = {
			character = event_target:enemy_liege
			NOT = { character = event_target:enemy_commander }
			event_target:equipped_artifact = { has_artifact_flag = armor }
		}
	}
	desc = {
		text = EVTDESC_HFP_11018_B_other
		trigger = {
			character = event_target:enemy_liege
			NOT = { character = event_target:enemy_commander }

			event_target:equipped_artifact = {
				NOR = {
					has_artifact_flag = armor
					has_artifact_flag = combat_weapon
				}
			}
		}
	}

	option = { # I... Someone pick that up!
		name = EVTOPTA_HFP_10018

		trigger = { character = event_target:enemy_commander }

		custom_tooltip = { text = EVTOPTA_HFP_10018_tt }
		add_blood_splatter_effect = yes
	}

	option = {
		name = {
			text = EVTOPTB_HFP_10018_high_quality # What a lunatic! I'll take that
			trigger = {
				event_target:equipped_artifact = { quality >= 4 }
			}
		}
		name = {
			text = EVTOPTB_HFP_10018 # I shall take that, thank you
			trigger = {
				event_target:equipped_artifact = { quality < 4 }
			}
		}

		trigger = { # If you are the enemy liege, AND not the commander
			character = event_target:enemy_liege
			NOT = { character = event_target:enemy_commander }
		}

		custom_tooltip = { text = EVTOPTA_HFP_10018_tt }
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Follow-up: PTSD follow up (fired from add_battle_PTSD_effect in various places)
character_event = {
	id = HFP.11019
	title = invisible_injury_title
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	has_character_flag = has_PTSD
	war = no

	trigger = {
		is_alive = yes
		is_landed = yes
	}

	fail_trigger_effect = {
		if = {
			limit = {
				is_landed = yes
				has_character_flag = has_PTSD
			}

			repeat_event = {
				id = HFP.11019 # PTSD follow up (try again in a year)
				years = 1
				random = 50
			}
		}
		else = {
			clr_character_flag = has_PTSD
		}
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_negative_effect = yes

		random_list = {
			33 = {
				trigger = { has_living_children = yes }
				set_character_flag = desc_A
			}

			33 = { set_character_flag = desc_B }

			33 = {
				trigger = { # To make sure you're not the cause of the war?
					NOT = { character = event_target:home_liege }
				}

				set_character_flag = desc_C
			}
		}
	}

	desc = {
		text = EVTDESC_HFP_11019_A # I can't be near my children
		trigger = { has_character_flag = desc_A }
	}
	desc = EVTDESC_HFP_11019_B # I'm not really here
	desc = {
		text = EVTDESC_HFP_11019_C # Survivor's guilt
		trigger = { NOT = { character = event_target:home_liege } }
	}


	option = { # Act out (Scenario A: I can't be near my children)
		name = EVTOPTA_HFP_11019_1 # I need a drink

		trigger = { has_character_flag = desc_A }

		add_trait_silently_drunkard_effect = yes
		add_trait_partially_silently_cynical_effect = yes
	}

	option = { # Try to cope (Scenario A: I can't be near my children)
		name = EVTOPTA_HFP_11019_2 # I do NOT have nightmares, servant! How dare you?

		trigger = { has_character_flag = desc_A }

		add_trait_silently_depressed_effect = yes
	}

	option = { # Act out (Scenario A (last option) or B (top option if so))
		name = EVTOPTF_HFP_11019 # I can never be close to anyone.

		trigger = {
			OR = {
				has_character_flag = desc_A
				has_character_flag = desc_B
			}
		}

		add_trait_silently_celibate_effect = yes
	}

	option = { # Try to cope (Scenario B: I'm not really here)
		name = EVTOPTB_HFP_11019_2 # Some solitude is what's needed

		trigger = { has_character_flag = desc_B }

		add_trait_silently_depressed_effect = yes
	}

	option = { # Act out (Scenario B: I'm not really here)
		name = EVTOPTB_HFP_11019_1 # I need to feel alive again

		trigger = { has_character_flag = desc_B }

		add_trait_partially_silently_lustful_effect = yes
		add_trait_silently_drunkard_effect = yes
	}

	option = { # Act out (Scenario C: Survivor's guilt)
		name = EVTOPTC_HFP_11019_1 # It should've been me who died

		trigger = { has_character_flag = desc_C }

		custom_tooltip = { text = EVTOPTC_HFP_11019_1_TT }
		death = { death_reason = death_suicide }
	}

	option = { # Try to cope (Scenario C: Survivor's guilt)
		name = EVTOPTC_HFP_11019_2 # Some people will always want me dead

		trigger = { has_character_flag = desc_C }

		add_trait_partially_silently_cynical_effect = yes
		add_trait_silently_depressed_effect = yes
	}

	option = { # Act out in anger (A, B, or C)
		name = EVTOPTD_HFP_11019 # Enough of these nonsense FEELINGS

		add_trait_partially_silently_wroth_effect = yes
		add_trait_silently_stressed_effect = yes
		pacifists_lose_piety_effect = yes

		random = {
			chance = 15
			add_trait_depressed_effect = yes
		}
	}

	option = { # For WL members only: comfort hunting
		name = EVTOPTE_HFP_11019 # Enough of these nonsense FEELINGS
		tooltip_info_custom = available_due_to_warrior_lodge

		trigger = { is_member_of_any_warrior_lodge_trigger = yes }

		piety = -5
	}

	after = {
		clr_character_flag = desc_A
		clr_character_flag = desc_B
		clr_character_flag = desc_C
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Gain Commander trait 2 (fired from HFP.11000)
character_event = {
	id = HFP.11020
	title = the_battle_at_location
	desc = EVTDESC_HFP_11020
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = win_battle

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = { # Organizer
		name = EVTOPTA_HFP_11020

		trigger = { NOT = { trait = organizer } }

		add_trait = organizer
	}

	option = { # Experimenter
		name = EVTOPTB_HFP_11020

		trigger = { NOT = { trait = direct_leader } }

		add_trait = direct_leader
	}

	option = { # Holy Warrior
		name = EVTOPTC_HFP_11020

		trigger = {
			trait = zealous
			NOT = { trait = holy_warrior }
		}

		add_trait = holy_warrior
	}

	option = { # Unyielding
		name = EVTOPTD_HFP_11020

		trigger = { NOT = { trait = unyielding_leader } }

		add_trait = unyielding_leader
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Gain Commander trait 3 (fired from HFP.11000)
character_event = {
	id = HFP.11021
	title = the_battle_at_location
	desc = EVTDESC_HFP_11021
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = win_battle

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = {
		name = EVTOPTA_HFP_11021 # Aggressive

		pacifists_lose_piety_effect = yes

		trigger = {
			NOR = {
				trait = defensive_leader
				trait = aggressive_leader
			}
		}

		add_trait = aggressive_leader
	}

	option = { # Defensive
		name = {
			text = EVTOPTB_HFP_11021
			trigger = { is_nomadic = no }
		}
		name = {
			text = EVTOPTB_HFP_11021_nomad
			trigger = { is_nomadic = yes }
		}

		trigger = {
			NOR = {
				trait = defensive_leader
				trait = aggressive_leader
			}
		}

		add_trait = defensive_leader
	}

	option = {
		name = EVTOPTC_HFP_11021 # Inspiring

		trigger = { NOT = { trait = inspiring_leader } }

		add_trait = inspiring_leader
	}

	option = { # Trickster
		name = EVTOPTD_HFP_11021

		trigger = { NOT = { trait = trickster } }

		add_trait = trickster
	}

	after = {
		add_blood_splatter_effect = yes
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Gain Commander trait 4 (fired from HFP.11000)
character_event = {
	id = HFP.11022
	title = the_battle_at_location
	desc = EVTDESC_HFP_11022
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = win_battle

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = {
		name = EVTOPTA_HFP_11022 # Rough Terrain Specialization

		trigger = {
			location = {
				OR = {
					terrain = forest
					terrain = hills
				}
			}

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = rough_terrain_expert
	}

	option = {
		name = EVTOPTA_HFP_11022 # Flat Terrain Specialization

		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = farmlands
					terrain = steppe
				}
			}

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = flat_terrain_expert
	}

	option = {
		name = EVTOPTA_HFP_11022 # Mountain Terrain Specialization

		trigger = {
			location = { terrain = mountain }

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = mountain_expert
	}

	option = {
		name = EVTOPTA_HFP_11022 # Desert Terrain Leader

		trigger = {
			location = { terrain = desert }

			NOR = {
				trait = rough_terrain_expert
				trait = flat_terrain_expert
				trait = mountain_expert
				trait = desert_expert
			}
		}

		add_trait = desert_expert
	}

	option = { # Flanker
		name = EVTOPTB_HFP_11022

		trigger = { NOT = { trait = flanker } }

		add_trait = flanker
	}

	option = { # Narrow flank leader
		name = EVTOPTC_HFP_11022

		trigger = {
			location = {
				OR = {
					terrain = mountain
					terrain = hills
					terrain = forest
				}
			}

			NOT = { trait = battlefield_terrain_master }
		}

		add_trait = battlefield_terrain_master
	}

	option = { # Siege leader
		name = EVTOPTD_HFP_11022

		trigger = {
			siege = { is_attacker = yes }
			NOT = { trait = siege_leader }
		}

		add_trait = siege_leader
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Marshal leading troops: Unnecessary violence (fired from HFP.11000)
character_event = {
	id = HFP.11023
	title = the_battle_at_location
	desc = EVTDESC_HFP_11023
	picture = GFX_evt_torture
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = EVTOPTA_HFP_11023_A # You're just a boy! I can't do this

		remove_trait = cruel
		prestige = -20
	}

	option = {
		name = EVTOPTA_HFP_11023_B # You're just a tool for my enemy

		prestige = 20
		piety = -20

		liege = {
			character_event = { id = HFP.11024 }
		}
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

# Follow-up: For Liege: Marshal used unnecessary violence
character_event = {
	id = HFP.11024
	desc = EVTDESC_HFP_11024
	picture = GFX_evt_torture
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	# trigger = {
	# 	is_inaccessible_trigger = no
	# }

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = EVTOPTB_HFP_11024 # Disapprove of his conduct

		opinion = {
			name = opinion_disapprove
			who = FROM
			years = 5
		}

		random = {
			chance = 50
			add_trait_fully_kind_effect = yes
		}
	}

	option = {
		name = EVTOPTC_HFP_11024 # He's right, we should terrorise our enemy

		opinion = {
			name = opinion_approves
			who = FROM
			years = 5
		}

		prestige = -10

		random = {
			chance = 50
			add_trait_fully_cruel_effect = yes
		}
	}

	option = {
		name = EVTOPTA_HFP_11024 # That's the cruelty of war

		piety = -15
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Pet Animal to the rescue! Or choose to duel! (fired from HFP.11000)
character_event = {
	id = HFP.11025
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_HFP_11025_dog
		trigger = { has_character_flag = desc_dog }
	}
	desc = {
		text = EVTDESC_HFP_11025_cat
		trigger = { has_character_flag = desc_cat }
	}
	desc = {
		text = EVTDESC_HFP_11025_horse
		trigger = { has_character_flag = desc_horse }
	}
	desc = {
		text = EVTDESC_HFP_11025_owl
		trigger = { has_character_flag = desc_owl }
	}
	desc = {
		text = EVTDESC_HFP_11025_eagle
		trigger = { has_character_flag = desc_eagle }
	}
	desc = {
		text = EVTDESC_HFP_11025_fallback
		trigger = { has_character_flag = desc_fallback }
	}

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_negative_effect = yes

		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				disallow_new_battle_events_effect = yes # To keep the tombola from spamming your potential target...
			}
		}

		random_list = {
			20 = {
				trigger = { has_character_modifier = pet_hunting_dog }
				set_character_flag = desc_dog
			}

			20 = {
				trigger = { has_character_modifier = pet_cat }
				set_character_flag = desc_cat
			}

			20 = {
				trigger = { has_character_modifier = nomad_warhorse }
				set_character_flag = desc_horse
			}

			20 = {
				trigger = { has_character_modifier = pet_owl }
				set_character_flag = desc_owl
			}

			20 = {
				trigger = { has_character_modifier = pet_hunting_eagle }
				set_character_flag = desc_eagle
			}

			fallback = {
				set_character_flag = desc_fallback
			}
		}
	}

	### Let the pet die....
	option = {
		name = EVTOPTA_HFP_11025_dog

		trigger = { has_character_flag = desc_dog }

		custom_tooltip = {
			text = EVTOPTA_HFP_11025_TT_dog

			remove_character_modifier = pet_hunting_dog
			remove_character_modifier = pet_best_friends

			if = { # To handle omens from hermetics
				limit = {
					has_dlc = "Mystics"

					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}

				set_character_flag = dog_death_omen

				character_event = {
					id = MNM.1213 # Scrying vision come true
					days = 35
					random = 30
				}
			}
		}

		send_new_dog_event_effect = yes # Will only work for certain bloodlines...
		clr_character_flag = about_to_challenge_enemy_commander
		allow_new_battle_events_effect = yes
		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}
	}

	option = {
		name = EVTOPTA_HFP_11025_cat

		trigger = { has_character_flag = desc_cat }

		custom_tooltip = {
			text = EVTOPTA_HFP_11025_TT_cat

			remove_character_modifier = pet_cat
			remove_character_modifier = pet_best_friends

			if = { # To handle omens from hermetics
				limit = {
					has_dlc = "Mystics"

					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}

				set_character_flag = cat_death_omen

				character_event = {
					id = MNM.1213 # Scrying vision come true
					days = 35
					random = 30
				}
			}
		}

		clr_character_flag = about_to_challenge_enemy_commander
		allow_new_battle_events_effect = yes
		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}
	}

	option = {
		name = EVTOPTA_HFP_11025_horse

		trigger = { has_character_flag = desc_horse }

		custom_tooltip = {
			text = EVTOPTA_HFP_11025_TT_horse
			remove_character_modifier = nomad_warhorse
		}

		clr_character_flag = about_to_challenge_enemy_commander
		allow_new_battle_events_effect = yes
		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}
	}

	option = {
		name = EVTOPTA_HFP_11025_owl

		trigger = { has_character_flag = desc_owl }

		custom_tooltip = {
			text = EVTOPTA_HFP_11025_TT_owl
			remove_character_modifier = pet_owl
		}

		clr_character_flag = about_to_challenge_enemy_commander
		allow_new_battle_events_effect = yes
		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}
	}

	option = {
		name = EVTOPTA_HFP_11025_eagle

		trigger = { has_character_flag = desc_eagle }

		custom_tooltip = {
			text = EVTOPTA_HFP_11025_TT_eagle
			remove_character_modifier = pet_hunting_eagle
		}

		send_new_eagle_event_effect = yes # Only for certain bloodlines...!
		clr_character_flag = about_to_challenge_enemy_commander
		allow_new_battle_events_effect = yes
		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}
	}

	option = {
		name = EVTOPTA_HFP_11025_fallback

		trigger = { has_character_flag = desc_fallback }

		custom_tooltip = {
			text = EVTOPTA_HFP_11025_TT_fallback
			add_battle_PTSD_effect = yes
		}

		clr_character_flag = about_to_challenge_enemy_commander
		allow_new_battle_events_effect = yes
		event_target:enemy_commander = {
			if = {
				limit = {
					is_alive = yes
					ai = yes
				}
				allow_new_battle_events_effect = yes
			}
		}
	}

	### Chase after the enemy commander (if there is one)
	option = {
		name = EVTOPTB_HFP_11025

		trigger = {
			# To ensure you do not try to duel commanders who literally *just* died (in battle, presumably)
			event_target:enemy_commander = {
				is_alive = yes
				is_dying = no
			}
		}

		if = {
			limit = { NOT = { has_character_flag = desc_fallback } }

			custom_tooltip = {
				text = EVTOPTB_HFP_11025_TT
				duel_enemy_commander_effect = yes # Hides the usual tooltip for chasing down enemy commander...
			}
		}
		else = {
			duel_enemy_commander_effect = yes # Instantly sends event for a duel!
		}

		pacifists_lose_piety_effect = yes
		set_character_flag = skip_blood_splatter

		ai_chance = {
			factor = 1

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}
		}
	}

	after = {
		clr_character_flag = desc_dog
		clr_character_flag = desc_cat
		clr_character_flag = desc_horse
		clr_character_flag = desc_owl
		clr_character_flag = desc_eagle
		clr_character_flag = desc_fallback

		if = {
			limit = { has_character_flag = skip_blood_splatter }
			clr_character_flag = skip_blood_splatter
		}
		else = {
			add_blood_splatter_effect = yes
		}
	}
}

#######################################################
############### Warrior Lodge members only ############
#######################################################
### BATTLE EVENT: Find a weapon on the battlefield... (fired from HFP.11000)
character_event = {
	id = HFP.11026
	title = the_battle_at_location
	desc = EVTDESC_HF_11026
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = {
		name = EVTOPTA_HFP_11026

		trigger_switch = {
			on_trigger = society_rank

			3 = { # Used for rank 3 and 4
				add_artifact = sword_3_battlefield

				new_artifact = {
					set_name = weapon_battlefield_rename_3
					set_description = weapon_battlefield_desc_rename_3
				}
			}

			2 = {
				add_artifact = sword_2_battlefield

				new_artifact = {
					set_name = weapon_battlefield_rename_2
					set_description = weapon_battlefield_desc_rename_2
				}
			}

			1 = {
				add_artifact = sword_1_battlefield

				new_artifact = {
					set_name = weapon_battlefield_rename_1
					set_description = weapon_battlefield_desc_rename_1
				}
			}
		}

		pacifists_lose_piety_effect = yes
		add_blood_splatter_effect = yes
	}

	option = {
		name = EVTOPTB_HFP_11026

		custom_tooltip = { text = EVTOPTB_HFP_11026_TT }
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: Choose a nickname...! "Call me.." what? (fired from HFP.11000)
character_event = {
	id = HFP.11027
	title = the_battle_at_location
	desc = EVTDESC_HF_11027
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes

		### Set potential nickname-flags...
		if = {
			limit = {
				OR = {
					is_learned_trigger = yes
					trait = mystic
				}
			}
			set_character_flag = the_astrologer
		}

		if = {
			limit = {
				OR = {
					trait = hunter
					trait = wroth
					martial >= 10
				}
			}
			set_character_flag = the_great_beast
		}

		if = {
			limit = {
				OR = {
					has_education_diplomacy_trigger = yes
					has_lifestyle_diplomacy_trigger = yes
					has_education_intrigue_trigger = yes
					has_lifestyle_intrigue_trigger = yes
					has_3rd_tier_education_trait_trigger = yes
					has_top_tier_education_trait_trigger = yes
				}
			}
			set_character_flag = the_artist_ruler
		}

		if = {
			limit = {
				OR = {
					trait = ambitious
					is_weak_trigger = yes
				}
			}
			set_character_flag = the_ambitious
		}

		if = {
			limit = {
				OR = {
					num_of_kill_list_characters >= 50
					is_strong_trigger = yes
					is_evil_trigger = yes
					is_impious_trigger = yes
				}
			}
			set_character_flag = the_bloody
		}

		if = {
			limit = {
				OR = {
					has_pleasant_personality_trigger = yes
					trait = grey_eminence
					has_lifestyle_diplomacy_trigger = yes
				}
			}
			set_character_flag = the_diplomat
		}

		if = {
			limit = {
				OR = {
					has_pleasant_personality_trigger = yes
					has_lifestyle_diplomacy_trigger = yes
					trait = kind
				}
				NOT = { trait = cruel }
			}
			set_character_flag = the_kind_hearted
		}

		if = {
			limit = { trait = charitable }
			set_character_flag = the_generous
		}

		if = {
			limit = {
				OR = {
					is_evil_trigger = yes
					num_of_kill_list_characters >= 50
				}
			}
			set_character_flag = the_executioner
		}

		if = {
			limit = { trait = just }
			set_character_flag = iron_fist
		}

		if = {
			limit = { trait = cynical }
			set_character_flag = stone_fist
		}

		if = {
			limit = {
				OR = {
					trait = stubborn
					trait = giant
					is_strong_trigger = yes
				}
			}
			set_character_flag = the_bulwark
		}

		if = {
			limit = {
				OR = {
					trait = giant

					AND = {
						trait = just
						trait = kind
					}
				}
			}
			set_character_flag = the_tower
		}

		if = {
			limit = {
				event_target:enemy_commander = {
					duelist_skill_compared_to_prev_low_group_trigger = yes
					is_alive = yes
				}
			}
			set_character_flag = the_wall_of_title
		}

		if = {
			limit = {
				event_target:enemy_commander = {
					duelist_skill_compared_to_prev_high_group_trigger = yes
					is_alive = yes
				}
			}
			set_character_flag = the_underdog
		}

		random_list = {
			25 = { set_character_flag = the_terrain_commander }
			25 = { set_character_flag = the_ground_warrior }
			25 = { set_character_flag = lord_lady_of_the_terrain }
			25 = { set_character_flag = lord_lady_ground }
		}
	}

	option = {
		name = EVTOPTA_HFP_11027

		trigger = { has_character_flag = the_astrologer }

		give_nickname = nick_the_astrologer
	}

	option = {
		name = EVTOPTB_HFP_11027

		trigger = { has_character_flag = the_great_beast }

		give_nickname = nick_the_great_beast
	}

	option = {
		name = EVTOPTC_HFP_11027

		trigger = { has_character_flag = the_artist_ruler }

		give_nickname = nick_the_artist_ruler
	}

	option = {
		name = EVTOPTD_HFP_11027

		trigger = { has_character_flag = the_ambitious }

		give_nickname = nick_the_ambitious
	}

	option = {
		name = EVTOPTE_HFP_11027

		trigger = { has_character_flag = the_bloody }

		give_nickname = nick_the_bloody
	}

	option = {
		name = EVTOPTF_HFP_11027

		trigger = { has_character_flag = the_diplomat }

		give_nickname = nick_the_diplomat
	}

	option = {
		name = EVTOPTG_HFP_11027

		trigger = { has_character_flag = the_kind_hearted }

		custom_tooltip = { text = EVTOPTG_HFP_11027_TT }

		give_nickname = nick_the_kind_hearted
	}

	option = {
		name = EVTOPTH_HFP_11027
		tooltip_info = charitable

		trigger = { has_character_flag = the_generous }

		give_nickname = nick_the_generous
	}

	option = {
		name = EVTOPTI_HFP_11027

		trigger = { has_character_flag = the_executioner }

		give_nickname = nick_the_executioner
	}

	option = {
		name = EVTOPTJ_HFP_11027
		tooltip_info = just

		trigger = { has_character_flag = iron_fist }

		give_nickname = nick_iron_fist
	}

	option = {
		name = EVTOPTK_HFP_11027
		tooltip_info = cynical

		trigger = { has_character_flag = stone_fist }

		give_nickname = nick_stone_fist
	}

	option = {
		name = EVTOPTL_HFP_11027

		trigger = { has_character_flag = the_bulwark }

		give_nickname = nick_the_bulwark
	}

	option = {
		name = EVTOPTM_HFP_11027

		trigger = { has_character_flag = the_tower }

		give_nickname = nick_the_tower
	}

	option = {
		name = EVTOPTN_HFP_11027

		trigger = { has_character_flag = the_wall_of_title }

		give_nickname = nick_the_wall_of_title
	}

	option = {
		name = EVTOPTO_HFP_11027
		tooltip_info_custom = string_available_due_to_duelist_skill_better_than_enemy

		trigger = { has_character_flag = the_underdog }

		give_nickname = nick_the_underdog
	}

	option = {
		name = EVTOPTP_HFP_11027

		trigger = { has_character_flag = the_terrain_commander }

		give_nickname = nick_the_terrain_commander
	}

	option = {
		name = EVTOPTQ_HFP_11027

		trigger = { has_character_flag = the_ground_warrior }

		give_nickname = nick_the_ground_warrior
	}

	option = {
		name = EVTOPTR_HFP_11027

		trigger = { has_character_flag = lord_lady_of_the_terrain }

		give_nickname = nick_lord_lady_of_the_terrain
	}

	option = {
		name = EVTOPTS_HFP_11027

		trigger = { has_character_flag = lord_lady_ground }

		give_nickname = nick_lord_lady_ground
	}

	after = {
		add_blood_splatter_effect = yes
		clr_battle_nickname_flags_effect = yes
		allow_new_battle_events_effect = yes

		add_character_modifier = {
			name = hardened_resolve
			years = 5
		}
	}
}

### BATTLE EVENT: Decapitating an enemy (fired from HFP.11000)
character_event = {
	id = HFP.11028
	title = the_battle_at_location
	desc = EVTDESC_HFP_11028
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes

		# Sets up weapons for localization...
		set_dueling_weapon_effect = yes
		event_target:enemy_commander = { set_dueling_weapon_effect = yes }

		### Saved in tombola:
		# event_target:home_commander
		# event_target:enemy_commander (originally FROM)
		# event_target:enemy_liege (originally FROMFROM)
		# event_target:battlefield_location (location of battle)

		### Saved in *this* event:
		# event_target:random_rival_target (if there is one)
		# event_target:home_liege (liege of home_commander, if there is one)

		random_rival = { save_event_target_as = random_rival_target } # For loc and extra fun

		if = {
			limit = { independent = no }
			liege = { save_event_target_as = home_liege }
		}

		# Send news/notification event to relevant parties...
		if = {
			limit = { enemy_commander_and_liege_are_different_characters = yes }
			event_target:enemy_liege = { character_event = { id = HFP.11032 } } # Send notification of the enemy commander's death (to their liege)
		}

		if = {
			limit = { home_commander_and_liege_are_different_characters = yes }
			event_target:home_liege = { character_event = { id = HFP.11029 } } # Send notification of the enemy commander's death (to your own liege, for bragging rights)
		}

		event_target:enemy_commander = {
			##### For tiered rewards...
			if = { # if ROOT fought a worse warrior...
				limit = { duelist_skill_compared_to_prev_low_group_trigger = yes }
				PREV = { set_character_flag = fought_worse_warrior@event_target:enemy_commander } # For later effects...
			}
			else_if = { # if ROOT fought a greater warrior...
				limit = { duelist_skill_compared_to_prev_high_group_trigger = yes }
				PREV = { set_character_flag = fought_great_warrior@event_target:enemy_commander } # For later effects...
			}
			else = { # if ROOT was pretty evenly matched with the enemy warrior...
				PREV = { set_character_flag = fought_even_warrior@event_target:enemy_commander } # For later effects...
			}

			#####
			character_event = { id = HFP.11031 } # Send event to the killed enemy

			if = {
				limit = { multiplayer = yes }

				death = {
					death_reason = death_battle
					killer = ROOT # aka event_target:home_commander
				}
			}
		}
	}

	option = { # Take artifact, get lots of opinion reward...
		name = EVTOPTA_HFP_11028 # I will mount your head on the castle walls!

		hidden_effect = {
			set_character_flag = took_enemy_skull
			add_artifact = enemy_skull # Hook-in: Warrior Lodges

			new_artifact = {
				set_original_owner = event_target:enemy_commander
				set_description = enemy_skull_desc

				random_list = { # Randomize names to avoid too much repetition.
					33 = { set_name = enemy_skull_named }

					33 = { # Only if not same culture
						trigger = { ROOT = { NOT = { culture = event_target:enemy_commander } } }
						set_name = enemy_skull_named_culture
					}

					33 = { # Only if other government could be deemed "barbarian"...
						trigger = {
							event_target:enemy_liege = { # Should still be alive (so check against them instead of the commander)...
								trigger_if = {
									limit = { is_tribal = yes }
									ROOT = { is_tribal = no }
								}
								trigger_else = {
									is_nomadic = yes
									ROOT = { is_nomadic = no }
								}
							}
						}

						set_name = enemy_skull_barbarian
					}
				}
			}

			if = {
				limit = { is_landed = yes }

				event_target:home_capital_province = {
					save_persistent_event_target = {
						name = local_fearsome_commander_target # Hook-in: Warrior Lodges
						scope = event_target:home_commander
					}
				}
			}
		}


		trigger_switch = { # For prestige rewards.
			on_trigger = has_character_flag

			fought_worse_warrior@event_target:enemy_commander = { prestige = 15 }
			fought_even_warrior@event_target:enemy_commander = { prestige = 20 }
			fought_great_warrior@event_target:enemy_commander = { prestige = 30 }
		}


		if = { # If you have a liege, slap on some opinion bonus...
			limit = { home_commander_and_liege_are_different_characters = yes }

			tooltip = {
				reverse_opinion = {
					name = opinion_impressed
					who = event_target:home_liege
					years = 10
				}

				opinion = {
					name = opinion_was_praised
					who = event_target:home_liege
					years = 10
				}
			}
		}

		else = { # Otherwise, just clear flags.
			clr_character_flag = fought_worse_warrior@event_target:enemy_commander
			clr_character_flag = fought_even_warrior@event_target:enemy_commander
			clr_character_flag = fought_great_warrior@event_target:enemy_commander
		}

		### Actual death (if not MP)
		if = {
			limit = { multiplayer = no }

			event_target:enemy_commander = {
				show_scope_change = no

				death = {
					death_reason = death_battle
					killer = ROOT # aka event_target:home_commander
				}
			}
		}
	}

	option = { # Take no skull artifact, less opinion reward, but become more Kind...
		name = EVTOPTB_HFP_11028 # Or just go in peace...

		hidden_effect = {
			if = {
				limit = { is_landed = yes }

				event_target:home_capital_province = {
					save_persistent_event_target = {
						name = local_fearsome_commander_target # Hook-in: Warrior Lodges
						scope = event_target:home_commander
					}
				}
			}
		}

		add_trait_partially_silently_kind_effect = yes

		trigger_switch = { # For prestige rewards
			on_trigger = has_character_flag

			fought_worse_warrior@event_target:enemy_commander = { prestige = 10 }
			fought_even_warrior@event_target:enemy_commander  = { prestige = 15 }
			fought_great_warrior@event_target:enemy_commander = { prestige = 25 }
		}

		if = { # If you have a liege, slap on some opinion bonus...
			limit = { home_commander_and_liege_are_different_characters = yes }

			tooltip = {
				reverse_opinion = {
					name = opinion_impressed
					who = event_target:home_liege
					years = 10
				}

				opinion = {
					name = opinion_was_praised
					who = event_target:home_liege
					years = 10
				}
			}
		}
		else = { # Otherwise, just clear flags.
			clr_character_flag = fought_worse_warrior@event_target:enemy_commander
			clr_character_flag = fought_even_warrior@event_target:enemy_commander
			clr_character_flag = fought_great_warrior@event_target:enemy_commander
		}

		### Actual death (if not MP)
		if = {
			limit = { multiplayer = no }

			event_target:enemy_commander = {
				show_scope_change = no

				death = {
					death_reason = death_battle
					killer = ROOT # aka event_target:home_commander
				}
			}
		}
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

# Potential follow-up: Home_liege receives news of the spectacular killing...
character_event = {
	id = HFP.11029
	title = the_battle_at_location
	desc = EVTDESC_HFP_11029
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = { # A reward is in order!
		name = EVTOPTA_HFP_11029

		tooltip = {
			opinion = {
				name = opinion_thoroughly_impressed
				who = event_target:home_commander
				years = 10
			}

			reverse_opinion = {
				name = opinion_was_thoroughly_praised
				who = event_target:home_commander
				years = 10
			}
		}

		tooltip = {
			transfer_scaled_wealth = {
				to = event_target:home_commander
				value = 0.3
			}
		}

		event_target:home_commander = {
			set_character_flag = got_paid
			character_event = { id = HFP.11030 } # Sends thank you to home_commander again
		}
	}

	option = { # They have my gratitude
		name = EVTOPTB_HFP_11029

		tooltip = {
			opinion = {
				name = opinion_impressed
				who = event_target:home_commander
				years = 10
			}

			reverse_opinion = {
				name = opinion_was_praised
				who = event_target:home_commander
				years = 10
			}
		}

		event_target:home_commander = {
			character_event = { id = HFP.11030 } # Sends thank you to home_commander again
		}
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

# Follow-up: Home commander is rewarded by liege!
character_event = {
	id = HFP.11030
	title = the_battle_at_location
	desc = EVTDESC_HFP_11030
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	has_dlc = "Holy Fury"

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = EVTOPTA_HFP_11030

		if = {
			limit = { has_character_flag = got_paid }

			transfer_scaled_wealth = {
				from = event_target:home_liege
				value = 0.3
			}

			opinion = {
				name = opinion_was_thoroughly_praised
				who = event_target:home_liege
				years = 10
			}

			reverse_opinion = {
				name = opinion_thoroughly_impressed
				who = event_target:home_liege
				years = 10
			}
		}
		else = {
			opinion = {
				name = opinion_was_praised
				who = event_target:home_liege
				years = 10
			}

			reverse_opinion = {
				name = opinion_impressed
				who = event_target:home_liege
				years = 10
			}
		}

		allow_new_battle_events_effect = yes
	}
}

# Follow-up: Enemy Commander receives news of their own tragic death... (actual death in earlier event)
character_event = {
	id = HFP.11031
	title = the_battle_at_location
	desc = EVTDESC_HFP_11031
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_HFP_11031

		if = {
			limit = {
				event_target:home_commander = {
					any_artifact = {
						artifact_type = enemy_skull
						original_owner = { character = ROOT }
					}
				}
			}

			custom_tooltip = { text = EVTOPTA_HFP_11031_TT } # They receive a brand new "Enemy Skull"
		}
	}
}

# Potential follow-up: Enemy Liege receives news of their commander's tragic death...
character_event = {
	id = HFP.11032
	title = the_battle_at_location
	desc = EVTDESC_HFP_11032
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = EVTOPTA_HFP_11032
	}

	option = {
		name = EVTOPTA_HFP_11032_same_society
		tooltip_info_custom = available_because_same_society

		trigger = { same_society_as = event_target:home_commander }

		add_rival = event_target:home_commander

		event_target:home_commander = {
			character_event = { id = HFP.11033 days = 5 }
		}
	}

	after = {
		if = {
			limit = {
				event_target:home_commander = {
					any_artifact = {
						artifact_type = enemy_skull
						original_owner = { character = event_target:enemy_commander }
					}
				}
			}

			custom_tooltip = { text = EVTOPTA_HFP_11031_TT } # They receive a brand new "Enemy Skull"
		}

		allow_new_battle_events_effect = yes
	}
}

# Potential follow-up: Home Commander is notified of rivalry (sent from event above)
character_event = {
	id = HFP.11033
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_HFP_11033_A
		trigger = {
			any_artifact = {
				artifact_type = enemy_skull
				original_owner = { character = event_target:enemy_commander }
			}
		}
	}

	desc = {
		text = EVTDESC_HFP_11033_B
		trigger = {
			NOT = {
				any_artifact = {
					artifact_type = enemy_skull
					original_owner = { character = event_target:enemy_commander }
				}
			}
		}
	}

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = { # Very well
		name = {
			text = EVTOPTA_HFP_11033
			trigger = {
				any_artifact = {
					artifact_type = enemy_skull
					original_owner = { character = event_target:enemy_commander }
				}
			}
		}
		name = {
			text = EVTOPTB_HFP_11033
			trigger = {
				NOT = {
					any_artifact = {
						artifact_type = enemy_skull
						original_owner = { character = event_target:enemy_commander }
					}
				}
			}
		}

		tooltip = {
			add_rival = FROM
		}

		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: You become brawny! (fired from HFP.11000)
character_event = {
	id = HFP.11034
	title = the_battle_at_location
	desc = EVTDESC_HFP_11034
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes

		random_unit_leader = {
			limit = {
				is_alive = yes

				NOR = {
					trait = brawny
					character = ROOT
				}
			}

			save_event_target_as = my_fellow_commander
		}
	}

	option = { # You become Brawny
		name = EVTOPTA_HFP_11034

		custom_tooltip = { text = EVTOPTA_HFP_11034_TT }

		if = {
			limit = { trait = frail }
			remove_trait = frail
		}
		else = {
			add_trait = brawny
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				is_smart_trigger = yes
			}

			mult_modifier = {
				factor = 0.01
				is_rival = event_target:my_fellow_commander
			}
		}
	}

	option = { # Give the Brawny trait to someone nearby you!
		name = EVTOPTB_HFP_11034

		trigger = {
			event_target:my_fellow_commander = {
				NOT = { trait = brawny }
			}
		}

		custom_tooltip = { text = EVTOPTB_HFP_11034_TT }

		tooltip = {
			event_target:my_fellow_commander = {
				show_scope_change = no

				if = {
					limit = { trait = frail }
					remove_trait = frail
				}
				else = {
					add_trait = brawny
				}
			}
		}

		if = { # Add friendships if appropriate...
			limit = {
				event_target:my_fellow_commander = {
					potentially_interested_in_rivaling_root_trigger = no
					root_potentially_interested_in_rivaling_this_trigger = no
				}
			}

			if = { # If you already have an opinion in place, become friends...
				limit = {
					OR = {
						has_opinion_modifier = {
							name = opinion_budding_friendship
							who = event_target:my_fellow_commander
						}

						reverse_has_opinion_modifier = {
							name = opinion_budding_friendship
							who = event_target:my_fellow_commander
						}
					}
				}

				tooltip = {
					add_friend = event_target:my_fellow_commander
				}
			}
			else = { # Otherwise, add opinions... (*actually* added in follow-up)
				tooltip = {
					opinion = {
						name = opinion_budding_friendship
						who = event_target:my_fellow_commander
						years = 10
					}

					reverse_opinion = {
						name = opinion_budding_friendship
						who = event_target:my_fellow_commander
						years = 10
					}
				}
			}
		}

		# Send event to fellow commander...
		event_target:my_fellow_commander = {
			character_event = { id = HFP.11035 }
		}

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 1.5
				trait = charitable
			}

			mult_modifier = {
				factor = 1.5
				trait = wroth
			}

			mult_modifier = {
				factor = 10
				is_friend = event_target:my_fellow_commander
			}

			mult_modifier = {
				factor = 1.5
				same_society_as = event_target:my_fellow_commander
			}

			mult_modifier = {
				factor = 5
				event_target:my_fellow_commander = {
					current_scope_and_root_make_sense_as_friendlies_trigger = yes
				}
			}
		}

	}
	after = {
		allow_new_battle_events_effect = yes
	}
}

# Potential follow-up: Fellow commander gets to move a rock.
character_event = {
	id = HFP.11035
	title = the_battle_at_location
	desc = EVTDESC_HFP_11035
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		NOT = { trait = brawny }
		FROM = { is_alive = yes }
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = EVTOPTA_HFP_11035

		custom_tooltip = { text = EVTOPTA_HFP_11034_TT }

		if = {
			limit = { trait = frail }
			remove_trait = frail
		}
		else = {
			add_trait = brawny
		}

		if = { # Add friendships if appropriate...
			limit = {
				FROM = {
					potentially_interested_in_rivaling_root_trigger = no
					root_potentially_interested_in_rivaling_this_trigger = no
				}
			}

			if = {
				limit = {
					OR = {
						has_opinion_modifier = {
							name = opinion_budding_friendship
							who = FROM
						}

						reverse_has_opinion_modifier = {
							name = opinion_budding_friendship
							who = FROM
						}
					}
				}

				add_friend = FROM
			}
			else = {
				opinion = {
					name = opinion_budding_friendship
					who = FROM
					years = 10
				}

				reverse_opinion = {
					name = opinion_budding_friendship
					who = FROM
					years = 10
				}
			}
		}

		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: You are impressed by a fellow commander (fired from HFP.11000)
character_event = {
	id = HFP.11036
	title = the_battle_at_location
	desc = EVTDESC_HFP_11036
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes

		any_unit_leader = {
			limit = {
				NOT = { character = ROOT }
				root_has_terrible_opinion_modifier_of_this_extended_trigger = no # So it's not someone you hate
			}

			score_value = {
				value = 100
				good_soldier_outcome_score = yes
			}

			save_event_target_as = my_fellow_commander
		}
	}

	option = {
		name = EVTOPTA_HFP_11036

		if = { # If you already have an opinion in place, become friends...
			limit = {
				OR = {
					has_opinion_modifier = {
						name = opinion_budding_friendship
						who = event_target:my_fellow_commander
					}

					reverse_has_opinion_modifier = {
						name = opinion_budding_friendship
						who = event_target:my_fellow_commander
					}
				}
			}

			tooltip = {
				add_friend = event_target:my_fellow_commander
			}
		}
		else = { # Otherwise, add opinions... (*actually* added in follow-up)
			tooltip = {
				opinion = {
					name = opinion_impressed_me_in_battle
					who = event_target:my_fellow_commander
					years = 10
				}

				reverse_opinion = {
					name = opinion_was_praised
					who = event_target:my_fellow_commander
					years = 10
				}
			}
		}

		# Send event to fellow commander...
		event_target:my_fellow_commander = {
			character_event = {
				id = HFP.11039
				days = 1
			}
		}
	}

	option = {
		name = EVTOPTB_HFP_11036 # It's not that hard!

		trigger = {
			NAND = {
				trait = ambitious
				trait = envious
			}
		}

		random_list = {
			50 = { add_trait_partially_ambitious_effect = yes }
			50 = { add_trait_partially_envious_effect = yes }
		}
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}

# Potential follow-up: Fellow commander reacts to praise.
character_event = {
	id = HFP.11039
	title = the_battle_at_location
	desc = EVTDESC_HFP_11039
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

	option = {
		name = {
			text = EVTOPTA_HFP_11039_default

			trigger = {
				is_evil_trigger = no

				NOR = {
					trait = lunatic
					trait = depressed
					trait = kind
					trait = cannibal

					trigger_if = {
						limit = { trait = zealous }
						has_religion_matching_joined_warrior_lodge_trigger = yes
					}
				}
			}
		}
		name = {
			text = EVTOPTA_HFP_11039_lunatic
			trigger = {
				trait = lunatic
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11039_evil
			trigger = {
				is_evil_trigger = yes
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11039_kind
			trigger = {
				trait = kind
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11039_cannibal
			trigger = {
				trait = cannibal
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11039_depressed
			trigger = { trait = depressed }
		}
		name = {
			text = EVTOPTA_HFP_11039_zealous
			trigger = {
				trait = zealous
				has_religion_matching_joined_warrior_lodge_trigger = yes
				NOT = { trait = depressed }
			}
		}

		remove_trait_silently_depressed_effect = yes

		if = {
			limit = { # If you already have an opinion in place, become friends...
				OR = {
					has_opinion_modifier = {
						name = opinion_budding_friendship
						who = FROM
					}

					reverse_has_opinion_modifier = {
						name = opinion_budding_friendship
						who = FROM
					}
				}
			}

			add_friend = FROM
		}
		else = {
			opinion = {
				name = opinion_was_praised
				who = FROM
				years = 10
			}

			reverse_opinion = {
				name = opinion_impressed_me_in_battle
				who = FROM
				years = 10
			}
		}

		add_blood_splatter_effect = yes
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: You reminisce about previous battles (hooked from previous events, fired from HFP.11000)
character_event = {
	id = HFP.11037
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:target # Might be empty!

	desc = {
		text = EVTDESC_HFP_11037_A_1
		trigger = { has_character_flag = kin_was_fallen_commander }
	}
	desc = {
		text = EVTDESC_HFP_11037_A_2
		trigger = { has_character_flag = remember_fallen_commander }
	}
	desc = {
		text = EVTDESC_HFP_11037_B_1
		trigger = { has_character_flag = i_was_inspiring_commander }
	}
	desc = {
		text = EVTDESC_HFP_11037_B_2
		trigger = { has_character_flag = remember_inspiring_commander }
	}
	desc = {
		text = EVTDESC_HFP_11037_C_1
		trigger = { has_character_flag = i_was_fearsome_commander }
	}
	desc = {
		text = EVTDESC_HFP_11037_C_2
		trigger = { has_character_flag = remember_fearsome_commander }
	}


	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # to keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes

		random_list = {
			10 = { # The least interesting choice...
				trigger = {
					event_target:home_capital_province = {
						persistent_event_target:local_dead_commander_target = { always = yes }
					}
				}
				if = {
					limit = {
						event_target:home_capital_province = {
							persistent_event_target:local_dead_commander_target = { dynasty = ROOT }
						}
					}

					set_character_flag = kin_was_fallen_commander
				}
				else = {
					set_character_flag = remember_fallen_commander
				}

				event_target:home_capital_province = {
					persistent_event_target:local_dead_commander_target = { save_event_target_as = target }
				}
			}

			50 = {
				trigger = {
					event_target:home_capital_province = {
						persistent_event_target:local_inspiring_commander_target = { always = yes }
					}
				}

				if = {
					limit = {
						event_target:home_capital_province = {
							persistent_event_target:local_inspiring_commander_target = { character = ROOT }
						}
					}

					set_character_flag = i_was_inspiring_commander
				}
				else = {
					set_character_flag = remember_inspiring_commander

					event_target:home_capital_province = {
						persistent_event_target:local_inspiring_commander_target = { save_event_target_as = target }
					}
				}
			}

			100 = { # Means people remember a ruler once decapitated an enemy here...
				trigger = {
					event_target:home_capital_province = {
						persistent_event_target:local_fearsome_commander_target = { always = yes }
					}
				}

				if = { # Means YOU did it and text should reflect that.
					limit = {
						event_target:home_capital_province = {
							persistent_event_target:local_fearsome_commander_target = { character = ROOT }
						}
					}

					set_character_flag = i_was_fearsome_commander
				}
				else = {
					set_character_flag = remember_fearsome_commander

					event_target:home_capital_province = {
						persistent_event_target:local_fearsome_commander_target = { save_event_target_as = target }
					}
				}
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_HFP_11037_1
			trigger = { has_character_flag = kin_was_fallen_commander }
		}
		name = {
			text = EVTOPTA_HFP_11037_2
			trigger = { has_character_flag = remember_fallen_commander }
		}
		name = {
			text = EVTOPTB_HFP_11037_1
			trigger = { has_character_flag = i_was_inspiring_commander }
		}
		name = {
			text = EVTOPTB_HFP_11037_2
			trigger = { has_character_flag = remember_inspiring_commander }
		}
		name = {
			text = EVTOPTC_HFP_11037_1
			trigger = { has_character_flag = i_was_fearsome_commander }
		}
		name = {
			text = EVTOPTC_HFP_11037_2
			trigger = { has_character_flag = remember_fearsome_commander }
		}

		show_portrait = event_target:target

		if = {
			limit = {
				OR = {
					has_character_flag = kin_was_fallen_commander
					has_character_flag = remember_fallen_commander
				}
			}

			add_character_modifier = {
				name = glory_days
				years = 10
			}

			clr_character_flag = kin_was_fallen_commander
			clr_character_flag = remember_fallen_commander
		}
		else_if = {
			limit = {
				OR = {
					has_character_flag = i_was_inspiring_commander
					has_character_flag = remember_inspiring_commander
				}
			}

			add_character_modifier = {
				name = proud_role_model
				years = 10
			}

			clr_character_flag = i_was_inspiring_commander
			clr_character_flag = remember_inspiring_commander
		}
		else_if = {
			limit = {
				OR = {
					has_character_flag = i_was_fearsome_commander
					has_character_flag = remember_fearsome_commander
				}
			}

			add_character_modifier = {
				name = center_of_attention
				years = 15
			}

			clr_character_flag = i_was_fearsome_commander
			clr_character_flag = remember_fearsome_commander
		}

		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: You personally kill a ton of enemies. And get a lodge specific nickname. (fired from HFP.11000)
character_event = {
	id = HFP.11038
	title = the_battle_at_location
	desc = EVTDESC_HFP_11038
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	sound = win_battle

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes
	}

	option = {
		name = {
			text = EVTOPTA_HFP_11038_default # I have found my purpose
			trigger = {
				is_evil_trigger = no

				NOR = {
					trait = lunatic
					trait = depressed
					trait = kind
					trait = cannibal

					trigger_if = {
						limit = { trait = zealous }
						has_religion_matching_joined_warrior_lodge_trigger = yes
					}
				}
			}
		}
		name = {
			text = EVTOPTA_HFP_11038_lunatic
			trigger = {
				trait = lunatic
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11038_evil
			trigger = {
				is_evil_trigger = yes
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11038_kind
			trigger = {
				trait = kind
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11038_cannibal
			trigger = {
				trait = cannibal
				NOT = { trait = depressed }
			}
		}
		name = {
			text = EVTOPTA_HFP_11038_depressed
			trigger = { trait = depressed }
		}
		name = {
			text = EVTOPTA_HFP_11038_zealous
			trigger = {
				trait = zealous
				has_religion_matching_joined_warrior_lodge_trigger = yes
				NOT = { trait = depressed }
			}
		}

		prestige = 25
		add_blood_splatter_effect = yes

		if = {
			limit = { trait = depressed }
			remove_trait = depressed
		}
		else_if = {
			limit = { trait = stressed }
			remove_trait = stressed
		}

		if = {
			limit = { has_nickname = no }
			give_nickname = nick_warrior_lodge_spirit
		}

		allow_new_battle_events_effect = yes
	}
}

# Potential follow-up (from battlefield duels): commander_to_the_rescue pushed you out of the way...
character_event = {
	id = HFP.11040
	title = the_battle_at_location
	desc = EVTDESC_HFP_11040
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # send_notifications_after_champion_stand_in_effect, 01_duel_effects.txt

	trigger = {
		NOT = { has_character_flag = show_once@event_target:commander_to_the_rescue }
	}

	fail_trigger_effect = { # Clears flags, just in case
		event_target:commander_to_the_rescue = {
			clr_character_flag = lost_battlefield_duel
			clr_character_flag = won_battlefield_duel
			clr_character_flag = already_taking_a_duel
		}

		allow_new_battle_events_effect = yes
		clr_character_flag = show_once@event_target:commander_to_the_rescue
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		set_character_flag = show_once@event_target:commander_to_the_rescue
	}

	option = { # They did well
		name = {
			text = EVTOPTA_HFP_11040_1
			trigger = {
				OR = {
					trait = lunatic
					trait = envious
					trait = possessed
					is_devil_worshiper_trigger = yes
				}
				OR = {
					event_target:commander_to_the_rescue = { duelist_skill_compared_to_prev_high_group_trigger = yes } # commander_to_the_rescue is a better dueler than you...
					NOT = { trait = kind }
					is_evil_trigger = yes
				}
			}
		}
		name = EVTOPTA_HFP_11040_2

		trigger = {
			event_target:commander_to_the_rescue = { has_character_flag = won_battlefield_duel }
		}

		custom_tooltip = { text = EVTOPTA_HFP_11040_TT }
		show_portrait = event_target:commander_to_the_rescue
	}

	option = { # They did poorly
		name = {
			text = EVTOPTB_HFP_11040_1
			trigger = {
				OR = {
					trait = lunatic
					trait = envious
					trait = possessed
					is_devil_worshiper_trigger = yes
				}
				OR = {
					event_target:commander_to_the_rescue = { duelist_skill_compared_to_prev_high_group_trigger = yes } # commander_to_the_rescue is a better dueler than you...
					NOT = { trait = kind }
					is_evil_trigger = yes
				}
			}
		}
		name = EVTOPTB_HFP_11040_2

		trigger = {
			event_target:commander_to_the_rescue = { has_character_flag = lost_battlefield_duel }
		}

		custom_tooltip = { text = EVTOPTB_HFP_11040_TT }
		show_portrait = event_target:commander_to_the_rescue
	}

	option = { # They died for you...!
		name = {
			text = EVTOPTC_HFP_11040_1
			trigger = {
				OR = {
					trait = lunatic
					trait = envious
					trait = possessed
					is_devil_worshiper_trigger = yes
				}
				OR = {
					event_target:commander_to_the_rescue = { duelist_skill_compared_to_prev_high_group_trigger = yes } # commander_to_the_rescue is a better dueler than you...
					NOT = { trait = kind }
					is_evil_trigger = yes
				}
			}
		}
		name = {
			text = EVTOPTC_HFP_11040_2
			trigger = {
				NOR = {
					is_lover = event_target:commander_to_the_rescue
					is_friend = event_target:commander_to_the_rescue
					is_child_of = event_target:commander_to_the_rescue
					is_parent_of = event_target:commander_to_the_rescue
					sibling = event_target:commander_to_the_rescue
					is_married = event_target:commander_to_the_rescue
				}
			}
		}
		name = {
			text = EVTOPTC_HFP_11040_3
			trigger = {
				OR = {
					is_lover = event_target:commander_to_the_rescue
					is_friend = event_target:commander_to_the_rescue
					is_child_of = event_target:commander_to_the_rescue
					is_parent_of = event_target:commander_to_the_rescue
					sibling = event_target:commander_to_the_rescue
					is_married = event_target:commander_to_the_rescue
				}
			}
		}

		trigger = {
			event_target:commander_to_the_rescue = { is_alive = no }
		}

		custom_tooltip = { text = EVTOPTC_HFP_11040_TT }
		show_portrait = event_target:commander_to_the_rescue
	}

	after = {
		event_target:commander_to_the_rescue = {
			clr_character_flag = lost_battlefield_duel
			clr_character_flag = won_battlefield_duel
			clr_character_flag = already_taking_a_duel
		}

		allow_new_battle_events_effect = yes
		clr_character_flag = show_once@event_target:commander_to_the_rescue
	}
}

# Potential follow-up: for liege (from battlefield duels): commander_to_the_rescue pushed another commander out of the way...
character_event = {
	id = HFP.11041
	title = the_battle_at_location
	desc = EVTDESC_HFP_11041
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		event_target:commander_to_the_rescue = { is_alive = no } # EDIT: will only display if the rescuer died
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
	}

#	option = { # How curious...!
#		name = EVTOPTA_HFP_11041
#
#		trigger = { event_target:commander_to_the_rescue = { is_alive = yes } }
#	}

	option = { # Fortune does not favor the brave.
		name = {
			text = EVTOPTB_HFP_11041_1
			trigger = { trait = cynical }
		}
		name = {
			text = EVTOPTB_HFP_11041_2
			trigger = { NOT = { trait = cynical } }
		}

		trigger = { event_target:commander_to_the_rescue = { is_alive = no } }

		custom_tooltip = { text = EVTOPTA_HFP_11040_TT }
		show_portrait = event_target:commander_to_the_rescue
		allow_new_battle_events_effect = yes
	}
}

### BATTLE EVENT: a battle duel outcome... Fired from send_duel_result_event_effect (01_scripted_effects_duels.txt)
character_event = {
	id = HFP.11042
	title = getDuelTitle
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:other_combatant

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_negative_effect = yes
		set_loser_flags_and_save_opponent_effect = yes
		# Find a potential AI to sacrifice...
		find_cannon_fodder_commander_effect = yes
		log = "BATTLE EVENTS: HFP.11042 fired and [Root.GetTitledFirstName] is currently choosing whether the be taken prisoner by [other_combatant.GetBestName] or not. [commander_cannon_fodder.GetBestName] is cannon fodder."
	}

	desc = {
		text = EVTDESC_HFP_11042_A
		trigger = {
			event_target:other_combatant = { trait = deceitful }
		}
	}
	desc = {
		text = EVTDESC_HFP_11042_B
		trigger = {
			event_target:other_combatant = { duelist_skill_compared_to_prev_low_group_trigger = no } # Opponent is NOT a worse dueler...
		}
	}

	desc = {
		text = EVTDESC_HFP_11042_C
		trigger = {
			event_target:other_combatant = { duelist_skill_compared_to_prev_low_group_trigger = yes } # Opponent is a worse dueler...
		}
	}

	option = { # Wait! Take me prisoner instead!
		name = EVTOPTA_HFP_11042

		trigger = { event_target:other_combatant = { is_alive = yes } }

		show_portrait = event_target:other_combatant
		prestige = -50
		save_event_target_as = captured_commander
		imprison = event_target:enemy_liege # ROOT is imprisoned *by* enemy_liege.
		event_target:enemy_liege = { character_event = { id = 50020 } } # Enemy_liege is notified about your capture...

		hidden_effect = {
			event_target:other_combatant = {
				clr_character_flag = add_duel_xp # To not give rewards...
				clr_character_flag = is_battlefield_duel # To not give opinion rewards..
				allow_new_battle_events_effect = yes
				clean_up_after_duel_effect = yes
			}
		}

		log = "[Root.GetBestName] chose to be taken prisoner by [other_combatant.GetBestName] instead!"

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 0.5
				trait = brave
			}
		}
	}

	option = {
		name = EVTOPTB_HFP_11042 # Take other commander instead?! # traitor

		trigger = {
			event_target:commander_cannon_fodder = { is_alive = yes }
		}

		prestige = -50

		if = {
			limit = { has_nickname = no }

			random = {
				chance = 50
				give_nickname = nick_the_traitor
			}
		}

		add_character_modifier = {
			name = battlefield_betrayal
			years = 10
		}

		reverse_opinion = {
			name = opinion_betrayed_me_in_battle
			who = event_target:commander_cannon_fodder
			years = 25
		}

		event_target:commander_cannon_fodder = {
			show_scope_change = no

			allow_new_battle_events_effect = yes
			save_event_target_as = captured_commander
			imprison = event_target:enemy_liege # Is imprisoned *by* enemy_liege.
		}

		event_target:enemy_liege = {
			character_event = { id = 50020 } # Enemy_liege is notified about the capture
		}

		hidden_effect = {
			event_target:other_combatant = {
				clr_character_flag = add_duel_xp # to not give rewards...
				clr_character_flag = is_battlefield_duel # to not give opinion rewards...
				allow_new_battle_events_effect = yes
				clean_up_after_duel_effect = yes
			}
		}

		log = "[Root.GetBestName] chose to give the enemy [commander_cannon_fodder.GetBestName] in exchange for their own life."

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = deceitful
			}

			mult_modifier = {
				factor = 1.5
				is_devil_worshiper_trigger = yes
			}

			mult_modifier = {
				factor = 0.1
				OR = {
					is_lover = event_target:commander_cannon_fodder
					is_friend = event_target:commander_cannon_fodder
				}
			}
		}
	}

	option = {
		name = EVTOPTC_HFP_11042 # So this is how it all ends...

		custom_tooltip = { text = you_lose_the_duel_tt }

		# To handle clean-up...
		set_character_flag = someone_died
		set_character_flag = actually_injured
		set_character_flag = injury_kills

		event_target:combatant_2 = {
			set_character_flag = someone_died
		}

		event_target:other_combatant = {
			character_event = { id = HFP.11043 } # As the dueling opponent, find out that you killed home_commander...
		}

		if = {
			limit = { NOT = { character = event_target:home_liege } }
			event_target:home_liege = { character_event = { id = HFP.11002 } } # Send notification to home liege
		}

		if = {
			limit = { enemy_commander_and_liege_are_different_characters = yes }
			event_target:enemy_liege = { character_event = { id = HFP.11005 } } # Send notification to enemy liege (only if they are not the one you just fought)
		}

		debug_battle_death_counter_effect = yes # For debug purposes

		death = {
			death_reason = death_duel
			killer = event_target:other_combatant
		}

		log = "[Root.GetBestName] chose to die."

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = brave
			}
		}
	}

	after = {
		clr_character_flag = add_duel_xp # To not give rewards...
		clr_character_flag = is_battlefield_duel # To not give opinion rewards..
		allow_new_battle_events_effect = yes
		event_target:commander_cannon_fodder = {
			allow_new_battle_events_effect = yes
		}
		hidden_effect = { clean_up_after_duel_effect = yes }
	}
}

# Potential follow-up: As the dueling opponent, find out that you killed home_commander... (Fired from the event above)
character_event = {
	id = HFP.11043
	title = getDuelTitle
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:other_combatant

	desc = {
		text = EVTDESC_HFP_11043_A
		trigger = { trait = deceitful }
	}
	desc = EVTDESC_HFP_11043_B
	desc = EVTDESC_HFP_11043_C

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		set_winner_flags_and_save_opponent_effect = yes
	}

	option = { # All shall fear me!
		name = EVTOPTA_HFP_11043

		custom_tooltip = { text = you_win_the_duel_tt }
		custom_tooltip = { text = EVTOPTA_HFP_11043_TT }
		show_portrait = event_target:home_commander
		prestige = 15
		apply_opinion_reward_effect = yes
		allow_new_battle_events_effect = yes
		clean_up_after_duel_effect = yes
	}
}

# Delayed clean-up event: For the enemy_commander (sent from apply_opinion_reward_effect, above, for instance, but multiple places in this file)
character_event = {
	id = HFP.11044

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = { # Only clear if you are the commander...
			limit = { character = event_target:enemy_commander }

			clr_character_flag = fought_worse_warrior@event_target:home_commander
			clr_character_flag = fought_even_warrior@event_target:home_commander
			clr_character_flag = fought_great_warrior@event_target:home_commander
		}
	}
}

### BATTLE EVENT: a battle duel outcome... Fired from send_duel_result_event_effect (01_scripted_effects_duels.txt)
# Defending AI has to choose whether to be taken prisoner or killed...
character_event = {
	id = HFP.11045

	is_triggered_only = yes
	hide_window = yes

	ai = yes

	immediate = {
		set_loser_flags_and_save_opponent_effect = yes
		battle_commander_counter_negative_effect = yes
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		save_event_target_as = captured_commander
	}

	option = { # Wait! Take me prisoner instead!
		FROM = {
			character_event = {
				id = HFP.11046 # Home_commander is notified about your surrender (will choose whether to accept or kill you)...
			}
		}

		ai_chance = {
			factor = 50
			bad_soldier_outcome_score = yes
		}
	}

	option = {
		# I would rather die...

		# To handle clean-up...
		set_character_flag = someone_died
		set_character_flag = actually_injured
		set_character_flag = injury_kills

		event_target:combatant_1 = {
			set_character_flag = someone_died
			character_event = { id = HFP.10103 }
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 1.5
				trait = brave
			}

			mult_modifier = {
				factor = 1.5
				trait = proud
			}
		}
	}
}

# Potential follow-up: As the dueling home_commander, get presented with a choice... (Fired from the event above)
character_event = {
	id = HFP.11046
	title = getDuelTitle
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:other_combatant

	is_triggered_only = yes

	immediate = {
		disallow_new_battle_events_effect = yes # Tto keep the tombola from spamming you...
		set_winner_flags_and_save_opponent_effect = yes
	}

	desc = {
		text = EVTDESC_HFP_11046_A
		trigger = {
			event_target:other_combatant = { duelist_skill_compared_to_prev_low_group_trigger = no } # Opponent is NOT a worse dueler...
		}
	}

	desc = {
		text = EVTDESC_HFP_11046_B
		trigger = {
			event_target:other_combatant = { duelist_skill_compared_to_prev_low_group_trigger = yes } # Opponent is a worse dueler...
		}
	}

	# Warrior Lodge members only...
	option = {
		name = EVTOPTC50020 # [He/She]'ll make a good sacrifice to [HighGodName]
		tooltip_info_custom = available_due_to_warrior_lodge

		trigger = {
			has_dlc = "Holy Fury"
			is_member_of_any_warrior_lodge_trigger = yes
			has_religion_matching_joined_warrior_lodge_trigger = yes
		}

		custom_tooltip = { text = EVTOPTC50020_TT }

		if = {
			limit = {
				NOR = {
					religion_group = pagan_group
					has_religion_feature = religion_ritual_sacrifice
				}
			}

			tiered_high_piety_negative_effect = yes
		}

		if = { # If you already have three instances of this modifier...
			limit = {
				has_instances_of_character_modifier = {
					name = sacrificed_prisoner
					amount = 3
				}
			}

			hidden_effect = { # Do some hidden removal and adding, in order to refresh the final date of the modifier...
				remove_character_modifier = sacrificed_prisoner # Removes all instances

				add_character_modifier = {
					name = sacrificed_prisoner # Add 1st
					days = 1000
					stacking = yes
				}

				add_character_modifier = { # Add 2nd
					name = sacrificed_prisoner
					days = 1000
					stacking = yes
				}
			}

			add_character_modifier = { # Add 3rd
				name = sacrificed_prisoner
				days = 1000
				stacking = yes
			}
		}
		else = { # If you don't have three instances, just add one...
			add_character_modifier = {
				name = sacrificed_prisoner
				days = 1000
				stacking = yes
			}
		}

		event_target:captured_commander = {
			character_event = { id = 50021 } # "They took one look at me and then I was toast"-event.
		}

		hidden_effect = {
			if = {
				limit = {
					OR = {
						has_religion_feature = religion_ritual_sacrifice
						religion_openly_aztec_or_reformed_trigger = yes
					}
				}

				if = { # A foreign religious head/emperor is quite good.
					limit = {
						event_target:captured_commander = {
							OR = {
								controls_religion = yes
								real_tier = EMPEROR
							}

							NOT = { religion = ROOT }
						}
					}

					change_variable = {
						which = burned_hearts_points
						value = 2
					}
				}

				bloodthirsty_tiered_traits_effect = yes
			}
		}

		tooltip = {
			FROM = {
				show_scope_change = no

				death = {
					death_reason = death_sacrificed
					killer = ROOT
				}
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 2
				is_rival = event_target:captured_commander
			}

			mult_modifier = {
				factor = 0.01
				trait = kind
			}

			mult_modifier = {
				factor = 1.5
				is_evil_trigger = yes
			}
		}
	}

	# Non-Warrior Lodge members only...
	option = {
		name = EVTOPTC_HFP_11046 # I think I prefer you dead.

		trigger = { is_member_of_any_warrior_lodge_trigger = no }

		event_target:captured_commander = {
			character_event = { id = HFP.11047 } # "They took one look at me and then I was toast"-event.
		}

		tooltip = {
			FROM = {
				show_scope_change = no

				death = {
					death_reason = death_duel
					killer = ROOT
				}
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 2
				is_rival = event_target:captured_commander
			}

			mult_modifier = {
				factor = 0.01
				trait = kind
			}

			mult_modifier = {
				factor = 1.5
				is_evil_trigger = yes
			}
		}
	}

	option = {
		name = {
			text = PERFECT
			trigger = { NOT = { is_rival = event_target:captured_commander } }
		}
		name = {
			text = EVTOPTB50020 # My rival, no less? Great!
			trigger = { is_rival = event_target:captured_commander }
		}

		reverse_imprison = event_target:captured_commander # FROM is imprisoned *by* ROOT (home_commander (who is landed))

		ai_chance = { factor = 10 }
	}

	after = {
		clr_character_flag = add_duel_xp # To not give rewards...
		clr_character_flag = is_battlefield_duel # To not give opinion rewards..
		allow_new_battle_events_effect = yes # Clears flags, so tombola can fire again...
		clean_up_after_duel_effect = yes

		event_target:captured_commander = {
			clr_character_flag = add_duel_xp # To not give rewards...
			clr_character_flag = is_battlefield_duel # To not give opinion rewards..
			allow_new_battle_events_effect = yes # Clears flags, so tombola can fire again...
			clean_up_after_duel_effect = yes
		}
	}
}

# Potential follow-up: AI (enemy_commander) actually dies and sends notification to their liege...
character_event = {
	id = HFP.11047

	is_triggered_only = yes
	hide_window = yes

	ai = yes

	immediate = {
		liege = {
			character_event = { id = HFP.11048 } # See event below...
		}

		death = {
			death_reason = death_duel
			killer = FROM
		}
	}
}

# Potential follow-up: ROOT (liege) is informed that their commander has been killed (fired from event above)
# Clone of HFP.11002, but with correct scopes to fit this scenario.
# FROM is the killed commander. FROMFROM is the original dueler who chose to show no mercy towards FROM (always an AI).
character_event = {
	id = HFP.11048
	title = commander_lost
	desc = EVTDESC_HFP_11048
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = { # DEFAULT
		name = EVTOPTA_HFP_11002 # Another one bites the dust

		trigger = { NOT = { is_lover = FROM } }

		prestige = -10
	}

	option = {
		name = EVTOPTB_HFP_11002 # I will avenge you, my beloved!

		trigger = { # If you had some kind of close relationship with them (and it makes sense)...BUT not lovers.
			NOT = { is_lover = FROM }

			FROM = {
				OR = {
					is_child_of = ROOT
					is_married = ROOT
					is_parent_of = ROOT
					sibling = ROOT
				}

				root_potentially_interested_in_rivaling_this_trigger = no
			}
		}

		prestige = -10

		add_character_modifier = {
			name = seeking_vengeance
			days = 1000
		}

		if = {
			limit = {
				FROMFROM = { is_alive = yes } # Checks that the murderer is still alive...
			}

			tooltip = {
				FROMFROM = {
					show_scope_change = no

					prestige = 15
				}
			}

			add_rival = FROMFROM
		}
	}

	option = {
		name = 253_lover # Nooo, my sweet love!

		trigger = { is_lover = FROM }

		prestige = -10

		add_character_modifier = {
			name = grieving_over_warrior_lover
			days = 1000
		}

		if = {
			limit = {
				event_target:home_commander = {
					killer = { character = FROMFROM }
				}
			}

			tooltip = {
				event_target:enemy_commander = {
					show_scope_change = no

					prestige = 15
				}
			}

			add_rival = FROMFROM
		}
	}
}

### BATTLE EVENT: I saw someone who looked just like my child/friend (fired from HFP.11000)
character_event = {
	id = HFP.11049
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:my_dear

	is_triggered_only = yes
	hide_from = yes

	trigger = {
		OR = { # Either you have a child, or you have a friend...
			any_child_even_if_dead = {
				age >= 10
				practical_age < 40
				NOT = { at_location = ROOT }
			}

			any_friend = {
				age >= 10
				NOT = { at_location = ROOT }
			}
		}

		NOT = { trait = blinded }
	}

	fail_trigger_effect = {
		allow_new_battle_events_effect = yes
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...

		any_child_even_if_dead = {
			limit = {
				age >= 10
				practical_age < 40
				NOT = { at_location = ROOT }
			}

			score_value = {
				value = 1
				beloved_target_selection_score = yes
			}

			save_event_target_as = my_dear
			ROOT = { set_character_flag = chose_child }
		}

		if = {
			limit = {
				NOT = { event_target:my_dear = { always = yes } }
			}

			any_friend = {
				limit = {
					age >= 14
					NOT = { at_location = ROOT }
				}

				score_value = {
					value = 1
					beloved_target_selection_score = yes
				}

				save_event_target_as = my_dear
			}

			set_character_flag = chose_friend
		}
	}

	desc = {
		text = EVTDESC_HFP_11049_A
		trigger = { has_character_flag = chose_child }
	}
	desc = {
		text = EVTDESC_HFP_11049_B
		trigger = { has_character_flag = chose_friend }
	}

	option = { # We need to *take* the time to tend to our wounds
		name = EVTOPTA_HFP_11049

		add_trait_fully_silently_patient_effect = yes
		piety = 10
	}

	option = { # This is war!
		name = EVTOPTB_HFP_11049

		add_trait_fully_silently_wroth_effect = yes
		prestige = 20
	}

	after = {
		allow_new_battle_events_effect = yes
		clr_character_flag = chose_friend
		clr_character_flag = chose_child
	}
}

### BATTLE EVENT: Easy Pickin' (fired from HFP.11000)
character_event = {
	id = HFP.11050
	title = the_battle_at_location
	desc = EVTDESC_HFP_11050_A
	desc = EVTDESC_HFP_11050_B
	desc = EVTDESC_HFP_11050_C
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:enemy_commander

	is_triggered_only = yes

	trigger = {
		event_target:enemy_commander = {
			is_alive = yes
			ai = yes
		}
	}

	fail_trigger_effect = {
		allow_new_battle_events_effect = yes
	}

	immediate = {
		disallow_new_battle_events_effect = yes # To keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes

		event_target:enemy_commander = {
			disallow_new_battle_events_effect = yes # To keep the tombola from spamming your potential target...
		}

		set_battle_duels_option_flag_effect = yes
		set_character_flag = skip_wounded_trait
	}


	option = { # Special option: Duel enemy commander instead (if you have great combat rating)
		tooltip_info_custom = available_because_duels
		name = EVTOPTA_HFP_11050

		trigger = { has_character_flag = duel_enemy_opt }

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes

		ai_chance = {
			factor = 50

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	option = { # Special option: Duel enemy commander instead (but you have terrible Combat Rating - blocks option above + gives Brave)
		name = EVTOPTB_HFP_11050
		tooltip_info_custom = available_because_duels_bad

		trigger = { has_character_flag = duel_enemy_opt_gain_brave }

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes
		add_trait_partially_silently_brave_effect = yes

		ai_chance = {
			factor = 50

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	option = { # Special option: Duel enemy commander instead (you are Brave already - unlocks dueling regardless, but should block the two above)
		name = EVTOPTC_HFP_11050
		tooltip_info = brave

		trigger = { has_character_flag = duel_enemy_opt_is_brave }

		duel_enemy_commander_effect = yes
		pacifists_lose_piety_effect = yes

		ai_chance = {
			factor = 50

			trigger = {
				event_target:enemy_commander = { ai = yes } # Don't do this to players
			}
		}
	}

	option = { # I will publicly shame the enemy commander!
		name = EVTOPTD_HFP_11050

		prestige = 15

		reverse_opinion = {
			name = opinion_mocked_me_in_battle
			who = event_target:enemy_commander
			years = 3
		}

		allow_new_battle_events_effect = yes
		event_target:enemy_commander = {
			allow_new_battle_events_effect = yes
		}

		ai_chance = {
			factor = 100
			bad_soldier_outcome_score = yes
		}
	}

	after = {
		clr_character_flag = skip_wounded_trait
		clr_character_flag = high_PCS_opt
		clr_character_flag = duel_enemy_opt
		clr_character_flag = duel_enemy_opt_gain_brave
		clr_character_flag = duel_enemy_opt_is_brave
	}
}

character_event = {
	id = HFP.30200
	desc = HFP_DESC_30200
	title = the_battle_at_location
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	trigger = {
		event_target:battlefield_location = {
			OR = {
				region = world_africa_west
				region = world_africa_central
				region = world_africa_east
			}

			OR = {
				borders_major_river = yes
				borders_lake = yes

				# Provinces on the Nile
				province_id = 789 # c_pelusia
				province_id = 791 # c_quena
				province_id = 793 # c_makuria
				province_id = 794 # c_aswan
				province_id = 795 # c_asyut
				province_id = 796 # c_cairo
				province_id = 797 # c_manupura
				province_id = 798 # c_delta
				province_id = 799 # c_gabiyaha
				province_id = 800 # c_gizeh
				province_id = 802 # c_alexandria
				province_id = 879 # c_atbara
				province_id = 880 # c_sennar
				province_id = 1282 # c_dotawo
				province_id = 1322 # c_nobatia
				province_id = 1326 # c_napata
				province_id = 1334 # c_alodia
				province_id = 1335 # c_kosti
			}
		}
	}

	fail_trigger_effect = {
		allow_new_battle_events_effect = yes
	}

	immediate = {
		disallow_new_battle_events_effect = yes
	}

	option = {
		name = EVTOPTA_HFP_30200

		death = { death_reason = death_crocodile }
	}
}

#### Special Events from Duel/Battle Experience #####

# Chance for Duelist
character_event = {
	id = HFP.400
	desc = EVTDESC_HFP_400
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	portrait = event_target:character_i_killed_in_duel

	is_triggered_only = yes # increase_duel_exp_modifier_effect

	trigger = {
		lifestyle_traits < 1
		NOT = { has_character_flag = denied_duelist_trait }

		any_kill_list_character = {
			death_reason = death_duel
		}
	}

	immediate = {
		random_kill_list_character = {
			limit = { death_reason = death_duel }
			save_event_target_as = character_i_killed_in_duel
		}
	}

	option = {
		name = EVTOPTA_HFP_400

		add_trait = duelist
	}

	option = {
		name = EVTOPTB_HFP_400

		set_character_flag = denied_duelist_trait
	}
}

# Chance for Strategist
character_event = {
	id = HFP.401
	desc = EVTDESC_HFP_401
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # increase_battle_experience_effect

	trigger = {
		lifestyle_traits < 1
		NOT = { has_character_flag = denied_strategist_trait }
	}

	option = {
		name = EVTOPTA_HFP_401

		add_trait = strategist
	}

	option = {
		name = EVTOPTB_HFP_401

		set_character_flag = denied_strategist_trait
	}
}

# Duelist Bloodline Earned
character_event = {
	id = HFP.402
	desc = EVTDESC_HFP_402
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # increase_duel_exp_modifier_effect

	trigger = {
		trait = duelist
	}

	option = {
		name = EVTOPTA_HFP_402

		if = {
			limit = { is_female = yes }

			create_bloodline = {
				type = duelist_bloodline
				inheritance = matrilineal
			}
		}
		else = {
			create_bloodline = { type = duelist_bloodline }
		}
		
		prestige = 500
	}
}

# Hidden event to give commanders (who do not have it already) the commander bonus
character_event = {
	id = HFP.11051

	is_triggered_only = yes # on_startup
	hide_window = yes

	trigger = {
		has_minor_title = title_commander
		NOT = { has_character_modifier = hidden_commander_bonus }
	}

	immediate = {
		# Because this cannot be added in the passive effects, for some code reason
		add_character_modifier = {
			name = hidden_commander_bonus
			duration = -1
			hidden = yes
		}
	}
}