###########################################
#										#
# M&M Grand Debate Events				#
#										#
# MNM.1980-1998						#
# MNM.5100-5211						#
#										#
###########################################

# IDs:
# 1980-1998 Emil
# 5100-5199 Joel
# 5200-5299 Milla

namespace = MNM

##################
# THE GRAND DEBATE
##################
# Invitations has been sent out
character_event = {
	id = MNM.1980
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1980
	picture = GFX_evt_gathering_of_minds

	is_triggered_only = yes # mnm_hermetics_decisions.txt

	option = {
		name = EVTOPTA_MNM_1980

		character_event = { id = MNM.1983 days = 60 }
		set_character_flag = hosting_grand_debate

		hidden_effect = {
			set_variable = { which = debate_score value = 0 } # Reset debate score
		}

		society = {
			any_society_member = {
				limit = { block_general_event_trigger = no }
				character_event = { id = MNM.1981 }
			}
		}
	}
}

# Debate Invite
character_event = {
	id = MNM.1981
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1981
	picture = GFX_evt_courier

	is_triggered_only = yes

	option = { # Accept
		name = EVTOPTA_MNM_1981

		prestige = 50
		set_character_flag = attending_grand_debate
		set_character_flag = do_not_disturb
		character_event = { id = MNM.1982 days = 300 } # Safety catch flag clearing

		hidden_effect = {
			set_variable = { which = debate_score value = 0 } # Reset debate score
		}

		ai_chance = { factor = 100 }
	}

	option = { # Decline
		name = EVTOPTB_MNM_1981

		ai_chance = { factor = 0.1 }
	}
}

# Safety catch - clears character flags and modifiers
character_event = {
	id = MNM.1982

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		clr_character_flag = do_not_disturb
		clr_character_flag = attending_grand_debate
		clr_character_flag = grand_debate_has_ended
		clr_character_flag = debate_winner
		clr_character_flag = grand_debate_begins

		society = {
			any_society_member = {
				limit = { has_character_flag = attending_grand_debate }

				clr_character_flag = debate_winner
				clr_character_flag = attending_grand_debate
				clr_character_flag = do_not_disturb
				clr_character_flag = grand_debate_has_ended
			}
		}
	}
}


# The Grand Debate starts
character_event = {
	id = MNM.1983
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1983
	picture = GFX_evt_gathering_of_minds

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1983

		hidden_effect = {
			save_event_target_as = debate_host
			set_character_flag = grand_debate_begins
			set_character_flag = attending_grand_debate

			chronicle = {
				entry = CHRONICLE_GRAND_DEBATE
				picture = GFX_evt_gathering_of_minds
			}

			society = {
				any_society_member = {
					limit = { has_character_flag = attending_grand_debate }
					character_event = { id = MNM.1984 days = 1 random = 15 } # Random events
					character_event = { id = MNM.1985 days = 46 } # Set score
				}
			}

			character_event = { id = MNM.1986 days = 48 } # Select winner
		}
	}
}

# Random events during Grand Debate
character_event = {
	id = MNM.1984

	hide_window = yes
	is_triggered_only = yes

	has_character_flag = attending_grand_debate
	only_capable = yes
	prisoner = no

	trigger = { is_inaccessible_trigger = no }

	immediate = {
		random_list = {
			10 = {
				trigger = {
					NOT = { trait = poet }

					society = {
						any_society_member = {
							trait = poet
							has_character_flag = attending_grand_debate
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								character = ROOT
								is_rival = ROOT
							}
						}
					}
				}

				character_event = { id = MNM.5201 } # Choose to gain Poet, or progress
			}

			10 = {
				trigger = {
					society = {
						any_society_member = {
							is_rival = ROOT
							has_character_flag = attending_grand_debate
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								character = ROOT
								has_opinion_modifier = {
									name = opinion_scholarly_appreciation
									who = ROOT
								}
							}
						}
					}
				}

				character_event = { id = MNM.5202 } # Sway a rival
			}

			10 = {
				trigger = {
					society = {
						any_society_member = {
							has_character_flag = attending_grand_debate
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								character = ROOT
								is_close_relative = ROOT
							}
						}
					}
				}

				character_event = { id = MNM.5203 } # Develop feelings towards other member maybe
			}

			10 = {
				character_event = { id = MNM.5204 } # Try the comedic approach
			}

			10 = {
				trigger = {
					society = {
						any_society_member = {
							count >= 2

							has_character_flag = attending_grand_debate
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								character = ROOT
								is_close_relative = ROOT
							}
						}
					}
				}

				character_event = { id = MNM.5207 } # The Mediator
			}

			10 = {
				trigger = {
					NOT = { has_character_modifier = childish_prankster }

					society = {
						any_society_member = {
							has_character_flag = attending_grand_debate
							is_inaccessible_or_incapable_trigger = no
							in_command = no

							NOR = {
								character = ROOT
								is_close_relative = ROOT
							}
						}
					}

					any_artifact = { has_artifact_flag = ingredient }
				}

				character_event = { id = MNM.5208 } # Sabotage someone else (and yourself)?
			}

			10 = {
				trigger = {
					OR = {
						any_lover = {
							is_incapable = no
							prisoner = no
						}

						any_spouse = {
							is_incapable = no
							prisoner = no
						}

						any_friend = {
							is_incapable = no
							prisoner = no
						}

						any_child = {
							is_incapable = no
							prisoner = no
							age >= 6
							NOT = { is_rival = ROOT }

							opinion = {
								who = ROOT
								value >= 0
							}
						}

						any_close_relative = {
							is_parent_of = ROOT
							is_incapable = no
							prisoner = no
							NOT = { is_rival = ROOT }

							opinion = {
								who = ROOT
								value >= 0
							}
						}
					}
				}

				character_event = { id = MNM.5209 } # Surge of creativity: focus on studies, or write letter to someone?
			}

			5 = {
				trigger = { NOT = { trait = stressed } }
				character_event = { id = MNM.5211 } # Mental break-down
			}

			10 = { # Bad lodgings/homesick
				trigger = {
					NOT = { character = event_target:debate_host }
				}

				character_event = { id = MNM.5100 }
			}

			3 = { # Sabotage notes
				trigger = {
					society = {
						any_society_member = {
							NOT = { character = ROOT }
							has_character_flag = attending_grand_debate
							learning >= ROOT
						}
					}
				}

				mult_modifier = {
					factor = 2
					trait = deceitful
				}

				character_event = { id = MNM.5101 }
			}

			10 = { # Find abandoned notes
				character_event = { id = MNM.5102 }
			}
		}
	}
}

# Set debate score
character_event = {
	id = MNM.1985

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		export_to_variable = {
			which = local_debate_learning
			value = learning
		}

		change_variable = {
			which = debate_score
			which = local_debate_learning
		}

		if = {
			limit = { trait = gregarious }
			change_variable = { which = debate_score value = 1 }
		}

		if = {
			limit = { trait = socializer }
			change_variable = { which = debate_score value = 1 }
		}

		if = {
			limit = { trait = shy }
			change_variable = { which = debate_score value = -1 }
		}

		if = {
			limit = { has_fair_trait_trigger = yes }
			change_variable = { which = debate_score value = 1 }
		}

		if = {
			limit = { trait = stutter }
			change_variable = { which = debate_score value = -2 }
		}

		if = {
			limit = { trait = lisp }
			change_variable = { which = debate_score value = -2 }
		}

		if = {
			limit = { is_incapable = yes }
			change_variable = { which = debate_score value = -100 }
		}

		random_list = {
			10 = {
				set_character_flag = debate_score_20
				trigger = {
					check_variable = { which = debate_score value >= 54 }
				}
			}
			10 = {
				set_character_flag = debate_score_19
				trigger = {
					check_variable = { which = debate_score value < 60 }
					check_variable = { which = debate_score value >= 51 }
				}
			}
			10 = {
				set_character_flag = debate_score_18
				trigger = {
					check_variable = { which = debate_score value < 57 }
					check_variable = { which = debate_score value >= 48 }
				}
			}
			10 = {
				set_character_flag = debate_score_17
				trigger = {
					check_variable = { which = debate_score value < 54 }
					check_variable = { which = debate_score value >= 45 }
				}
			}
			10 = {
				set_character_flag = debate_score_16
				trigger = {
					check_variable = { which = debate_score value < 51 }
					check_variable = { which = debate_score value >= 42 }
				}
			}
			10 = {
				set_character_flag = debate_score_15
				trigger = {
					check_variable = { which = debate_score value < 48 }
					check_variable = { which = debate_score value >= 39 }
				}
			}
			10 = {
				set_character_flag = debate_score_14
				trigger = {
					check_variable = { which = debate_score value < 45 }
					check_variable = { which = debate_score value >= 36 }
				}
			}
			10 = {
				set_character_flag = debate_score_13
				trigger = {
					check_variable = { which = debate_score value < 42 }
					check_variable = { which = debate_score value >= 33 }
				}
			}
			10 = {
				set_character_flag = debate_score_12
				trigger = {
					check_variable = { which = debate_score value < 39 }
					check_variable = { which = debate_score value >= 30 }
				}
			}
			10 = {
				set_character_flag = debate_score_11
				trigger = {
					check_variable = { which = debate_score value < 36 }
					check_variable = { which = debate_score value >= 27 }
				}
			}
			10 = {
				set_character_flag = debate_score_10
				trigger = {
					check_variable = { which = debate_score value < 33 }
					check_variable = { which = debate_score value >= 24 }
				}
			}
			10 = {
				set_character_flag = debate_score_09
				trigger = {
					check_variable = { which = debate_score value < 30 }
					check_variable = { which = debate_score value >= 21 }
				}
			}
			10 = {
				set_character_flag = debate_score_08
				trigger = {
					check_variable = { which = debate_score value < 27 }
					check_variable = { which = debate_score value >= 18 }
				}
			}
			10 = {
				set_character_flag = debate_score_07
				trigger = {
					check_variable = { which = debate_score value < 24 }
					check_variable = { which = debate_score value >= 15 }
				}
			}
			10 = {
				set_character_flag = debate_score_06
				trigger = {
					check_variable = { which = debate_score value < 21 }
					check_variable = { which = debate_score value >= 12 }
				}
			}
			10 = {
				set_character_flag = debate_score_05
				trigger = {
					check_variable = { which = debate_score value < 18 }
					check_variable = { which = debate_score value >= 9 }
				}
			}
			10 = {
				set_character_flag = debate_score_04
				trigger = {
					check_variable = { which = debate_score value < 15 }
					check_variable = { which = debate_score value >= 6 }
				}
			}
			10 = {
				set_character_flag = debate_score_03
				trigger = {
					check_variable = { which = debate_score value < 12 }
					check_variable = { which = debate_score value >= 3 }
				}
			}
			10 = {
				set_character_flag = debate_score_02
				trigger = {
					check_variable = { which = debate_score value < 9 }
				}
			}
			10 = {
				set_character_flag = debate_score_01
				trigger = {
					check_variable = { which = debate_score value < 6 }
				}
			}
			10 = {
				set_character_flag = debate_score_00
				trigger = {
					check_variable = { which = debate_score value < 3 }
				}
			}
		}
	}
}

# Select the winner
character_event = {
	id = MNM.1986

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		society = {
			random_society_member = {
				limit = { has_character_flag = attending_grand_debate }
				preferred_limit = { has_character_flag = debate_score_20 }
				preferred_limit = { has_character_flag = debate_score_19 }
				preferred_limit = { has_character_flag = debate_score_18 }
				preferred_limit = { has_character_flag = debate_score_17 }
				preferred_limit = { has_character_flag = debate_score_16 }
				preferred_limit = { has_character_flag = debate_score_15 }
				preferred_limit = { has_character_flag = debate_score_14 }
				preferred_limit = { has_character_flag = debate_score_13 }
				preferred_limit = { has_character_flag = debate_score_12 }
				preferred_limit = { has_character_flag = debate_score_11 }
				preferred_limit = { has_character_flag = debate_score_10 }
				preferred_limit = { has_character_flag = debate_score_09 }
				preferred_limit = { has_character_flag = debate_score_08 }
				preferred_limit = { has_character_flag = debate_score_07 }
				preferred_limit = { has_character_flag = debate_score_06 }
				preferred_limit = { has_character_flag = debate_score_05 }
				preferred_limit = { has_character_flag = debate_score_04 }
				preferred_limit = { has_character_flag = debate_score_03 }
				preferred_limit = { has_character_flag = debate_score_02 }
				preferred_limit = { has_character_flag = debate_score_01 }
				preferred_limit = { has_character_flag = debate_score_00 }
				set_character_flag = debate_winner
				clr_character_flag = debate_score_20
				clr_character_flag = debate_score_19
				clr_character_flag = debate_score_18
				clr_character_flag = debate_score_17
				clr_character_flag = debate_score_16
				clr_character_flag = debate_score_15
				clr_character_flag = debate_score_14
				clr_character_flag = debate_score_13
				clr_character_flag = debate_score_12
				clr_character_flag = debate_score_11
				clr_character_flag = debate_score_10
				clr_character_flag = debate_score_09
				clr_character_flag = debate_score_08
				clr_character_flag = debate_score_07
				clr_character_flag = debate_score_06
				clr_character_flag = debate_score_05
				clr_character_flag = debate_score_04
				clr_character_flag = debate_score_03
				clr_character_flag = debate_score_02
				clr_character_flag = debate_score_01
				clr_character_flag = debate_score_00

				character_event = {
					id = MNM.1989 # Notify winners
					days = 3
				}
			}
		}
	}
}

# Character scores top placement
character_event = {
	id = MNM.1989
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1989
	picture = GFX_evt_gathering_of_minds

	is_triggered_only = yes

	has_character_flag = attending_grand_debate

	option = {
		name = EVTOPTA_MNM_1989

		wealth = 100
		prestige = 300
		change_society_currency = 200

		event_target:debate_host = {
			if = {
				limit = { character = ROOT }
				character_event = { id = MNM.1993 days = 3 } # If host is winner - End the debate
			}
			else = {
				character_event = { id = MNM.1990 days = 3 } # Inform host
			}
		}

		any_player = {
			limit = {
				same_society_as = ROOT
				has_character_flag = attending_grand_debate

				NOR = {
					character = event_target:debate_host
					character = ROOT
				}
			}

			character_event = { id = MNM.1991 days = 3 } # Inform other participants
		}
	}
}

# Inform host about winner
character_event = {
	id = MNM.1990
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1990
	picture = GFX_evt_gathering_of_minds

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1990

		opinion = {
			name = opinion_debate_winner
			who = FROM
			years = 10
		}

		character_event = { id = MNM.1993 days = 5 }
	}
}

# Inform others about winner
character_event = {
	id = MNM.1991
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1990
	picture = GFX_evt_gathering_of_minds

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1991
	}
}

# The Grand Debate ends
character_event = {
	id = MNM.1993
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1993
	picture = GFX_evt_gathering_of_minds

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1993

		add_society_modifier = {
			name = held_grand_debate_modifier
			years = 5
		}

		custom_tooltip = { text = GRAND_DEBATE_PARTICIPANT_OPINION_TOOLTIP }

		hidden_effect = {
			society = {
				any_society_member = {
					limit = { has_character_flag = attending_grand_debate }

					if = {
						limit = { has_character_flag = debate_winner }

						clr_character_flag = debate_winner
						clr_character_flag = attending_grand_debate
						clr_character_flag = do_not_disturb
						set_character_flag = grand_debate_has_ended
					}
					else = {
						if = {
							limit = {
								NOT = { character = ROOT }
							}

							opinion = {
								name = opinion_debate_participant
								who = ROOT
								years = 5
							}
						}

						random_list = { # Select outcome
							10 = { # Good outcome - Upgrade your education trait
								trigger = { has_top_tier_education_trait_trigger = no }

								mult_modifier = {
									factor = 2
									OR = {
										has_character_flag = debate_score_20
										has_character_flag = debate_score_19
										has_character_flag = debate_score_18
										has_character_flag = debate_score_17
										has_character_flag = debate_score_16
									}
								}

								character_event = { id = MNM.1994 }
							}

							20 = { # Good outcome
								mult_modifier = {
									factor = 2
									OR = {
										has_character_flag = debate_score_20
										has_character_flag = debate_score_19
										has_character_flag = debate_score_18
										has_character_flag = debate_score_17
										has_character_flag = debate_score_16
										has_character_flag = debate_score_15
										has_character_flag = debate_score_14
										has_character_flag = debate_score_13
										has_character_flag = debate_score_12
									}
								}

								character_event = { id = MNM.1995 }
							}

							30 = { # Decent outcome
								character_event = { id = MNM.1996 }
							}

							30 = { # Normal outcome
								character_event = { id = MNM.1997 }
							}

							10 = { # Bad outcome
								trigger = {
									NOR = {
										has_character_flag = debate_score_20
										has_character_flag = debate_score_19
										has_character_flag = debate_score_18
										has_character_flag = debate_score_17
										has_character_flag = debate_score_16
										has_character_flag = debate_score_15
										has_character_flag = debate_score_14
										has_character_flag = debate_score_13
										has_character_flag = debate_score_12
									}
								}

								mult_modifier = {
									factor = 2
									OR = {
										has_character_flag = debate_score_03
										has_character_flag = debate_score_02
										has_character_flag = debate_score_01
										has_character_flag = debate_score_00
									}
								}

								character_event = { id = MNM.1998 }
							}
						}

						clr_character_flag = attending_grand_debate
						clr_character_flag = do_not_disturb
						clr_character_flag = debate_score_20
						clr_character_flag = debate_score_19
						clr_character_flag = debate_score_18
						clr_character_flag = debate_score_17
						clr_character_flag = debate_score_16
						clr_character_flag = debate_score_15
						clr_character_flag = debate_score_14
						clr_character_flag = debate_score_13
						clr_character_flag = debate_score_12
						clr_character_flag = debate_score_11
						clr_character_flag = debate_score_10
						clr_character_flag = debate_score_09
						clr_character_flag = debate_score_08
						clr_character_flag = debate_score_07
						clr_character_flag = debate_score_06
						clr_character_flag = debate_score_05
						clr_character_flag = debate_score_04
						clr_character_flag = debate_score_03
						clr_character_flag = debate_score_02
						clr_character_flag = debate_score_01
						clr_character_flag = debate_score_00
					}
				}
			}

			clr_global_flag = holding_grand_debate
			clr_global_flag = held_grand_debate
			set_global_flag = held_grand_debate
			clr_character_flag = attending_grand_debate
			clr_character_flag = hosting_grand_debate
			clr_character_flag = grand_debate_begins
			clr_character_flag = debate_winner
			clr_character_flag = do_not_disturb
			set_character_flag = grand_debate_has_ended
		}
	}
}

# The Grand Debate ends - Education upgrade
character_event = {
	id = MNM.1994
	title = GRAND_DEBATE_TITLE
	picture = GFX_evt_gathering_of_minds

	desc = {
		text = EVTDESC_MNM_1994
		trigger = {
			NOT = { character = event_target:debate_host }
		}
	}
	desc = {
		text = EVTDESC_MNM_1994_HOST
		trigger = { character = event_target:debate_host }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1994

		prestige = 50
		upgrade_education_effect = yes
	}
}

# The Grand Debate ends - Good outcome
character_event = {
	id = MNM.1995
	title = GRAND_DEBATE_TITLE
	picture = GFX_evt_gathering_of_minds

	desc = {
		text = EVTDESC_MNM_1995
		trigger = {
			NOT = { character = event_target:debate_host }
		}
	}
	desc = {
		text = EVTDESC_MNM_1995_HOST
		trigger = { character = event_target:debate_host }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1995

		prestige = 50

		add_character_modifier = {
			name = debater
			years = 3
		}
	}
}

# The Grand Debate ends - Decent outcome
character_event = {
	id = MNM.1996
	title = GRAND_DEBATE_TITLE
	picture = GFX_evt_gathering_of_minds

	desc = {
		text = EVTDESC_MNM_1996
		trigger = {
			NOT = { character = event_target:debate_host }
		}
	}
	desc = {
		text = EVTDESC_MNM_1996_HOST
		trigger = { character = event_target:debate_host }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1996

		prestige = 50
	}
}

# The Grand Debate ends - Normal outcome
character_event = {
	id = MNM.1997
	title = GRAND_DEBATE_TITLE
	picture = GFX_evt_gathering_of_minds

	desc = {
		text = EVTDESC_MNM_1997
		trigger = {
			NOT = { character = event_target:debate_host }
		}
	}
	desc = {
		text = EVTDESC_MNM_1997_HOST
		trigger = { character = event_target:debate_host }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1997

		random = {
			chance = 10
			change_learning = 1
		}
	}
}

# The Grand Debate ends - Bad outcome
character_event = {
	id = MNM.1998
	title = GRAND_DEBATE_TITLE
	desc = EVTDESC_MNM_1998
	picture = GFX_evt_gathering_of_minds

	desc = {
		text = EVTDESC_MNM_1998
		trigger = {
			NOT = { character = event_target:debate_host }
		}
	}
	desc = {
		text = EVTDESC_MNM_1998_HOST
		trigger = { character = event_target:debate_host }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_1998

		prestige = -100
		random = {
			chance = 10
			change_learning = -1
		}
	}
}


######################################################
######## RANDOM EVENTS (for participants) ############
######################################################

character_event = { # Gain Poet trait (or not)
	id = MNM.5201
	desc = EVTDESC_MNM_5201
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		society = {
			random_society_member = { # find a poet
				limit = {
					trait = poet
					has_character_flag = attending_grand_debate
					is_inaccessible_or_incapable_trigger = no
					in_command = no

					NOR = {
						character = ROOT
						is_rival = ROOT
					}
				}

				save_event_target_as = fellow_debater_target
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_5201 # sit down and write something beautiful

		custom_tooltip = { text = EVTOPTA_MNM_5201_TT }

		add_trait = poet
	}

	option = {
		name = EVTOPTB_MNM_5201 # Steer my arguments back to logos

		custom_tooltip = { text = EVTOPTB_MNM_5201_TT }

		hidden_effect = { change_variable = { which = debate_score value = 1 } }
	}
}

character_event = { # Sway a rival
	id = MNM.5202
	desc = EVTDESC_MNM_5202
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		society = {
			random_society_member = {
				limit = {
					is_rival = ROOT
					has_character_flag = attending_grand_debate
					is_inaccessible_or_incapable_trigger = no
					in_command = no

					NOR = {
						character = ROOT

						has_opinion_modifier = {
							name = opinion_scholarly_appreciation
							who = ROOT
						}
					}
				}

				save_event_target_as = rival_debater_target
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_5202 # I am glad we can see beyond our differences

		reverse_opinion = {
			name = opinion_scholarly_appreciation
			who = event_target:rival_debater_target
			years = 10
		}
	}
}

character_event = { # Develop a crush of some sort (on random hermetic present at debate)
	id = MNM.5203
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_MNM_5203_A # Wow, they are so great
		trigger = {
			event_target:striking_debater_target = {
				NOR = {
					is_lover = ROOT
					ROOT_possibly_romantically_interested_trigger = yes
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_5203_B # I knew I already liked them, but wow
		trigger = {
			event_target:striking_debater_target = {
				OR = {
					is_lover = ROOT
					ROOT_possibly_romantically_interested_trigger = yes
				}
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		society = {
			random_society_member = {
				limit = {
					has_character_flag = attending_grand_debate
					is_inaccessible_or_incapable_trigger = no
					in_command = no

					NOR = {
						character = ROOT
						is_close_relative = ROOT
					}
				}

				save_event_target_as = striking_debater_target
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_5203 # I am not sure what these feelings are

		if = {
			limit = {
				event_target:striking_debater_target = {
					OR = {
						is_lover = ROOT
						ROOT_possibly_romantically_interested_trigger = yes
					}
				}
			}

			random_list = {
				35 = {
					opinion = {
						name = opinion_scholarly_appreciation
						who = event_target:striking_debater_target
						years = 10
					}
				}

				25 = {
					opinion = {
						name = opinion_budding_romance
						who = event_target:striking_debater_target
						years = 10
					}

					hidden_effect = {
						reverse_opinion = {
							name = opinion_budding_romance
							who = event_target:striking_debater_target
							years = 10
						}
					}
				}

				20 = {
					opinion = {
						name = opinion_budding_friendship
						who = event_target:striking_debater_target
						years = 10
					}

					hidden_effect = {
						reverse_opinion = {
							who = event_target:striking_debater_target
							name = opinion_budding_friendship
							years = 10
						}
					}
				}

				5 = {
					trigger = {
						NOT = { trait = envious }
					}

					add_trait_fully_envious_effect = yes
				}
			}
		}
		else = {
			random_list = {
				10 = {
					opinion = {
						name = opinion_scholarly_appreciation
						who = event_target:striking_debater_target
						years = 10
					}
				}

				10 = {
					opinion = {
						name = opinion_budding_friendship
						who = event_target:striking_debater_target
						years = 10
					}

					hidden_effect = {
						reverse_opinion = {
							name = opinion_budding_friendship
							who = event_target:striking_debater_target
							years = 10
						}
					}
				}

				10 = {
					trigger = {
						NOT = { trait = envious }
					}

					add_trait_fully_envious_effect = yes
				}
			}
		}
	}
}

character_event = { # Use humor?
	id = MNM.5204
	desc = EVTDESC_MNM_5204
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_5204 # I will try to use humor!

		custom_tooltip = { text = EVTOPTA_MNM_5204_TT }

		hidden_effect = {
			random_list = {
				50 = {
					mult_modifier = {
						factor = 1.1
						diplomacy >= 7
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 9
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 11
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 13
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 15
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 17
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 19
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 21
					}
					mult_modifier = {
						factor = 1.1
						diplomacy >= 23
					}
					mult_modifier = {
						factor = 1.2
						trait = genius
					}
					mult_modifier = {
						factor = 1.1
						trait = quick
					}
					mult_modifier = {
						factor = 1.1
						trait = shrewd
					}
					mult_modifier = {
						factor = 1.1
						trait = gregarious
					}
					mult_modifier = {
						factor = 0.5
						trait = dull
					}
					mult_modifier = {
						factor = 0.5
						trait = slow
					}
					mult_modifier = {
						factor = 0.1
						trait = imbecile
					}

					character_event = { id = MNM.5205 days = 3 random = 5 } # it works!
				}
				50 = {
					character_event = { id = MNM.5206 days = 3 random = 5 } # it fails
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_5204 # I will NOT stoop that low

		custom_tooltip = { text = EVTOPTB_MNM_5204_TT }
	}
}

character_event = { # SUCCESS - I charmed their socks off with my jokes!
	id = MNM.5205
	desc = EVTDESC_MNM_5205
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_5205 # I am great!

		add_trait_fully_silently_gregarious_effect = yes

		hidden_effect = { change_variable = { which = debate_score value = 1 } }
	}
}

character_event = { # FAILURE - People find me a philistine
	id = MNM.5206
	desc = EVTDESC_MNM_5206
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_5206 # I am great!

		add_trait_fully_silently_shy_effect = yes

		hidden_effect = { change_variable = { which = debate_score value = -1 } }
	}
}

character_event = { # The Mediator
	id = MNM.5207
	desc = EVTDESC_MNM_5207
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion
	is_triggered_only = yes

	immediate = {
		society = {
			random_society_member = {
				limit = {
					has_character_flag = attending_grand_debate
					is_inaccessible_or_incapable_trigger = no
					in_command = no

					NOR = {
						character = ROOT
						is_close_relative = ROOT
					}
				}

				save_event_target_as = fellow_member_1
			}

			random_society_member = {
				limit = {
					has_character_flag = attending_grand_debate
					is_inaccessible_or_incapable_trigger = no
					in_command = no

					NOR = {
						character = ROOT
						is_close_relative = ROOT
						character = event_target:fellow_member_1
					}
				}

				save_event_target_as = fellow_member_2
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_5207 # member 1 is pleased, 2 not so much

		reverse_opinion = {
			name = opinion_mediator
			who = event_target:fellow_member_1
			years = 10
		}

		reverse_opinion = {
			name = opinion_meddler
			who = event_target:fellow_member_2
			years = 10
		}

		ai_chance = {
			factor = 1

			trigger = { diplomacy < 17 }
		}
	}

	option = {
		name = EVTOPTB_MNM_5207 # member 2 is pleased, 1 not so much

		reverse_opinion = {
			name = opinion_meddler
			who = event_target:fellow_member_1
			years = 10
		}

		reverse_opinion = {
			name = opinion_mediator
			who = event_target:fellow_member_2
			years = 10
		}

		ai_chance = {
			factor = 1

			trigger = { diplomacy < 17 }
		}
	}

	option = {
		name = EVTOPTC_MNM_5207 # both are pleased
		tooltip_info = diplomacy

		trigger = { diplomacy >= 17 }

		reverse_opinion = {
			who = event_target:fellow_member_1
			name = opinion_mediator
			years = 10
		}

		reverse_opinion = {
			who = event_target:fellow_member_2
			name = opinion_mediator
			years = 10
		}

		hidden_effect = { change_variable = { which = debate_score value = 1 } }
	}

	option = {
		name = EVTOPTD_MNM_5207 # nothing happens
	}
}


# Dragging someone down with you
character_event = {
	id = MNM.5208
	desc = EVTDESC_MNM_5208 # Fellow hermetic is being pompous
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		select_random_hermetic_ingredient_effect = yes
		select_random_hermetic_ingredient_effect = yes

		society = {
			random_society_member = {
				limit = {
					has_character_flag = attending_grand_debate
					is_inaccessible_or_incapable_trigger = no
					in_command = no

					NOR = {
						character = ROOT
						is_close_relative = ROOT
					}
				}

				preferred_limit = {
					is_rival = ROOT
				}

				save_event_target_as = fellow_member_target
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_5208 # it would be worth sabotaging them

		custom_tooltip = { text = EVTOPTA_MNM_5208_TT }

		add_character_modifier = {
			name = childish_prankster
			years = 5
		}

		event_target:fellow_member_target = {
			show_scope_change = no

			add_character_modifier = {
				name = tarnished_reputation
				years = 5
			}
		}

		if = {
			limit = { has_selected_ingredient_2_trigger = yes }
			destroy_selected_ingredient_1_and_2_effect = yes
		}
		else_if = {
			limit = { has_selected_ingredient_1_trigger = yes }
			destroy_selected_ingredient_1_effect = yes
		}

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 50
				OR = {
					trait = ambitious
					trait = cruel
					has_vice_trigger = yes
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_5208 # I respect my fellow scholars!

		custom_tooltip = { text = EVTOPTB_MNM_5208_TT }

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 50
				trait = kind
			}
		}
	}

	after = {
		remove_selection_of_ingredients_effect = yes
	}
}

# Deal with surge of inspiration (prepare arguments for tomorrow's discussion, or write a letter to someone you care about?)
character_event = {
	id = MNM.5209
	desc = EVTDESC_MNM_5209
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		# Find a target, preferably lover, then spouse, then friend, then a child...
		if = {
			limit = {
				any_lover = {
					is_incapable = no
					prisoner = no
				}
			}

			random_lover = {
				limit = {
					is_incapable = no
					prisoner = no
				}

				save_event_target_as = inspired_letter_target
				set_character_flag = love_letters_flag
			}
		}
		else_if = {
			limit = {
				any_spouse = {
					is_incapable = no
					prisoner = no
				}
			}

			random_spouse = {
				limit = {
					is_incapable = no
					prisoner = no
				}

				save_event_target_as = inspired_letter_target
				set_character_flag = love_letters_flag
			}
		}
		else_if = {
			limit = {
				any_friend = {
					is_incapable = no
					prisoner = no
				}
			}

			random_friend = {
				limit = {
					is_incapable = no
					prisoner = no
				}

				save_event_target_as = inspired_letter_target
				set_character_flag = pen_pal_flag
			}
		}
		else_if = {
			limit = {
				any_child = {
					is_incapable = no
					prisoner = no
					age >= 6

					opinion = {
						who = ROOT
						value >= 0
					}

					NOT = { is_rival = ROOT }
				}
			}

			random_child = {
				limit = {
					is_incapable = no
					prisoner = no
					age >= 6

					opinion = {
						who = ROOT
						value >= 0
					}

					NOT = { is_rival = ROOT }
				}

				save_event_target_as = inspired_letter_target
				set_character_flag = pen_pal_flag
			}
		}
		else_if = {
			limit = {
				any_close_relative = {
					is_parent_of = ROOT
					is_incapable = no
					prisoner = no

					opinion = {
						who = ROOT
						value >= 0
					}

					NOT = { is_rival = ROOT }
				}
			}

			random_close_relative = {
				if = {
					limit = {
						is_parent_of = ROOT
						is_incapable = no
						prisoner = no

						opinion = {
							who = ROOT
							value >= 0
						}

						NOT = { is_rival = ROOT }
					}

					save_event_target_as = inspired_letter_target
					set_character_flag = delighted_parent_flag
				}
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_5209_love_target # I will write a letter to them
			trigger = {
				event_target:inspired_letter_target = {
					OR = {
						is_lover = ROOT

						has_opinion_modifier = {
							name = opinion_budding_romance
							who = ROOT
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_5209_friendly_target # I will write a letter to them
			trigger = {
				reverse_opinion = {
					who = event_target:inspired_letter_target
					value >= 0
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_5209_hostile_target # I will write a letter to them
			trigger = {
				reverse_opinion = {
					who = event_target:inspired_letter_target
					value < 0
				}
			}
		}

		custom_tooltip = { text = EVTOPTA_MNM_5209_TT }

		event_target:inspired_letter_target = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				love_letters_flag = {
					opinion = {
						name = opinion_love_letters
						who = ROOT
						years = 10
					}
				}

				pen_pal_flag = {
					opinion = {
						name = opinion_pen_pal
						who = ROOT
						years = 10
					}
				}

				delighted_parent_flag = {
					opinion = {
						name = opinion_delighted_parent
						who = ROOT
						years = 10
					}
				}
			}

			character_event = { id = MNM.5210 days = 10 }
		}

		ai_chance = {
			factor = 1

			trigger = {
				NOT = { trait = poet }
			}
		}
	}

	option = { # special poet trait option
		name = {
			text = EVTOPTB_MNM_5209_love_target # I will write a letter to them
			trigger = {
				event_target:inspired_letter_target = {
					OR = {
						is_lover = ROOT

						has_opinion_modifier = {
							name = opinion_budding_romance
							who = ROOT
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTB_MNM_5209_friendly_target # I will write a letter to them
			trigger = {
				reverse_opinion = {
					who = event_target:inspired_letter_target
					value >= 0
				}
			}
		}
		name = {
			text = EVTOPTB_MNM_5209_hostile_target # I will write a letter to them
			trigger = {
				reverse_opinion = {
					who = event_target:inspired_letter_target
					value < 0
				}
			}
		}

		tooltip_info = poet

		trigger = { trait = poet }

		custom_tooltip = { text = EVTOPTB_MNM_5209_TT }

		event_target:inspired_letter_target = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag
				love_letters_flag = {
					opinion = {
						name = opinion_poet_love_letters
						who = ROOT
						years = 10
					}
				}
				pen_pal_flag = {
					opinion = {
						name = opinion_poet_pen_pal
						who = ROOT
						years = 10
					}
				}
				delighted_parent_flag = {
					opinion = {
						name = opinion_poet_delighted_parent
						who = ROOT
						years = 10
					}
				}
			}

			set_character_flag = poetic_letter
			character_event = { id = MNM.5210 days = 10 }
		}
	}

	option = {
		name = EVTOPTC_MNM_5209 # I will focus on the debate
		custom_tooltip = { text = EVTOPTC_MNM_5209_TT }

		hidden_effect = { change_variable = { which = debate_score value = 1 } }
	}
}

character_event = { # inspired_letter_target recieves a letter
	id = MNM.5210
	desc = EVTDESC_MNM_5210
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	option = {
		name = EVTOPTA_MNM_5210

		if = {
			limit = { has_character_flag = poetic_flag }

			tooltip = {
				trigger_switch = {
					on_trigger = has_character_flag

					love_letters_flag = {
						opinion = {
							name = opinion_poet_love_letters
							who = ROOT
							years = 10
						}
					}

					pen_pal_flag = {
						opinion = {
							name = opinion_poet_pen_pal
							who = ROOT
							years = 10
						}
					}

					delighted_parent_flag = {
						opinion = {
							name = opinion_poet_delighted_parent
							who = ROOT
							years = 10
						}
					}
				}
			}
		}
		else = {
			tooltip = {
				trigger_switch = {
					on_trigger = has_character_flag

					love_letters_flag = {
						opinion = {
							name = opinion_love_letters
							who = ROOT
							years = 10
						}
					}

					pen_pal_flag = {
						opinion = {
							name = opinion_pen_pal
							who = ROOT
							years = 10
						}
					}

					delighted_parent_flag = {
						opinion = {
							name = opinion_delighted_parent
							who = ROOT
							years = 10
						}
					}
				}
			}
		}

		clr_character_flag = love_letters_flag
		clr_character_flag = pen_pal_flag
		clr_character_flag = delighted_parent_flag
		clr_character_flag = poetic_flag
	}
}

character_event = { # Mental break-down
	id = MNM.5211
	desc = EVTDESC_MNM_5211
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		# picks a herb...
		select_random_hermetic_ingredient_herb_effect = yes

		if = { # if no herb was available...
			limit = { has_selected_ingredient_1_trigger = no }
			select_random_hermetic_ingredient_effect = yes
		}
	}

	option = { # It's a lot of pressure, but it's worth it
		name = EVTOPTA_MNM_5211

		custom_tooltip = { text = EVTOPTA_MNM_5211_TT }

		add_trait_silently_stressed_effect = yes
	}

	option = { # I'll use my potions
		name = EVTOPTC_MNM_5211
		tooltip_info = ingredient_option_available_tt

		custom_tooltip = { text = EVTOPTA_MNM_5211_TT }

		trigger = {
			any_artifact = { has_artifact_flag = ingredient }
		}

		random = {
			chance = 50
			add_trait_stressed_effect = yes
		}

		if = {
			limit = { selected_ingredient_is_sleep_inducing_trigger = no }

			random = {
				chance = 50

				add_character_modifier = {
					name = nauseous_from_potion
					years = 1
				}
			}
		}

		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I should back down
		name = EVTOPTB_MNM_5211

		custom_tooltip = { text = EVTOPTB_MNM_5211_TT }

		hidden_effect = { change_variable = { which = debate_score value = -2 } }
	}

	after = {
		remove_selection_of_ingredients_effect = yes
	}
}

# Complain about lodgings / be homesick
character_event = {
	id = MNM.5100
	desc = EVTDESC_MNM_5100
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_5100 # My back!

		add_character_modifier = {
			name = bad_nights_sleep
			years = 1
		}

		opinion = {
			name = opinion_poor_accommodations
			who = event_target:debate_host
		}
	}

	option = {
		name = EVTOPTB_MNM_5100

		clear_delayed_event = { id = MNM.1984 }
		clear_delayed_event = { id = MNM.1985 }
		clr_character_flag = attending_grand_debate
	}

	option = {
		name = EVTOPTC_MNM_5100 # I can use these sleepless nights to get some more work done
		tooltip_info = diligent

		trigger = { trait = diligent }

		add_character_modifier = {
			name = nocturnal_studies
			years = 1
		}
	}
}

# Sabotage others
character_event = {
	id = MNM.5101
	desc = EVTDESC_MNM_5101
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		society = {
			random_society_member = {
				limit = {
					has_character_flag = attending_grand_debate
					learning >= ROOT
					NOT = { character = ROOT }
				}
				save_event_target_as = sabotage_target
			}
		}
	}

	option = { # Leave fake notes
		name = EVTOPTA_MNM_5101

		custom_tooltip = { text = EVTTOOLTIPA_MNM_5101 }

		event_target:sabotage_target = {
			set_character_flag = got_fake_note_planted
			character_event = {	id = MNM.5102 }
		}
	}

	option = { # Destroy notes
		name = EVTOPTB_MNM_5101

		custom_tooltip = { text = EVTTOOLTIPB_MNM_5101 }

		event_target:sabotage_target = {
			character_event = {	id = MNM.5103 }
		}
	}

	option = { # Leave it be
		name = EVTOPTC_MNM_5101

		if = {
			limit = { trait = deceitful }
			remove_trait = deceitful
		}
		else = {
			random = {
				chance = 35
				add_trait_partially_kind_effect = yes
			}
		}
	}
}

# Finding strange notes/Flying notes (read, or discard?)
character_event = {
	id = MNM.5102
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCA_MNM_5102
		trigger = {
			NOT = { has_character_flag = got_fake_note_planted }
		}
	}
	desc = {
		text = EVTDESCB_MNM_5102
		trigger = {
			has_character_flag = got_fake_note_planted
		}
	}

	hide_from = yes

	is_triggered_only = yes

	option = { # Take the notes and use them
		name = EVTOPTA_MNM_5102

		custom_tooltip = { text = EVTTOOLTIP_MNM_5102 }

		if = {
			limit = { has_character_flag = got_fake_note_planted }
			set_character_flag = embarrassingly_misinformed
		}

		character_event = { id = MNM.5105 days = 5 }

		ai_chance = {
			factor = 1

			trigger = {
				trigger_if = {
					limit = { has_character_flag = got_fake_note_planted }
					intrigue < 18
				}
			}
		}
	}

	option = { # Disregard the notes / I trust in my own work
		name = EVTOPTB_MNM_5102

		trigger = {
			OR = {
				NOT = { has_character_flag = got_fake_note_planted }
				intrigue < 18
			}
		}

		prestige = 25
	}

	option = { # This is clearly made up nonsense
		name = EVTOPTC_MNM_5102
		tooltip_info = intrigue

		trigger = {
			has_character_flag = got_fake_note_planted
			intrigue >= 18
		}

		prestige = 25
	}

	after = {
		if = {
			limit = { has_character_flag = got_fake_note_planted }

			clr_character_flag = got_fake_note_planted
			FROM = { character_event = { id = MNM.5106 days = 5 } }
		}
	}
}

# Someone sabotaged my notes
character_event = {
	id = MNM.5103
	desc = EVTDESC_MNM_5103
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = { # An unfortunate accident
		name = EVTOPTA_MNM_5103

		custom_tooltip = {
			text = EVTTOOLTIP_MNM_5103
			change_variable = { which = debate_score value = -2 }
		}

		random = {
			chance = 35
			add_trait_partially_patient_effect = yes
		}
	}

	option = { # She/he did that on purpose
		name = EVTOPTB_MNM_5103

		custom_tooltip = {
			text = EVTTOOLTIP_MNM_5103
			change_variable = { which = debate_score value = -2 }
		}

		add_rival = FROM

		FROM = { character_event = { id = MNM.5104 days = 5 } }
	}
}

# Notify rival
character_event = {
	id = MNM.5104
	desc = EVTDESC_MNM_5104
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_MNM_5104

		tooltip = { add_rival = FROM }
	}
}

character_event = { # Outcome of notes
	id = MNM.5105
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCA_MNM_5105
		trigger = {
			NOR = {
				has_character_flag = embarrassingly_misinformed
				has_character_flag = plagiarism_discovered
			}
		}
	}
	desc = {
		text = EVTDESCB_MNM_5105
		trigger = {
			has_character_flag = embarrassingly_misinformed
		}
	}
	desc = {
		text = EVTDESCC_MNM_5105
		trigger = {
			has_character_flag = plagiarism_discovered
		}
	}

	hide_from = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_character_flag = embarrassingly_misinformed }
			}

			random = {
				chance = 15
				set_character_flag = plagiarism_discovered
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_5105

		trigger = {
			NOR = {
				has_character_flag = embarrassingly_misinformed
				has_character_flag = plagiarism_discovered
			}
		}

		prestige = 50

		custom_tooltip = {
			text = EVTTOOLTIPA_MNM_5105
			change_variable = { which = debate_score value = 2 }
		}
	}

	option = {
		name = EVTOPTB_MNM_5105

		trigger = { has_character_flag = embarrassingly_misinformed }

		prestige = -25

		custom_tooltip = {
			text = EVTTOOLTIPB_MNM_5105
			change_variable = { which = debate_score value = -2 }
		}
	}

	option = {
		name = EVTOPTC_MNM_5105

		trigger = { has_character_flag = plagiarism_discovered }

		prestige = -25

		custom_tooltip = {
			text = EVTTOOLTIPB_MNM_5105
			change_variable = { which = debate_score value = -2 }
		}

		ai_chance = {
			factor = 1

			trigger = { diplomacy < 18 }
		}
	}

	option = {
		name = EVTOPTD_MNM_5105

		trigger = {
			has_character_flag = plagiarism_discovered
			diplomacy >= 18
		}
	}
}

character_event = { # Outcome of planting notes
	id = MNM.5106
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCA_MNM_5106
		trigger = {
			FROM = { has_character_flag = embarrassingly_misinformed }
		}
	}
	desc = {
		text = EVTDESCB_MNM_5106
		trigger = {
			NOT = {
				FROM = { has_character_flag = embarrassingly_misinformed }
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_5106

		trigger = {
			FROM = { has_character_flag = embarrassingly_misinformed }
		}

		add_character_modifier = {
			name = mischievous_deeds
			years = 2
		}
	}

	option = {
		name = EVTOPTB_MNM_5106

		trigger = {
			NOT = {
				FROM = { has_character_flag = embarrassingly_misinformed }
			}
		}
	}

	after = {
		clr_character_flag = embarrassingly_misinformed
		clr_character_flag = plagiarism_discovered
	}
}