###########################################
#                                         #
# M&M Satanists Society Events            #
#                                         #
# ID MNM.6993-MNM.7999                    #
# ID MNM.20000-MNM-20104                  #
#                                         #
###########################################

# CleanSlate: So I heard you like trigger_switches...

namespace = MNM

### JOINING & RECRUITMENT EVENTS ###

# For Recruit: Do you approve of "alternative views"?
character_event = {
	id = MNM.7001
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7001_A
		trigger = {
			NOT = { has_character_flag = being_recruited_by_the_bacchants }
		}
	}
	desc = { # Zeus doesn't deal with Salvation.
		text = EVTDESC_MNM_7001_B
		trigger = { has_character_flag = being_recruited_by_the_bacchants }
	}

	is_triggered_only = yes # devil_worshiper_recruit, mnm_devil_worshipers_decisions.txt; MNM.10011

	has_dlc = "Mystics"
	prisoner = no

	immediate = {
		save_event_target_as = satanists_recruit
	}

	fail_trigger_effect = {
		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants
	}

	# Approving of heretics
	option = {
		name = {
			text = EVTOPTA_7001 # If God didn't want us to ask questions, why did he make us curious?
			trigger = {
				NOT = { has_character_flag = being_recruited_by_the_bacchants }
			}
		}
		name = {
			text = EVTOPTA_7001_B
			trigger = { has_character_flag = being_recruited_by_the_bacchants }
		}

		custom_tooltip = { text = EVTOPTA_7001_TT }

		reverse_opinion = {
			name = opinion_agreed_with_opinion
			who = event_target:satanists_recruiter
			years = 5
		}

		set_character_flag = approves_of_satanism

		event_target:satanists_recruiter = {
			character_event = { id = MNM.7002 days = 3 }
		}

		ai_chance = {
			factor = 20

			trigger = {
				NOT = { trait = zealous }

				trigger_if = {
					limit = { controls_religion = yes }

					OR = {
						has_bad_priest_trait_trigger = yes
						trait = possessed
					}
				}
			}

			mult_modifier = {
				factor = 1.5
				trait = trusting
			}
			mult_modifier = {
				factor = 50 # likely if "possessed"
				has_opinion_modifier = {
					name = opinion_loyal_servant
					who = event_target:satanists_recruiter
				}
			}
			mult_modifier = {
				factor = 1.5
				is_dumb_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				has_bad_priest_trait_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				trait = hedonist
			}
			mult_modifier = {
				factor = 1.5
				trait = lustful
			}
			mult_modifier = {
				factor = 1.5
				trait = cynical
			}
			mult_modifier = {
				factor = 1.75
				has_character_flag = being_recruited_by_the_bacchants
				culture = roman # Decadence
			}
			mult_modifier = {
				factor = 1.5
				has_character_flag = being_recruited_by_the_bacchants
				is_close_relative = event_target:satanists_recruiter # Decadence
			}
			mult_modifier = {
				factor = 0.2

				trigger_if = {
					limit = { has_character_flag = being_recruited_by_the_satanists }

					NOR = {
						true_religion_group = christian
						true_religion_group = muslim
						true_religion_group = jewish_group
						true_religion_group = zoroastrian_group
					}
				}
				trigger_else_if = {
					limit = { has_character_flag = being_recruited_by_the_trollcrafters }
					true_norse_religion_trigger = no
				}
				trigger_else_if = {
					limit = { has_character_flag = being_recruited_by_the_cult_of_kali }
					NOT = { true_religion = hindu }
				}
				trigger_else_if = {
					limit = { has_character_flag = being_recruited_by_the_cold_ones }
					true_baltic_religion_trigger = no
					true_slavic_religion_trigger = no
				}
				trigger_else_if = {
					limit = { has_character_flag = being_recruited_by_the_plaguebringers }
					true_tengri_religion_trigger = no
				}
				trigger_else_if = {
					limit = { has_character_flag = being_recruited_by_the_vodouns }
					true_west_african_religion_trigger = no
				}
				trigger_else_if = {
					limit = { has_character_flag = being_recruited_by_the_bacchants }
					true_hellenic_religion_trigger = no
				}
			}
		}
	}

	# Disapproving of heretics
	option = {
		name = EVTOPTB_7001

		custom_tooltip = { text = EVTOPTB_7001_TT }

		event_target:satanists_recruiter = {
			show_scope_change = no

			character_event = { id = MNM.7002 days = 15 }

			opinion = {
				name = opinion_disagreed_with_opinion
				who = ROOT
				years = 5
			}
		}

		set_character_flag = disapproves_of_satanism

		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants

		ai_chance = {
			factor = 80

			mult_modifier = {
				factor = 1.5
				has_pious_trait_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				has_crusade_trait_trigger = yes
			}
		}
	}
}

# For Recruit: Event notifying recruit that "Something must've gone wrong" (in case recruiter dies)
character_event = {
	id = MNM.6995
	picture = GFX_evt_state_diplomacy
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESCA_MNM_6995
		trigger = { NOT = { has_character_flag = dw_recruitment_end_unable } }
	}
	desc = {
		text = EVTDESCB_MNM_6995
		picture = GFX_evt_into_the_dungeon
		trigger = { has_character_flag = dw_recruitment_end_unable }
	}

	is_triggered_only = yes
	show_root = yes

	option = {
		name = {
			text = EVTOPTA_MNM_6995
			trigger = { NOT = { has_character_flag = dw_recruitment_end_unable } }
		}
		name = {
			text = EVTOPTB_MNM_6995
			trigger = { has_character_flag = dw_recruitment_end_unable }
		}

		custom_tooltip = { text = EVTTOOLTIP_MNM_6995 }
		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants
		clr_character_flag = dw_recruitment_end_unable
	}
}

# For Recruiter: consider the target's reaction, continue or abandon endeavor
character_event = {
	id = MNM.7002
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7002_A
		trigger = {
			NOT = { society_member_of = the_bacchants }
			event_target:satanists_recruit = { has_character_flag = approves_of_satanism } # They seemed kinda fine with it
		}
	}
	desc = {
		text = EVTDESC_MNM_7002_B
		trigger = {
			NOT = { society_member_of = the_bacchants }
			event_target:satanists_recruit = { has_character_flag = disapproves_of_satanism } # They seemed kinda hesitant to the whole thing
		}
	}
	desc = {
		text = EVTDESC_MNM_7002_C
		trigger = {
			society_member_of = the_bacchants
			event_target:satanists_recruit = { has_character_flag = approves_of_satanism } } # They seemed kinda fine with it
	}
	desc = {
		text = EVTDESC_MNM_7002_D
		trigger = {
			society_member_of = the_bacchants
			event_target:satanists_recruit = { has_character_flag = disapproves_of_satanism } } # They seemed kinda hesitant to the whole thing
	}

	is_triggered_only = yes

	prisoner = no

	trigger = {
		is_devil_worshiper_trigger = yes

		event_target:satanists_recruit = {
			prisoner = no
		}
	}

	fail_trigger_effect = {
		event_target:satanists_recruit = {
			if = {
				limit = {
					NOT = { has_character_flag = disapproves_of_satanism }
				}

				if = {
					limit = { prisoner = yes }
					set_character_flag = dw_recruitment_end_unable
				}

				character_event = { id = MNM.6995 } # notify broken chain
			}

			clr_character_flag = approves_of_satanism
			clr_character_flag = disapproves_of_satanism
		}
	}

	# Continue recruitment-attempt
	option = {
		name = EVTOPTA_7002

		trigger = { event_target:satanists_recruit = { has_character_flag = approves_of_satanism } }

		custom_tooltip = { text = EVTOPTA_7002_TT }

		hidden_effect = {
			event_target:satanists_recruit = {
				character_event = { id = MNM.7003 }
				clr_character_flag = approves_of_satanism
			}
		}
	}

	# Too risky - Recruitment attempt ends
	option = {
		name = EVTOPTB_7002

		trigger = { event_target:satanists_recruit = { has_character_flag = approves_of_satanism } }

		custom_tooltip = { text = EVTOPTB_7002_TT }

		hidden_effect = {
			event_target:satanists_recruit = { clr_character_flag = approves_of_satanism }
		}

		ai_chance = { factor = 0 }
	}

	# The recruit refuses to question their god - Recruitment attempt ends
	option = {
		name = EVTOPTC_7002

		trigger = { event_target:satanists_recruit = { has_character_flag = disapproves_of_satanism } }

		custom_tooltip = { text = EVTOPTB_7002_TT }

		hidden_effect = {
			event_target:satanists_recruit = { clr_character_flag = disapproves_of_satanism }
		}
	}
}

# For Recruit: Recruiter continues offering more radical ideas, gives strange idol
character_event = {
	id = MNM.7003
	desc = EVTDESC_MNM_7003_A
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	# You encourage the recruiter
	option = {
		name = EVTOPTA_7003

		custom_tooltip = { text = EVTOPTA_7003_TT }

		set_character_flag = willing_to_join

		event_target:satanists_recruiter = {
			show_scope_change = no

			character_event = { id = MNM.7004 }

			opinion = {
				name = opinion_open_minded
				who = ROOT
				years = 5
			}
		}

		ai_chance = {
			factor = 50

			trigger = {
				trigger_if = {
					limit = { controls_religion = yes }

					OR = {
						has_bad_priest_trait_trigger = yes
						trait = possessed
					}
				}
			}

			mult_modifier = {
				factor = 1.5
				trait = ambitious
			}
			mult_modifier = {
				factor = 1.1
				has_education_intrigue_trigger = yes
			}
			mult_modifier = {
				factor = 1.1
				has_lifestyle_intrigue_trigger = yes
			}
			mult_modifier = {
				factor = 1.1
				trait = trusting
			}
			mult_modifier = {
				factor = 1.5
				is_dumb_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				has_bad_priest_trait_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				trait = hedonist
			}
			mult_modifier = {
				factor = 1.5
				trait = lustful
			}
			mult_modifier = {
				factor = 1.5
				trait = cynical
			}
			mult_modifier = {
				factor = 1.5
				event_target:satanists_recruiter = { diplomacy >= 12 }
			}
			mult_modifier = {
				factor = 1.5
				event_target:satanists_recruiter = { intrigue >= 12 }
			}
			mult_modifier = {
				factor = 1.1
				event_target:satanists_recruiter = { has_fair_trait_trigger = yes }
			}
			mult_modifier = {
				factor = 1.1
				event_target:satanists_recruiter = { has_attractive_trait_trigger = yes }
			}
			mult_modifier = {
				factor = 1.1
				event_target:satanists_recruiter = { is_attractive_trigger = yes }
			}
		}
	}

	# You strongly discourage the recruiter
	option = {
		name = EVTOPTB_7003

		custom_tooltip = { text = EVTOPTB_7003_TT }

		reverse_opinion = {
			name = opinion_narrow_minded
			who = event_target:satanists_recruiter
			years = 5
		}

		set_character_flag = unwilling_to_join

		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_bacchants
		clr_character_flag = being_recruited_by_the_vodouns

		event_target:satanists_recruiter = {
			character_event = { id = MNM.7004 }
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = craven
			}
			mult_modifier = {
				factor = 1.5
				trait = content
			}
			mult_modifier = {
				factor = 1.5
				event_target:satanists_recruiter = { trait = ugly }
			}
			mult_modifier = {
				factor = 1.5
				event_target:satanists_recruiter = { has_unattractive_trait_trigger = yes }
			}
			mult_modifier = {
				factor = 1.5
				event_target:satanists_recruiter = { is_unattractive_trigger = yes }
			}
		}
	}
}

# For Recruiter: Can, and will, you make the offer?
character_event = {
	id = MNM.7004
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7004_A
		trigger = { event_target:satanists_recruit = { has_character_flag = willing_to_join } }
	}
	desc = {
		text = EVTDESC_MNM_7004_B
		trigger = { event_target:satanists_recruit = { has_character_flag = unwilling_to_join } }
	}

	is_triggered_only = yes

	# Pose the question (only available if recruit is willing to join)
	option = {
		name = EVTOPTA_7004

		trigger = { event_target:satanists_recruit = { has_character_flag = willing_to_join } }

		custom_tooltip = { text = EVTOPTA_7004_TT }

		hidden_effect = {
			event_target:satanists_recruit = {
				character_event = { id = MNM.7005 days = 1 }
				clr_character_flag = willing_to_join
			}
		}
	}

	# Too risky, volontary end (only available if recruit is willing to join)
	option = {
		name = EVTOPTB_7004

		trigger = { event_target:satanists_recruit = { has_character_flag = willing_to_join } }

		custom_tooltip = { text = EVTOPTB_7002_TT }

		hidden_effect = {
			event_target:satanists_recruit = { clr_character_flag = willing_to_join }
		}

		ai_chance = { factor = 0 }
	}

	# The recruit refuses to see it my way - Recruitment attempt ends
	option = {
		name = EVTOPTC_7004

		trigger = { event_target:satanists_recruit = { has_character_flag = unwilling_to_join } }

		custom_tooltip = { text = EVTOPTB_7002_TT }

		hidden_effect = {
			event_target:satanists_recruit = { clr_character_flag = unwilling_to_join }
		}
	}
}

# For Recruit: Join Satanists? (this is where it is more or less confirmed that this is some devil-worshiping going on)
character_event = {
	id = MNM.7005
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7005
		trigger = { event_target:satanists_recruiter = { society_member_of = the_satanists } } # Recruiter reveals symbol on their arm
	}
	desc = {
		text = EVTDESC_MNM_7005_ALT
		trigger = {
			event_target:satanists_recruiter = {
				NOR = {
					society_member_of = the_satanists
					society_member_of = the_bacchants
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7005_ALT2
		trigger = { event_target:satanists_recruiter = { society_member_of = the_bacchants } }
	}

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_list = {
				1 = {
					trigger = { any_lover = { is_ill = yes } }
					set_character_flag = has_ill_lover_loc
				}

				1 = {
					trigger = { any_spouse = { is_ill = yes } }
					set_character_flag = has_ill_spouse_loc
				}

				1 = {
					trigger = { any_child = { is_ill = yes } }
					set_character_flag = has_ill_child_loc
				}

				1 = {
					trigger = { wealth < 0 }
					set_character_flag = has_money_troubles_loc
				}

				1 = {
					trigger = { is_ill = yes }
					set_character_flag = has_some_illness_loc
				}

				1 = {
					trigger = { war = yes }
					set_character_flag = has_need_of_winning_battles_loc
				}

				1 = {
					trigger = { any_rival = { always = yes } }
					set_character_flag = has_a_rival_loc
				}

				# CleanSlate: no loc in GetDWReasonToJoin for the below
				# 1 = {
				#	trigger = {
				#		OR = {
				#			trait = weak
				#			trait = frail
				#			trait = dwarf
				#			trait = hunchback
				#		}
				#	}
				#	set_character_flag = is_weak_loc
				# }
				#
				# 1 = {
				#	trigger = {
				#		OR = {
				#			trait = imbecile
				#			trait = inbred
				#			trait = slow
				#		}
				#	}
				#	set_character_flag = is_dumb_loc
				# }
			}
		}
	}

	# Yes - can you help me [GetDWReasonToJoin]?
	option = {
		name = EVTOPTA_7005

		custom_tooltip = { text = EVTOPTA_7005_TT }

		event_target:satanists_recruiter = {
			character_event = { id = MNM.7007 days = 5 }
		}

	}

	# No - this is blasphemy, get out of my sight
	option = {
		name = EVTOPTB_7005
		custom_tooltip = { text = EVTOPTB_7005_TT }

		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants

		event_target:satanists_recruiter = {
			character_event = { id = MNM.7006 days = 1 }
		}

		ai_chance = { factor = 0 }
	}
}

# For Recruiter: Recruit said no
character_event = {
	id = MNM.7006
	desc = EVTDESC_MNM_7006
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	ai = no

	option = { # The recruit refuses to see it my way - Recruitment attempt ends
		name = EVTOPTA_7006

		custom_tooltip = { text = EVTOPTB_7002_TT }
	}
}

# For Recruiter: Recruit said yes
character_event = {
	id = MNM.7007
	desc = EVTDESC_MNM_7007
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	prisoner = no

	trigger = {
		is_devil_worshiper_trigger = yes

		event_target:satanists_recruit = {
			prisoner = no
		}
	}

	fail_trigger_effect = {
		event_target:satanists_recruit = {
			if = {
				limit = { prisoner = yes }
				set_character_flag = dw_recruitment_end_unable
			}

			character_event = { id = MNM.6995 } # notify broken chain
		}
	}

	option = {
		name = EVTOPTA_7007
		custom_tooltip = { text = EVTOPTA_7007_TT }

		event_target:satanists_recruit = { character_event = { id = MNM.7008 } }
	}
}

# For Recruit: Confirmation
character_event = {
	id = MNM.7008
	desc = EVTDESC_MNM_7008
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_7008

		custom_tooltip = { text = EVTOPTA_7008_TT }

		character_event = {
			id = MNM.7009
			days = 14
			random = 21
		}
	}
}

# For Recruit: Joining begins (seek out books and knowledge on the occult)
character_event = {
	id = MNM.7009
	picture = GFX_evt_ritual_scroll
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7009_A
		trigger = { event_target:satanists_recruiter = { society_member_of = the_satanists } }
	}
	desc = {
		text = EVTDESC_MNM_7009_ALT
		trigger = { event_target:satanists_recruiter = { NOT = { society_member_of = the_satanists } } }
	}

	hide_from = yes
	is_triggered_only = yes

	prisoner = no

	trigger = {
		event_target:satanists_recruiter = {
			is_devil_worshiper_trigger = yes
			prisoner = no
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { prisoner = yes }
			set_character_flag = dw_recruitment_end_unable
		}

		character_event = { id = MNM.6995 } # notify broken chain
	}

	# I have been blinded by convention
	option = {
		name = EVTOPTA_7009

		custom_tooltip = { text = EVTOPTA_7009_TT }

		remove_trait_silently_zealous_effect = yes
	}

	# I can't believe I have been so gullible!
	option = {
		name = EVTOPTB_7009
		tooltip_info = trusting

		trigger = { trait = trusting }

		custom_tooltip = { text = EVTOPTA_7009_TT }

		remove_trait_silently_trusting_effect = yes
	}

	# I am beginning to feel that I have been missing out...
	option = {
		name = EVTOPTC_7009
		tooltip_info = chaste

		trigger = { trait = chaste }

		custom_tooltip = { text = EVTOPTA_7009_TT }

		remove_trait_silently_chaste_effect = yes
	}

	# I am beginning to feel that I have been missing out...
	option = {
		name = EVTOPTD_7009
		tooltip_info = charitable

		trigger = { trait = charitable }

		custom_tooltip = { text = EVTOPTA_7009_TT }

		remove_trait_silently_charitable_effect = yes
	}

	# Why put the needs of others before our own?
	option = {
		name = EVTOPTD_7009

		trigger = {
			NOR = {
				trait = charitable
				trait = greedy
			}
		}

		custom_tooltip = { text = EVTOPTA_7009_TT }

		add_trait_silently_greedy_effect = yes
	}

	after = {
		character_event = {
			id = MNM.7010
			days = 20
			random = 15
		}
	}
}

# For Recruit: Seal it with blood (loyalty to grand master)
character_event = {
	id = MNM.7010
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7010_A
		trigger = { event_target:satanists_recruiter = { society_member_of = the_satanists } } # Recruiter reveals pentagram on their arm
	}
	desc = {
		text = EVTDESC_MNM_7010_ALT
		trigger = { event_target:satanists_recruiter = { NOT = { society_member_of = the_satanists } } }
	}

	hide_from = yes
	is_triggered_only = yes

	prisoner = no

	trigger = {
		event_target:satanists_recruiter = {
			is_devil_worshiper_trigger = yes
			prisoner = no
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { prisoner = yes }
			set_character_flag = dw_recruitment_end_unable
		}

		character_event = { id = MNM.6995 } # notify broken chain
	}

	# Yes
	option = {
		name = EVTOPTA_7010

		if = {
			limit = { event_target:satanists_recruiter = { society_member_of = the_satanists } }
			custom_tooltip = { text = EVTOPTA_7010_TT_1 }
		}
		else = {
			custom_tooltip = { text = EVTOPTA_7010_TT_1_ALT }
		}

		letter_event = { # Inductor will get in contact with you
			id = MNM.7014
			days = 35
			random = 20
		}

		add_character_modifier = {
			name = bandaged_arm
			days = 65
		}
	}

	# No
	option = {
		name = EVTOPTB_7010

		custom_tooltip = { text = EVTOPTB_7010_TT }

		character_event = { # Fail
			id = MNM.7020
			days = 60
			random = 20
		}

		hidden_effect = {
			if = {
				limit = { event_target:satanists_recruiter = { always = yes } }

				event_target:satanists_recruiter = {
					set_character_flag = recruitment_fail
					letter_event = { id = MNM.7022 } # Tell original recruiter what happened
				}
			}
		}

		ai_chance = { factor = 0 }
	}
}

# For Recruit: "Await the messenger" a letter reads
letter_event = {
	id = MNM.7014
	desc = EVTDESC_MNM_7014
	border = GFX_event_letter_frame_intrigue
	portrait = event_target:satanists_recruiter

	is_triggered_only = yes

	prisoner = no

	trigger = {
		event_target:satanists_recruiter = {
			is_devil_worshiper_trigger = yes
			prisoner = no
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { prisoner = yes }
			set_character_flag = dw_recruitment_end_unable
		}

		character_event = { id = MNM.6995 } # notify broken chain
	}

	option = {
		name = EVTOPTA_7014

		custom_tooltip = { text = EVTOPTA_7014_TT }

		character_event = { id = MNM.7015 days = 14 }
	}
}

# For Recruit: Have met an intriguing person at court
character_event = {
	id = MNM.7015
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanists_inductor

	desc = {
		text = EVTDESC_MNM_7015
		trigger = { event_target:satanists_inductor = { society_member_of = the_satanists } }
	}
	desc = {
		text = EVTDESC_MNM_7015_ALT
		trigger = { event_target:satanists_inductor = { NOT = { society_member_of = the_satanists } } }
	}

	is_triggered_only = yes

	prisoner = no

	fail_trigger_effect = {
		set_character_flag = dw_recruitment_end_unable
		character_event = { id = MNM.6993 } # notify broken chain
	}

	immediate = {
		hidden_effect = {
			random_society_member = {
				limit = {
					is_devil_worshiper_trigger = yes
					
					trigger_if = {
						limit = { society_member_of = the_satanists }
						ROOT = { has_character_flag = being_recruited_by_the_satanists }
					}
					trigger_else_if = {
						limit = { society_member_of = the_trollcrafters }
						ROOT = { has_character_flag = being_recruited_by_the_trollcrafters }
					}
					trigger_else_if = {
						limit = { society_member_of = the_cult_of_kali }
						ROOT = { has_character_flag = being_recruited_by_the_cult_of_kali }
					}
					trigger_else_if = {
						limit = { society_member_of = the_cold_ones }
						ROOT = { has_character_flag = being_recruited_by_the_cold_ones }
					}
					trigger_else_if = {
						limit = { society_member_of = the_plaguebringers }
						ROOT = { has_character_flag = being_recruited_by_the_plaguebringers }
					}
					trigger_else_if = {
						limit = { society_member_of = the_bacchants }
						ROOT = { has_character_flag = being_recruited_by_the_bacchants }
					}
					trigger_else_if = {
						limit = { society_member_of = the_vodouns }
						ROOT = { has_character_flag = being_recruited_by_the_vodouns }
					}

					is_attractive_trigger = yes
					is_incapable = no
					prisoner = no
					root_attraction_trigger = yes
				}

				save_event_target_as = satanists_inductor
			}

			if = {
				limit = {
					NOT = { event_target:satanists_inductor = { always = yes } }
				}

				if = { # back up if there is no eligble society member
					limit = { prefers_men_trigger = yes }
					create_character = {
						random_traits = yes
						dynasty = none
						religion = ROOT
						culture = ROOT
						female = no
						age = 20
						historical = yes

						attributes = {
							intrigue = 5
						}
					}
				}
				else = {
					create_character = {
						random_traits = yes
						dynasty = none
						religion = ROOT
						culture = ROOT
						female = yes
						age = 20
						historical = yes

						attributes = {
							intrigue = 5
						}
					}
				}
				new_character = {
					save_event_target_as = satanists_inductor

					clear_education_trait = yes
					remove_trait = ugly
					remove_trait = hunchback
					remove_trait = dwarf
					remove_trait = chaste
					add_trait = elusive_shadow
					add_trait = lustful
					add_trait = attractive

					ROOT = {
						trigger_switch = {
							on_trigger = has_character_flag

							being_recruited_by_the_satanists      = { PREV = { join_society = the_satanists } }
							being_recruited_by_the_trollcrafters  = { PREV = { join_society = the_trollcrafters } }
							being_recruited_by_the_cult_of_kali   = { PREV = { join_society = the_cult_of_kali } }
							being_recruited_by_the_cold_ones      = { PREV = { join_society = the_cold_ones } }
							being_recruited_by_the_plaguebringers = { PREV = { join_society = the_plaguebringers } }
							being_recruited_by_the_vodouns        = { PREV = { join_society = the_vodouns } }
							being_recruited_by_the_bacchants      = { PREV = { join_society = the_bacchants } }
						}
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTA_7015

		character_event = { id = MNM.7016 days = 3 }
	}
}

# For Recruit: Unable to continue induction notification
character_event = {
	id = MNM.6993
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanists_inductor

	desc = {
		text = EVTDESCA_MNM_6993
		trigger = { NOT = { has_character_flag = dw_recruitment_end_unable } }
	}
	desc = {
		text = EVTDESCB_MNM_6993
		picture = GFX_evt_into_the_dungeon
		trigger = { has_character_flag = dw_recruitment_end_unable }
	}

	is_triggered_only = yes
	# show_root = yes

	option = {
		name = {
			text = EVTOPTA_MNM_6993
			trigger = { NOT = { has_character_flag = dw_recruitment_end_unable } }
		}
		name = {
			text = EVTOPTB_MNM_6993
			trigger = { has_character_flag = dw_recruitment_end_unable }
		}

		custom_tooltip = { text = EVTTOOLTIP_MNM_6993 }

		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants
		clr_character_flag = dw_recruitment_end_unable
	}
}

# Meet the Seducer/Seductress who then leads you away
character_event = {
	id = MNM.7016
	desc = EVTDESC_MNM_7016
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanists_inductor

	is_triggered_only = yes

	prisoner = no

	trigger = {
		event_target:satanists_inductor = {
			is_alive = yes
			prisoner = no
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { prisoner = yes }
			set_character_flag = dw_recruitment_end_unable
		}

		character_event = { id = MNM.6993 } # notify broken chain
	}

	option = {
		name = EVTOPTA_7016

		custom_tooltip = { text = EVTOPTA_7016_TT }

		character_event = { id = MNM.7017 days = 5 }
	}
}

# Prove your ambition
character_event = {
	id = MNM.7017
	desc = EVTDESC_MNM_7017_A
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanists_inductor

	is_triggered_only = yes

	prisoner = no

	trigger = {
		event_target:satanists_inductor = {
			is_alive = yes
			prisoner = no
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { prisoner = yes }
			set_character_flag = dw_recruitment_end_unable
		}

		character_event = { id = MNM.6993 } # notify broken chain
	}

	# Anything for the coven and the power you offer
	option = {
		name = EVTOPTA_7017

		custom_tooltip = { text = EVTOPTA_7017_TT }

		character_event = { id = MNM.7018 days = 1 }
	}

	# I... I can't do this!
	option = {
		name = {
			text = EVTOPTB_7017
			trigger = {
				OR = {
					is_married = no
					is_married = event_target:satanists_inductor
				}
			}
		}
		name = {
			text = EVTOPTC_7017 # I am married! (and not to the inductor)
			trigger = {
				is_married = yes
				NOT = { is_married = event_target:satanists_inductor }
			}
		}
		custom_tooltip = { text = EVTOPTB_7017_TT }

		hidden_effect = {
			random_list = {
				# Getaway
				33 = {
					set_character_flag = escape_successful

					mult_modifier = {
						factor = 1.4
						attribute_diff = { character = event_target:satanists_inductor attribute = intrigue value >= 2 }
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = { character = event_target:satanists_inductor attribute = intrigue value >= 4 }
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = { character = event_target:satanists_inductor attribute = intrigue value >= 6 }
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = { character = event_target:satanists_inductor value >= 10 }
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = { character = event_target:satanists_inductor value >= 20 }
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = { character = event_target:satanists_inductor value >= 30 }
					}
				}

				# Injured
				33 = { set_character_flag = escape_injured }

				# Death
				33 = {
					set_character_flag = escape_death

					mult_modifier = {
						factor = 1.4
						attribute_diff = { character = event_target:satanists_inductor attribute = intrigue value < -2 }
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = { character = event_target:satanists_inductor attribute = intrigue value < -4 }
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = { character = event_target:satanists_inductor attribute = intrigue value < -6 }
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = { character = event_target:satanists_inductor value < -10 }
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = { character = event_target:satanists_inductor value < -20 }
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = { character = event_target:satanists_inductor value < -30 }
					}
				}
			}
		}

		character_event = { id = MNM.7019 days = 1 }

		ai_chance = { factor = 0 }
	}
}

# You are a member! - The inductor sleeping soundly
character_event = {
	id = MNM.7018
	desc = EVTDESC_MNM_7018
	picture = GFX_evt_dark_love
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanists_inductor

	is_triggered_only = yes

	prisoner = no

	trigger = {
		event_target:satanists_inductor = {
			is_alive = yes
			prisoner = no
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { prisoner = yes }
			set_character_flag = dw_recruitment_end_unable
		}

		character_event = { id = MNM.6993 } # notify broken chain
	}

	immediate = {
		# If original recruiter is still around, send word of success
		hidden_effect = {
			if = {
				limit = { event_target:satanists_recruiter = { is_alive = yes } }

				event_target:satanists_recruiter = {
					set_character_flag = recruitment_success
					letter_event = { id = MNM.7022 days = 5 }
				}
			}
		}
	}

	option = {
		name = EVTOPTA_7018 # I wish you'd found me sooner

		opinion = {
			name = opinion_budding_romance
			who = event_target:satanists_inductor
		}

		reverse_opinion = {
			name = opinion_budding_romance
			who = event_target:satanists_inductor
		}
	}

	option = {
		name = EVTOPTB_7018 # this was a necessary evil

		reverse_opinion = {
			name = opinion_very_disappointed
			who = event_target:satanists_inductor
		}
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			being_recruited_by_the_satanists      = { join_society = the_satanists }
			being_recruited_by_the_trollcrafters  = { join_society = the_trollcrafters }
			being_recruited_by_the_cult_of_kali   = { join_society = the_cult_of_kali }
			being_recruited_by_the_cold_ones      = { join_society = the_cold_ones }
			being_recruited_by_the_plaguebringers = { join_society = the_plaguebringers }
			being_recruited_by_the_vodouns        = { join_society = the_vodouns }
			being_recruited_by_the_bacchants      = { join_society = the_bacchants }
		}

		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants
	}
}

# You flee
character_event = {
	id = MNM.7019
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7019_A
		trigger = { has_character_flag = escape_successful }
	}
	desc = {
		text = EVTDESC_MNM_7019_B
		trigger = { has_character_flag = escape_injured }
	}
	desc = {
		text = EVTDESC_MNM_7019_C
		trigger = { has_character_flag = escape_death }
	}

	is_triggered_only = yes

	prisoner = no

	trigger = {
		event_target:satanists_inductor = {
			is_alive = yes
			prisoner = no
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { prisoner = yes }
			set_character_flag = dw_recruitment_end_unable
		}

		character_event = { id = MNM.6993 } # notify broken chain
		clr_character_flag = escape_successful
		clr_character_flag = escape_injured
		clr_character_flag = escape_death
	}

	immediate = {
		# If original recruiter is still around, find Grand Master and have them send word of failure to that original recruiter
		hidden_effect = {
			if = {
				limit = { event_target:satanists_recruiter = { always = yes } }

				event_target:satanists_recruiter = {
					set_character_flag = recruitment_fail
					letter_event = { id = MNM.7022 days = 5 }
				}
			}
		}

		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants
	}

	# Escape successfully
	option = {
		name = EVTOPTA_7019

		trigger = { has_character_flag = escape_successful }

		custom_tooltip = { text = EVTOPTA_7019_TT }

		clr_character_flag = escape_successful
	}

	# Escaped but got injured
	option = {
		name = EVTOPTB_7019

		trigger = { has_character_flag = escape_injured }

		custom_tooltip = { text = EVTOPTB_7019_TT }

		clr_character_flag = escape_injured
		add_maimed_trait_effect = yes
	}

	# Escaped but died
	option = {
		name = EVTOPTC_7019

		trigger = { has_character_flag = escape_death }

		custom_tooltip = { text = EVTOPTC_7019_TT }

		death = {
			death_reason = death_murder_unknown
			killer = FROM
		}
	}
}

# Opt out failstate
character_event = {
	id = MNM.7020
	desc = EVTDESC_MNM_7020
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_7020

		custom_tooltip = { text = EVTOPTA_7020_TT }

		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants
	}
}

# Outcome of recruitment for the original recruiter (if there is one)
letter_event = {
	id = MNM.7022
	border = GFX_event_letter_frame_intrigue
	portrait = event_target:grand_master

	desc = {
		text = EVTDESC_MNM_7022_A
		trigger = { has_character_flag = recruitment_success }
	}
	desc = {
		text = EVTDESC_MNM_7022_B
		trigger = { has_character_flag = recruitment_fail }
	}

	is_triggered_only = yes

	trigger = { is_devil_worshiper_trigger = yes }

	immediate = {
		society = {
			leader = { save_event_target_as = grand_master }
		}
	}

	option = {
		name = EXCELLENT

		trigger = { has_character_flag = recruitment_success }

		add_society_currency_medium_effect = yes
		clr_character_flag = recruitment_success
	}

	option = {
		name = CURSES

		trigger = { has_character_flag = recruitment_fail }

		clr_character_flag = recruitment_fail
	}
}

# Joining event in case inductor(s) died
# Fired on a one year delay from the recruitment decision, or if the assassins_inductor dies during the event chain
letter_event = {
	id = MNM.7030
	border = GFX_event_letter_frame_intrigue
	portrait = event_target:grand_master

	desc = {
		text = EVTDESC_MNM_7030_A
		trigger = { NOT = { event_target:grand_master = { society_member_of = the_assassins } } }
	}
	desc = {
		text = EVTDESC_MNM_7030_B
		trigger = { event_target:grand_master = { society_member_of = the_assassins } }
	}

	is_triggered_only = yes

	is_in_society = no

	trigger = {
		OR = {
			has_character_flag = being_recruited_by_the_satanists
			has_character_flag = being_recruited_by_the_trollcrafters
			has_character_flag = being_recruited_by_the_cult_of_kali
			has_character_flag = being_recruited_by_the_cold_ones
			has_character_flag = being_recruited_by_the_plaguebringers
			has_character_flag = being_recruited_by_the_vodouns
			has_character_flag = being_recruited_by_the_bacchants
			has_character_flag = assassins_attempted_recruitment
		}
	}

	fail_trigger_effect = {
		# Assassins
		clr_character_flag = ongoing_recruitment
		clr_character_flag = approves_of_shia
		clr_character_flag = disapproves_of_shia
		clr_character_flag = willing_to_join
		clr_character_flag = unwilling_to_join
		clr_character_flag = escape_successful
		clr_character_flag = escape_injured
		clr_character_flag = escape_death
		clr_character_flag = escape_bribe

		# Devil Worshipers
		clr_character_flag = approves_of_satanism
		clr_character_flag = disapproves_of_satanism
		clr_character_flag = has_ill_lover_loc
		clr_character_flag = has_ill_spouse_loc
		clr_character_flag = has_ill_child_loc
		clr_character_flag = has_money_troubles_loc
		clr_character_flag = has_some_illness_loc
		clr_character_flag = has_need_of_winning_battles_loc
		clr_character_flag = has_a_rival_loc
		# clr_character_flag = is_weak_loc
		# clr_character_flag = is_dumb_loc
	}

	immediate = {
		trigger_switch = {
			on_trigger = has_character_flag

			being_recruited_by_the_satanists = {
				the_satanists = {
					leader = { save_event_target_as = grand_master }
				}
			}
			being_recruited_by_the_trollcrafters = {
				the_trollcrafters = {
					leader = { save_event_target_as = grand_master }
				}
			}
			being_recruited_by_the_cult_of_kali = {
				the_cult_of_kali = {
					leader = { save_event_target_as = grand_master }
				}
			}
			being_recruited_by_the_cold_ones = {
				the_cold_ones = {
					leader = { save_event_target_as = grand_master }
				}
			}
			being_recruited_by_the_plaguebringers = {
				the_plaguebringers = {
					leader = { save_event_target_as = grand_master }
				}
			}
			being_recruited_by_the_vodouns = {
				the_vodouns = {
					leader = { save_event_target_as = grand_master }
				}
			}
			being_recruited_by_the_bacchants = {
				the_bacchants = {
					leader = { save_event_target_as = grand_master }
				}
			}
			assassins_attempted_recruitment = {
				the_assassins = {
					leader = { save_event_target_as = grand_master }
				}
			}
		}
	}

	option = { # I will join
		name = {
			text = EVTOPTA_7030
			trigger = { NOT = { event_target:grand_master = { society_member_of = the_assassins } } }
		}
		name = {
			text = EVTOPTA_7030_assassin
			trigger = { event_target:grand_master = { society_member_of = the_assassins } }
		}

		trigger_switch = {
			on_trigger = has_character_flag

			being_recruited_by_the_satanists      = { join_society = the_satanists }
			being_recruited_by_the_trollcrafters  = { join_society = the_trollcrafters }
			being_recruited_by_the_cult_of_kali   = { join_society = the_cult_of_kali }
			being_recruited_by_the_cold_ones      = { join_society = the_cold_ones }
			being_recruited_by_the_plaguebringers = { join_society = the_plaguebringers }
			being_recruited_by_the_vodouns        = { join_society = the_vodouns }
			being_recruited_by_the_bacchants      = { join_society = the_bacchants }
			assassins_attempted_recruitment       = { join_society = the_assassins }
		}
	}

	option = {
		name = EVTOPTB_7030 # Changed my mind

		reverse_opinion = {
			name = opinion_very_disappointed
			who = event_target:grand_master
		}

		ai_chance = { factor = 0 }
	}

	after = {
		clr_character_flag = being_recruited_by_the_satanists
		clr_character_flag = being_recruited_by_the_trollcrafters
		clr_character_flag = being_recruited_by_the_cult_of_kali
		clr_character_flag = being_recruited_by_the_cold_ones
		clr_character_flag = being_recruited_by_the_plaguebringers
		clr_character_flag = being_recruited_by_the_vodouns
		clr_character_flag = being_recruited_by_the_bacchants
		clr_character_flag = assassins_attempted_recruitment

		# Assassins
		clr_character_flag = ongoing_recruitment
		clr_character_flag = approves_of_shia
		clr_character_flag = disapproves_of_shia
		clr_character_flag = willing_to_join
		clr_character_flag = unwilling_to_join
		clr_character_flag = escape_successful
		clr_character_flag = escape_injured
		clr_character_flag = escape_death
		clr_character_flag = escape_bribe

		# Devil Worshipers
		clr_character_flag = approves_of_satanism
		clr_character_flag = disapproves_of_satanism
		clr_character_flag = has_ill_lover_loc
		clr_character_flag = has_ill_spouse_loc
		clr_character_flag = has_ill_child_loc
		clr_character_flag = has_money_troubles_loc
		clr_character_flag = has_some_illness_loc
		clr_character_flag = has_need_of_winning_battles_loc
		clr_character_flag = has_a_rival_loc
		# clr_character_flag = is_weak_loc
		# clr_character_flag = is_dumb_loc
	}
}

### minor/major soul corruption effect
character_event = {
	id = MNM.7000

	hide_window = yes
	is_triggered_only = yes # on_society_bi_yearly_pulse

	has_dlc = "Mystics"

	trigger = {
		is_devil_worshiper_trigger = yes
		days_in_society > 1095
	}

	immediate = {
		random_list = { # randomizes between big or small effect, both containing a chance of nothing happening
			80 = { minor_soul_corruption_effect = yes }

			20 = {
				major_soul_corruption_effect = yes

				mult_modifier = {
					factor = 1.1
					check_variable = { which = visibility_value value >= 10 }
				}
				mult_modifier = {
					factor = 1.1
					check_variable = { which = visibility_value value >= 15 }
				}
				mult_modifier = {
					factor = 1.1
					check_variable = { which = visibility_value value >= 20 }
				}
				mult_modifier = {
					factor = 1.1
					check_variable = { which = visibility_value value >= 25 }
				}
				mult_modifier = {
					factor = 1.1
					check_variable = { which = visibility_value value >= 30 }
				}
				mult_modifier = {
					factor = 1.1
					check_variable = { which = visibility_value value >= 35 }
				}
				mult_modifier = {
					factor = 1.1
					check_variable = { which = visibility_value value >= 40 }
				}
			}
		}
	}
}

# Soul Corruption event
character_event = {
	id = MNM.7050
	desc = EVTDESC_MNM_7050
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_intrigue

	hide_from = yes
	is_triggered_only = yes # major/minor_soul_corruption_effect

	option = {
		name = EVTOPTA_MNM_7050

		trigger_switch = {
			on_trigger = has_character_flag

			corruption_remove_kind = {
				remove_trait = kind
				clr_character_flag = corruption_remove_kind
			}

			corruption_add_cruel = {
				add_trait = cruel
				clr_character_flag = corruption_add_cruel
			}

			corruption_remove_just = {
				remove_trait = just
				clr_character_flag = corruption_remove_just
			}

			corruption_add_arbitrary = {
				add_trait = arbitrary
				clr_character_flag = corruption_add_arbitrary
			}

			corruption_remove_honest = {
				remove_trait = honest
				clr_character_flag = corruption_remove_honest
			}

			corruption_add_deceitful = {
				add_trait = deceitful
				clr_character_flag = corruption_add_deceitful
			}

			corruption_add_possessed = {
				add_trait = possessed
				clr_character_flag = corruption_add_possessed
			}
		}
	}
}

# Soul corruption adds stress
character_event = {
	id = MNM.7051
	desc = EVTDESC_MNM_7051
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # major/minor_soul_corruption_effect
	hide_from = yes

	trigger = {
		NOT = { trait = stressed }
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }

		add_trait = stressed
	}
}

# Soul corruption adds lunatic
character_event = {
	id = MNM.7052
	desc = EVTDESC_MNM_7052
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # major/minor_soul_corruption_effect
	hide_from = yes

	trigger = {
		NOT = { trait = lunatic }
	}

	option = {
		name = EVTOPTA_MNM_7052

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }

		add_trait = lunatic
	}
}

# Soul corruption adds stutter
character_event = {
	id = MNM.7053
	desc = EVTDESC_MNM_7053
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # major/minor_soul_corruption_effect
	hide_from = yes

	trigger = {
		NOT = { trait = stutter }
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }

		add_trait = stutter
	}
}

# Soul corruption adds clubfooted
character_event = {
	id = MNM.7054
	desc = EVTDESC_MNM_7054
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # major/minor_soul_corruption_effect
	hide_from = yes

	trigger = {
		NOT = { trait = clubfooted }
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }

		add_trait = clubfooted
	}
}

# Soul corruption adds hunchback
character_event = {
	id = MNM.7055
	desc = EVTDESC_MNM_7055
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # major/minor_soul_corruption_effect
	hide_from = yes

	trigger = {
		NOT = { trait = hunchback }
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }

		add_trait = hunchback
	}
}

# Soul corruption adds ugly
character_event = {
	id = MNM.7056
	desc = EVTDESC_MNM_7056
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # major/minor_soul_corruption_effect
	hide_from = yes

	trigger = {
		NOT = { trait = ugly }
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }

		hidden_effect = { remove_trait = attractive }
		add_trait = ugly
	}
}

# Soul corruption adds corrupting_magic_major
character_event = {
	id = MNM.7057
	desc = EVTDESC_MNM_7057_NEW
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_intrigue

	notification = yes
	is_triggered_only = yes # major_soul_corruption_effect
	hide_from = yes

	immediate = {
		add_character_modifier = {
			name = corrupting_magic_minor
			years = 5
			stacking = yes
		}

		add_character_modifier = {
			name = corrupting_magic_minor
			years = 5
			stacking = yes
		}
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }
	}
}

# Soul corruption adds corrupting_magic_minor
character_event = {
	id = MNM.7058
	desc = EVTDESC_MNM_7057_NEW
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_intrigue

	notification = yes
	is_triggered_only = yes # minor_soul_corruption_effect
	hide_from = yes

	immediate = {
		add_character_modifier = {
			name = corrupting_magic_minor
			years = 5
			stacking = yes
		}
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }
	}
}

# Soul corruption adds frail
character_event = {
	id = MNM.7059
	desc = EVTDESC_MNM_7059
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # major/minor_soul_corruption_effect
	hide_from = yes

	trigger = {
		NOR = {
			trait = frail
			trait = weak
			trait = strong
		}
	}

	option = {
		name = EVTOPTA_MNM_7051

		custom_tooltip = { text = EVTOPTA_MNM_7051_TT }

		hidden_effect = { remove_trait = brawny }
		add_trait = frail
	}
}


### POWERS ###

# Power: Corrupt a priest

# Corrupt a Priest (find out whether corruptible)
character_event = {
	id = MNM.7826
	desc = EVTDESC_MNM_7826
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:corrupt_priest_target

	is_triggered_only = yes # mnm_devil_worshipers_decisions.txt

	trigger = { is_devil_worshiper_trigger = yes }

	option = {
		name = EVTOPTA_MNM_7826 # try to find something new to corrupt them with (add new sinful traits)

		trigger = {
			event_target:corrupt_priest_target = {
				OR = {
					NOR = {
						trait = lustful
						trait = chaste
					}

					NOR = {
						trait = temperate
						trait = gluttonous
					}

					NOR = {
						trait = charitable
						trait = greedy
					}

					NOR = {
						trait = diligent
						trait = slothful
					}

					NOR = {
						trait = kind

						AND = {
							trait = envious
							trait = cruel
						}
					}

					NOR = {
						trait = patient
						trait = wroth
					}

					NOR = {
						trait = humble
						trait = proud
					}

					NOR = {
						trait = honest
						trait = deceitful
					}

					NOR = {
						trait = just
						trait = arbitrary
					}
				}
			}
		}

		custom_tooltip = { text = EVTOPTA_MNM_7826_TOOLTIP }

		character_event = {
			id = MNM.7830
			days = 3
			random = 27
		}
	}

	option = {
		name = EVTOPTB_MNM_7826 # remove virtues (slight chance to add new sinful traits)

		trigger = {
			event_target:corrupt_priest_target = {
				OR = {
					trait = chaste
					trait = temperate
					trait = charitable
					trait = diligent
					trait = kind
					trait = patient
					trait = humble
					trait = honest
					trait = just
				}
			}
		}

		custom_tooltip = { text = EVTOPTB_MNM_7826_TOOLTIP }

		character_event = {
			id = MNM.7835
			days = 3
			random = 27
		}
	}

	option = {
		name = EVTOPTC_MNM_7826 # nevermind I'm a nice guy

		custom_tooltip = { text = EVTOPTC_MNM_7826_TOOLTIP }

		hidden_effect = {
			event_target:corrupt_priest_target = {
				clr_character_flag = attempted_corrupt_priest
			}
		}

		ai_chance = { factor = 0 }
	}
}

# Corrupt a priest add trait: corrupt them!
character_event = {
	id = MNM.7830
	picture = GFX_evt_eavesdropping
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:corrupt_priest_target

	desc = {
		text = EVTDESC_MNM_7830_lustful
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_lustful
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_gluttonous
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_gluttonous
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_greedy
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_greedy
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_slothful
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_slothful
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_envious
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_envious
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_wroth
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_wroth
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_proud
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_proud
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_deceitful
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_deceitful
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_arbitrary
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_arbitrary
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7830_cruel
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_cruel
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		event_target:corrupt_priest_target = {
			random_list = {
				10 = {
					trigger = {
						NOR = {
							trait = lustful
							trait = chaste
						}
					}

					set_character_flag = corrupt_priest_add_lustful
				}

				10 = {
					trigger = {
						NOR = {
							trait = gluttonous
							trait = temperate
						}
					}

					set_character_flag = corrupt_priest_add_gluttonous
				}

				10 = {
					trigger = {
						NOR = {
							trait = greedy
							trait = charitable
						}
					}

					set_character_flag = corrupt_priest_add_greedy
				}

				10 = {
					trigger = {
						NOR = {
							trait = slothful
							trait = diligent
						}
					}

					set_character_flag = corrupt_priest_add_slothful
				}

				10 = {
					trigger = {
						NOR = {
							trait = envious
							trait = kind
						}
					}

					set_character_flag = corrupt_priest_add_envious
				}

				10 = {
					trigger = {
						NOR = {
							trait = wroth
							trait = patient
						}
					}

					set_character_flag = corrupt_priest_add_wroth
				}

				10 = {
					trigger = {
						NOR = {
							trait = proud
							trait = humble
						}
					}

					set_character_flag = corrupt_priest_add_proud
				}

				10 = {
					trigger = {
						NOR = {
							trait = deceitful
							trait = honest
						}
					}

					set_character_flag = corrupt_priest_add_deceitful
				}

				10 = {
					trigger = {
						NOR = {
							trait = arbitrary
							trait = just
						}
					}

					set_character_flag = corrupt_priest_add_arbitrary
				}

				10 = {
					trigger = {
						NOR = {
							trait = cruel
							trait = kind
						}
					}

					set_character_flag = corrupt_priest_add_cruel
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_7830 # try to corrupt them

		custom_tooltip = { text = EVTOPTA_MNM_7830_TOOLTIP }

		hidden_effect = {
			random_list = {
				50 = {
					mult_modifier = {
						factor = 2
						event_target:corrupt_priest_target = {
							has_bad_priest_trait_trigger = yes
						}
					}

					# Success
					character_event = {
						id = MNM.7832
						days = 15
						random = 45
					}
				}

				50 = {
					# Failure
					character_event = {
						id = MNM.7834
						days = 15
						random = 45
					}
				}
			}
		}

		ai_chance = {
			factor = 1

			trigger = {
				diplomacy < 15
				intrigue < 15
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_7830 # use dark power to corrupt them

		trigger = {
			has_society_currency_minor_trigger = yes

			NAND = {
				has_quest = quest_devil_worshipers_corrupt_priest
				quest_target = { character = event_target:corrupt_priest_target }
			}
		}

		custom_tooltip = { text = EVTOPTB_MNM_7830_TOOLTIP }

		detract_society_currency_minor_effect = yes

		character_event = {
			id = MNM.7832 # Success
			days = 15
			random = 45
		}

		ai_chance = { factor = 0 }
	}

	option = {
		name = EVTOPTC_MNM_7830 # use diplomacy to talk them into it
		tooltip_info = diplomacy

		trigger = { diplomacy >= 15 }

		custom_tooltip = { text = EVTOPTC_MNM_7830_TOOLTIP }

		hidden_effect = {
			random_list = {
				90 = {
					mult_modifier = {
						factor = 2
						event_target:corrupt_priest_target = {
							has_bad_priest_trait_trigger = yes
						}
					}

					character_event = {
						id = MNM.7832 # Success
						days = 15
						random = 45
					}
				}
				10 = {
					character_event = {
						id = MNM.7834 # Failure
						days = 15
						random = 45
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTD_MNM_7830 # use learning to reason them into it
		tooltip_info = learning

		trigger = { learning >= 15 }

		custom_tooltip = { text = EVTOPTD_MNM_7830_TOOLTIP }

		hidden_effect = {
			random_list = {
				90 = {
					mult_modifier = {
						factor = 2
						event_target:corrupt_priest_target = {
							has_bad_priest_trait_trigger = yes
						}
					}

					character_event = {
						id = MNM.7832 # Success
						days = 15
						random = 45
					}
				}

				10 = {
					character_event = {
						id = MNM.7834 # Failure
						days = 15
						random = 45
					}
				}
			}
		}
	}
}

# Corrupt a Priest successful corruption notification
character_event = {
	id = MNM.7832
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:corrupt_priest_target

	### default descriptions
	desc = {
		text = EVTDESC_MNM_7832_lustful
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_lustful
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_gluttonous
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_gluttonous
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_greedy
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_greedy
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_slothful
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_slothful
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_envious
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_envious
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_wroth
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_wroth
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_proud
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_proud
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_deceitful
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_deceitful
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_arbitrary
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_arbitrary
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7832_cruel
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_add_cruel
				NOT = { has_opinion_modifier = { who = ROOT name = opinion_successful_corruption } }
			}
		}
	}

	### bonus descriptions if resulting from event id = MNM.7836
	desc = {
		text = EVTDESC_MNM_7832_bonus
		trigger = {
			event_target:corrupt_priest_target = {
				has_opinion_modifier = {
					name = opinion_successful_corruption
					who = ROOT
				}

				OR = {
					has_character_flag = corrupt_priest_add_lustful
					has_character_flag = corrupt_priest_add_gluttonous
					has_character_flag = corrupt_priest_add_greedy
					has_character_flag = corrupt_priest_add_slothful
					has_character_flag = corrupt_priest_add_envious
					has_character_flag = corrupt_priest_add_wroth
					has_character_flag = corrupt_priest_add_proud
					has_character_flag = corrupt_priest_add_deceitful
					has_character_flag = corrupt_priest_add_arbitrary
					has_character_flag = corrupt_priest_add_cruel
				}
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		event_target:corrupt_priest_target = {
			trigger_switch = {
				on_trigger = has_character_flag

				corrupt_priest_add_lustful    = { add_trait = lustful }
				corrupt_priest_add_gluttonous = { add_trait = gluttonous }
				corrupt_priest_add_greedy     = { add_trait = greedy }
				corrupt_priest_add_slothful   = { add_trait = slothful }
				corrupt_priest_add_envious    = { add_trait = envious }
				corrupt_priest_add_wroth      = { add_trait = wroth }
				corrupt_priest_add_proud      = { add_trait = proud }
				corrupt_priest_add_deceitful  = { add_trait = deceitful }
				corrupt_priest_add_arbitrary  = { add_trait = arbitrary }
				corrupt_priest_add_cruel      = { add_trait = cruel }
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_7832 # event option if standard event

		trigger = {
			NOT = {
				reverse_has_opinion_modifier = {
					name = opinion_successful_corruption
					who = event_target:corrupt_priest_target
				}
			}
		}

		custom_tooltip = { text = EVTOPTA_MNM_7832_TOOLTIP }

		reverse_opinion = {
			name = opinion_successful_corruption
			who = event_target:corrupt_priest_target
			years = 100
		}

		if = {
			limit = { ai = no }
			event_target:corrupt_priest_target = { set_character_flag = corrupted_by_player }
		}

		event_target:corrupt_priest_target = {
			clr_character_flag = corrupt_priest_add_lustful
			clr_character_flag = corrupt_priest_add_gluttonous
			clr_character_flag = corrupt_priest_add_greedy
			clr_character_flag = corrupt_priest_add_slothful
			clr_character_flag = corrupt_priest_add_envious
			clr_character_flag = corrupt_priest_add_wroth
			clr_character_flag = corrupt_priest_add_proud
			clr_character_flag = corrupt_priest_add_deceitful
			clr_character_flag = corrupt_priest_add_arbitrary
			clr_character_flag = corrupt_priest_add_cruel
			clr_character_flag = attempted_corrupt_priest
		}

		# If quest holder, clear quest and reward
		if = {
			limit = {
				has_quest = quest_devil_worshipers_corrupt_priest
				quest_target = { character = event_target:corrupt_priest_target }
			}

			clr_quest = quest_devil_worshipers_corrupt_priest

			if = {
				limit = { event_target:corrupt_priest_target = { higher_real_tier_than = DUKE } }
				add_society_currency_major_effect = yes
			}
			else_if = {
				limit = { event_target:corrupt_priest_target = { real_tier = DUKE } }
				add_society_currency_medium_effect = yes
			}
			else = {
				add_society_currency_minor_effect = yes
			}
		}
		else = {
			add_society_currency_minor_effect = yes
		}

		sound_effect = devil_worshippers_corrupt_priest
		hidden_effect = { minor_soul_corruption_effect = yes }
	}

	option = {
		name = EVTOPTB_MNM_7832 # event option if bonus event

		trigger = {
			reverse_has_opinion_modifier = {
				name = opinion_successful_corruption
				who = event_target:corrupt_priest_target
			}
		}

		custom_tooltip = { text = EVTOPTB_MNM_7832_TOOLTIP }

		add_society_currency_medium_effect = yes

		hidden_effect = {
			event_target:corrupt_priest_target = {
				clr_character_flag = corrupt_priest_add_lustful
				clr_character_flag = corrupt_priest_add_gluttonous
				clr_character_flag = corrupt_priest_add_greedy
				clr_character_flag = corrupt_priest_add_slothful
				clr_character_flag = corrupt_priest_add_envious
				clr_character_flag = corrupt_priest_add_wroth
				clr_character_flag = corrupt_priest_add_proud
				clr_character_flag = corrupt_priest_add_deceitful
				clr_character_flag = corrupt_priest_add_arbitrary
				clr_character_flag = corrupt_priest_add_cruel
			}
		}
	}
}

# Corrupt a Priest failed corruption notification
character_event = {
	id = MNM.7834
	desc = EVTDESC_MNM_7834
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:corrupt_priest_target

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7834

		custom_tooltip = { text = EVTOPTA_MNM_7834_TOOLTIP }

		increase_visibility_effect = yes

		hidden_effect = {
			reverse_opinion = {
				name = opinion_failed_corruption
				who = event_target:corrupt_priest_target
				years = 10
			}

			any_realm_character = { # exposed corrupter -10
				opinion = {
					name = opinion_known_corrupter
					who = ROOT
					years = 10
				}
			}

			event_target:corrupt_priest_target = {
				clr_character_flag = corrupt_priest_add_lustful
				clr_character_flag = corrupt_priest_add_gluttonous
				clr_character_flag = corrupt_priest_add_greedy
				clr_character_flag = corrupt_priest_add_slothful
				clr_character_flag = corrupt_priest_add_envious
				clr_character_flag = corrupt_priest_add_wroth
				clr_character_flag = corrupt_priest_add_proud
				clr_character_flag = corrupt_priest_add_deceitful
				clr_character_flag = corrupt_priest_add_arbitrary
				clr_character_flag = corrupt_priest_add_cruel
				clr_character_flag = attempted_corrupt_priest
			}
		}

		if = {
			limit = { has_quest = quest_devil_worshipers_corrupt_priest }

			clr_quest = {
				id = quest_devil_worshipers_corrupt_priest
				failure = yes
			}
		}
	}
}

# Corrupt a priest remove trait: corrupt them!
character_event = {
	id = MNM.7835
	picture = GFX_evt_eavesdropping
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:corrupt_priest_target

	desc = {
		text = EVTDESC_MNM_7835_remove_chaste
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_chaste
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_temperate
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_temperate
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_charitable
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_charitable
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_diligent
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_diligent
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_kind
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_kind
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_patient
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_patient
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_humble
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_humble
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_honest
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_honest
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7835_remove_just
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_just
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		event_target:corrupt_priest_target = {
			random_list = {
				10 = {
					trigger = { trait = chaste }
					set_character_flag = corrupt_priest_remove_chaste
				}

				10 = {
					trigger = { trait = temperate }
					set_character_flag = corrupt_priest_remove_temperate
				}

				10 = {
					trigger = { trait = charitable }
					set_character_flag = corrupt_priest_remove_charitable
				}

				10 = {
					trigger = { trait = diligent }
					set_character_flag = corrupt_priest_remove_diligent
				}

				10 = {
					trigger = { trait = kind }
					set_character_flag = corrupt_priest_remove_kind
				}

				10 = {
					trigger = { trait = patient }
					set_character_flag = corrupt_priest_remove_patient
				}

				10 = {
					trigger = { trait = humble }
					set_character_flag = corrupt_priest_remove_humble
				}

				10 = {
					trigger = { trait = honest }
					set_character_flag = corrupt_priest_remove_honest
				}

				10 = {
					trigger = { trait = just }
					set_character_flag = corrupt_priest_remove_just
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_7835 # try to corrupt them

		custom_tooltip = { text = EVTOPTA_MNM_7835_TOOLTIP }

		hidden_effect = {
			random_list = {
				50 = {
					mult_modifier = {
						factor = 2
						event_target:corrupt_priest_target = {
							has_bad_priest_trait_trigger = yes
						}
					}

					character_event = {
						id = MNM.7837 # Success
						days = 15
						random = 45
					}
				}
				50 = {
					character_event = {
						id = MNM.7834 # Failure
						days = 15
						random = 45
					}
				}
			}
		}

		ai_chance = {
			factor = 1

			trigger = {
				diplomacy < 15
				intrigue < 15
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_7835 # use dark power to corrupt them

		trigger = {
			has_society_currency_minor_trigger = yes

			NAND = {
				has_quest = quest_devil_worshipers_corrupt_priest
				quest_target = { character = event_target:corrupt_priest_target }
			}
		}

		custom_tooltip = { text = EVTOPTB_MNM_7835_TOOLTIP }

		detract_society_currency_minor_effect = yes

		character_event = {
			id = MNM.7837 # Success
			days = 15
			random = 45
		}

		ai_chance = { factor = 0 }
	}

	option = {
		name = EVTOPTC_MNM_7835 # use diplomacy to talk them into it
		tooltip_info = diplomacy

		trigger = { diplomacy >= 15 }

		custom_tooltip = { text = EVTOPTC_MNM_7835_TOOLTIP }

		hidden_effect = {
			random_list = {
				90 = {
					mult_modifier = {
						factor = 2
						event_target:corrupt_priest_target = {
							has_bad_priest_trait_trigger = yes
						}
					}

					character_event = {
						id = MNM.7837 # Success
						days = 15
						random = 45
					}
				}
				10 = {
					character_event = {
						id = MNM.7834 # Failure
						days = 15
						random = 45
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTD_MNM_7835 # use learning to reason them into it
		tooltip_info = learning

		trigger = { learning >= 15 }

		custom_tooltip = { text = EVTOPTD_MNM_7835_TOOLTIP }

		hidden_effect = {
			random_list = {
				90 = {
					mult_modifier = {
						factor = 2
						event_target:corrupt_priest_target = {
							has_bad_priest_trait_trigger = yes
						}
					}

					character_event = {
						id = MNM.7837 # Success
						days = 15
						random = 45
					}
				}
				10 = {
					character_event = {
						id = MNM.7834 # Failure
						days = 15
						random = 45
					}
				}
			}
		}
	}
}

# Corrupt a Priest successful corruption notification (remove trait), leads back to event id = MNM.7832 (because recycling = awesome!)
character_event = {
	id = MNM.7837
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7837_chaste
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_chaste
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_temperate
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_temperate
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_charitable
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_charitable
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_diligent
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_diligent
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_kind
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_kind
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_patient
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_patient
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_humble
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_humble
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_honest
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_honest
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7837_just
		trigger = {
			event_target:corrupt_priest_target = {
				has_character_flag = corrupt_priest_remove_just
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		event_target:corrupt_priest_target = {
			trigger_switch = {
				on_trigger = has_character_flag

				corrupt_priest_remove_chaste = {
					remove_trait = chaste

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_lustful

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}

				corrupt_priest_remove_temperate = {
					remove_trait = temperate

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_gluttonous

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}
				corrupt_priest_remove_charitable = {
					remove_trait = charitable

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_greedy

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}
				corrupt_priest_remove_diligent = {
					remove_trait = diligent

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_slothful

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}
				corrupt_priest_remove_kind = {
					remove_trait = kind

					random_list = {
						5 = {
							set_character_flag = corrupt_priest_add_envious

							ROOT = {
								character_event = {
									id = MNM.7832
									days = 30
									random = 330
								}
							}
						}

						5 = {
							set_character_flag = corrupt_priest_add_cruel

							ROOT = {
								character_event = {
									id = MNM.7832
									days = 30
									random = 330
								}
							}
						}

						90 = { }
					}
				}

				corrupt_priest_remove_patient = {
					remove_trait = patient

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_wroth

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}

				corrupt_priest_remove_humble = {
					remove_trait = humble

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_proud

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}

				corrupt_priest_remove_honest = {
					remove_trait = honest

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_deceitful

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}
				corrupt_priest_remove_just = {
					remove_trait = just

					random = {
						chance = 10

						set_character_flag = corrupt_priest_add_arbitrary

						ROOT = {
							character_event = {
								id = MNM.7832
								days = 30
								random = 330
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_7837

		custom_tooltip = { text = EVTOPTA_MNM_7837_TOOLTIP }

		reverse_opinion = {
			name = opinion_successful_corruption
			who = event_target:corrupt_priest_target
			years = 100
		}

		if = {
			limit = { ai = no }
			event_target:corrupt_priest_target = { set_character_flag = corrupted_by_player }
		}

		event_target:corrupt_priest_target = {
			clr_character_flag = corrupt_priest_remove_chaste
			clr_character_flag = corrupt_priest_remove_temperate
			clr_character_flag = corrupt_priest_remove_charitable
			clr_character_flag = corrupt_priest_remove_diligent
			clr_character_flag = corrupt_priest_remove_kind
			clr_character_flag = corrupt_priest_remove_patient
			clr_character_flag = corrupt_priest_remove_humble
			clr_character_flag = corrupt_priest_remove_honest
			clr_character_flag = corrupt_priest_remove_just
			clr_character_flag = attempted_corrupt_priest
		}

		sound_effect = devil_worshippers_corrupt_priest

		# If quest holder, clear quest and reward
		if = {
			limit = {
				has_quest = quest_devil_worshipers_corrupt_priest
				quest_target = { character = event_target:corrupt_priest_target }
			}

			clr_quest = quest_devil_worshipers_corrupt_priest

			if = {
				limit = { event_target:corrupt_priest_target = { higher_real_tier_than = DUKE } }
				add_society_currency_major_effect = yes
			}
			else_if = {
				limit = { event_target:corrupt_priest_target = { real_tier = DUKE } }
				add_society_currency_medium_effect = yes
			}
			else = {
				add_society_currency_minor_effect = yes
			}
		}
		# If not quest holder, give some currency
		else = {
			add_society_currency_minor_effect = yes
		}

		hidden_effect = { minor_soul_corruption_effect = yes }
	}
}


## Power: Demonic Healing ##

# Demonic Healing opening #
character_event = {
	id = MNM.7118
	desc = EVTDESC_MNM_7118
	picture = GFX_evt_magic_ritual
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # devil_worshipers_dark_healing, mnm_devil_worshipers_decisions.txt

	immediate = {
		if = {
			limit = { is_ill = yes }
			set_character_flag = dark_healing_disease_flag
		}

		if = {
			limit = { is_maimed_trigger = yes }
			set_character_flag = dark_healing_maimed_flag
		}

		if = {
			limit = {
				OR = {
					trait = wounded

					trigger_if = {
						limit = { has_dlc = "Reapers" }

						OR = {
							trait = severely_injured
							trait = infection
						}
					}
				}
			}

			set_character_flag = dark_healing_injured
		}
	}

	option = {
		name = EVTOPTA_MNM_7118

		custom_tooltip = { text = EVTOPTA_MNM_7118_TOOLTIP }

		character_event = { id = MNM.7119 days = 2 }
	}
}

# Demonic Healing result
character_event = {
	id = MNM.7119
	picture = GFX_evt_magic_ritual
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_MNM_7119_INCAPABLE_INFIRM
		trigger = {
			OR = {
				has_character_flag = dark_healing_incapable
				has_character_flag = dark_healing_infirm
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7119_BLINDED
		trigger = { has_character_flag = dark_healing_blinded }
	}
	desc = {
		text = EVTDESC_MNM_7119_EUNUCH
		trigger = { has_character_flag = dark_healing_eunuch }
	}
	desc = {
		text = EVTDESC_MNM_7119_MAIMED
		trigger = { has_character_flag = dark_healing_maimed_healed }
	}
	desc = {
		text = EVTDESC_MNM_7119_DISEASE
		trigger = {
			NOR = {
				has_character_flag = dark_healing_incapable
				has_character_flag = dark_healing_eunuch
				has_character_flag = dark_healing_blinded
				has_character_flag = dark_healing_maimed_healed
				has_character_flag = dark_healing_infirm
			}

			has_character_flag = dark_healing_disease_flag
			has_character_flag = dark_healing_disease_removed
		}
	}
	desc = {
		text = EVTDESC_MNM_7119_NOTHING_HAPPENED
		trigger = {
			NAND = {
				has_character_flag = dark_healing_disease_flag
				has_character_flag = dark_healing_disease_removed
			}

			has_character_flag = dark_healing_nothing_happened

			OR = {
				has_character_flag = dark_healing_disease_flag
				has_character_flag = dark_healing_maimed_flag
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7119_NORMAL
		trigger = {
			NAND = {
				has_character_flag = dark_healing_disease_flag
				has_character_flag = dark_healing_disease_removed
			}

			has_character_flag = dark_healing_injured
			has_character_flag = dark_healing_nothing_happened

			NOR = {
				has_character_flag = dark_healing_disease_flag
				has_character_flag = dark_healing_maimed_flag
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7119_TOO_WEAK
		trigger = {
			NAND = {
				has_character_flag = dark_healing_injured
				has_character_flag = dark_healing_disease_removed
			}

			has_character_flag = dark_healing_nothing_happened
		}
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { has_dlc = "Reapers" }

			random_list = {
				30 = { set_character_flag = dark_healing_nothing_happened }

				70 = {
					random_list = {
						10 = {
							mult_modifier = {
								factor = 2
								OR = {
									trait = flu
									trait = food_poisoning
								}
							}
							mult_modifier = {
								factor = 0.5
								trait = cancer

								NOR = {
									trait = measles
									trait = flu
									trait = food_poisoning
									trait = gout
									trait = scurvy
									trait = lovers_pox
									trait = pneumonic
									trait = great_pox
									trait = leper
								}
							}

							remove_random_disease_effect = yes # sets a flag to remove random "regular" disease
							set_character_flag = dark_healing_disease_removed
						}

						10 = {
							trigger = { has_epidemic_disease_trigger = yes }
							remove_random_epidemic_disease_effect = yes # sets a flag to remove random epidemic disease
							set_character_flag = dark_healing_disease_removed
						}

						10 = {
							trigger = { is_maimed_trigger = yes }

							mult_modifier = {
								factor = 2
								trait = mangled
							}

							remove_random_maimed_effect = yes
							set_character_flag = dark_healing_maimed_healed
						}

						10 = {
							trigger = { trait = infirm }
							set_character_flag = dark_healing_infirm
						}

						10 = {
							trigger = { trait = incapable }
							set_character_flag = dark_healing_incapable
						}

						10 = {
							trigger = { trait = eunuch }
							set_character_flag = dark_healing_eunuch
						}

						10 = {
							trigger = { trait = blinded }
							set_character_flag = dark_healing_blinded
						}
					}
				}
			}
		}
		else = {
			random_list = {
				30 = { set_character_flag = dark_healing_nothing_happened }

				70 = {
					random_list = {
						10 = {
							trigger = { is_maimed_trigger = yes }
							set_character_flag = dark_healing_maimed_healed
						}

						10 = {
							trigger = { trait = infirm }
							set_character_flag = dark_healing_infirm
						}

						5 = {
							trigger = { trait = incapable }
							set_character_flag = dark_healing_incapable
						}

						5 = {
							trigger = { trait = eunuch }
							set_character_flag = dark_healing_eunuch
						}

						5 = {
							trigger = { trait = blinded }
							set_character_flag = dark_healing_blinded
						}
					}
				}
			}
		}
	}

	option = {
		name = EVTOPT_MNM_7119

		if = {
			limit = { has_character_flag = dark_healing_disease_removed }

			# general disease clearing effects:
			remove_symptoms_effect = yes
			clear_disease_level_effect = yes
			remove_disease_flags_effect = yes
			hidden_effect = { remove_treatment_modifiers_effect = yes }
		}

		if = { limit = { trait = infection }        remove_trait = infection }
		if = { limit = { trait = severely_injured } remove_trait = severely_injured }
		if = { limit = { trait = ill }              remove_trait = ill }

		if = {
			limit = { trait = wounded }

			remove_trait = wounded
			add_scarred_tiered_effect = yes
		}

		if = {
			limit = {
				NOT = { has_dlc = "Reapers" }
				has_character_flag = dark_healing_maimed_healed
			}

			remove_trait = maimed
		}

		trigger_switch = {
			on_trigger = has_character_flag

			dark_healing_blinded    = { remove_trait = blinded }
			dark_healing_eunuch     = { remove_trait = eunuch }
			dark_healing_infirm     = { remove_trait = infirm }
			dark_healing_incapable  = { remove_trait = incapable }
			removed_maimed          = { remove_trait = maimed }
			removed_mangled         = { remove_trait = mangled }
			removing_flu            = { remove_trait = flu }
			removing_food_poisoning = { remove_trait = food_poisoning }
			removing_gout           = { remove_trait = gout }
			removing_scurvy         = { remove_trait = scurvy }
			removing_lovers_pox     = { remove_trait = lovers_pox }
			removing_cancer         = { remove_trait = cancer }
			removing_pneumonic      = { remove_trait = pneumonic }
			removing_leper          = { remove_trait = leper }

			removing_measles = {
				remove_trait = measles
				set_character_flag = immune_measles
			}

			removing_great_pox = {
				remove_trait = great_pox
				set_character_flag = immune_syphilis
			}

			removing_consumption = {
				remove_trait = consumption
				set_character_flag = immune_consumption
			}

			removing_aztec_disease = {
				remove_trait = aztec_disease
				set_character_flag = immune_aztec_disease
			}

			removing_smallpox = {
				remove_trait = smallpox
				set_character_flag = immune_smallpox
			}

			removing_bubonic_plague = {
				remove_trait = bubonic_plague
				set_character_flag = immune_bubonic_plague
			}

			removing_camp_fever = {
				remove_trait = camp_fever
				set_character_flag = immune_camp_fever
			}

			removing_slow_fever = {
				remove_trait = slow_fever
				set_character_flag = immune_slow_fever
			}

			removed_one_eyed = {
				remove_trait = one_eyed

				if = {
					limit = { has_character_modifier = glass_eye }
					remove_character_modifier = glass_eye
				}

				if = {
					limit = {
						has_character_modifier = phantom_pain

						NOR = {
							trait = one_handed
							trait = one_legged
							trait = disfigured
						}
					}

					remove_character_modifier = phantom_pain
				}
			}

			removed_one_handed = {
				remove_trait = one_handed

				if = {
					limit = { has_artifact = prosthetic_hand_gold }

					destroy_artifact = prosthetic_hand_gold
					wealth = 10
				}

				if = {
					limit = { has_artifact = prosthetic_hand_metal }
					destroy_artifact = prosthetic_hand_metal
				}

				if = {
					limit = {
						has_character_modifier = phantom_pain

						NOR = {
							trait = one_eyed
							trait = one_legged
							trait = disfigured
						}
					}

					remove_character_modifier = phantom_pain
				}
			}

			removed_one_legged = {
				remove_trait = one_legged

				if = {
					limit = { has_character_modifier = peg_leg }
					remove_character_modifier = peg_leg
				}

				if = {
					limit = { has_artifact = prosthetic_leg_artifact }
					destroy_artifact = prosthetic_leg_artifact
				}

				if = {
					limit = {
						has_character_modifier = phantom_pain

						NOR = {
							trait = one_eyed
							trait = one_handed
							trait = disfigured
						}
					}

					remove_character_modifier = phantom_pain
				}
			}

			removed_disfigured = {
				remove_trait = disfigured

				if = {
					limit = { has_character_modifier = golden_mask }

					remove_character_modifier = golden_mask
					wealth = 10
				}

				if = {
					limit = {
						has_character_modifier = phantom_pain

						NOR = {
							trait = one_eyed
							trait = one_handed
							trait = one_legged
						}
					}

					remove_character_modifier = phantom_pain
				}
			}
		}

		add_character_modifier = {
			name = dark_healing_recent
			years = 1
		}

		# demonic healing specific clearing:
		clr_character_flag = dark_healing_in_effect
		clr_character_flag = dark_healing_nothing_happened
		clr_character_flag = dark_healing_maimed_flag
		clr_character_flag = dark_healing_disease_flag
		clr_character_flag = dark_healing_disease_removed
		clr_character_flag = dark_healing_maimed_healed
		clr_character_flag = dark_healing_incapable
		clr_character_flag = dark_healing_infirm
		clr_character_flag = dark_healing_blinded
		clr_character_flag = dark_healing_eunuch
		clr_character_flag = dark_healing_injured
		clr_character_flag = removed_maimed
		clr_character_flag = removed_mangled
		clr_character_flag = removed_one_eyed
		clr_character_flag = removed_one_handed
		clr_character_flag = removed_one_legged
		clr_character_flag = removed_disfigured
		clr_character_flag = removing_flu
		clr_character_flag = removing_measles
		clr_character_flag = removing_food_poisoning
		clr_character_flag = removing_gout
		clr_character_flag = removing_scurvy
		clr_character_flag = removing_lovers_pox
		clr_character_flag = removing_cancer
		clr_character_flag = removing_leper
		clr_character_flag = removing_consumption
		clr_character_flag = removing_aztec_disease
		clr_character_flag = removing_smallpox
		clr_character_flag = removing_bubonic_plague
		clr_character_flag = removing_camp_fever
		clr_character_flag = removing_slow_fever
	}
}


## Induction ##

# Opening Event
character_event = {
	id = MNM.7121
	desc = EVTDESC_MNM_7121
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # devil_worshipers_induction, mnm_devil_worshipers_decisions.txt

	option = {
		name = EVTOPTA_MNM_7121

		hidden_effect = {
			event_target:dw_induction_target = {
				random = {
					chance = 50
					set_character_flag = wounded_induction
				}

				random = {
					chance = 10
					set_character_flag = lunatic_induction
				}

				random = {
					chance = 10
					set_character_flag = possessed_induction
				}

				add_character_modifier = {
					name = recent_induction_attempt
					months = 3
				}

				if = {
					limit = {
						is_in_society = no
						NOT = { is_rival = ROOT }
					}

					random = {
						chance = 30

						mult_modifier = {
							factor = 2
							trait = trusting
						}
						mult_modifier = {
							factor = 0.5
							trait = paranoid
						}
						mult_modifier = {
							factor = 2
							trait = lunatic
						}
						mult_modifier = {
							factor = 2
							trait = possessed
						}
						mult_modifier = {
							factor = 2
							trait = depressed
						}
						mult_modifier = {
							factor = 2
							has_negative_congenital_trigger = yes
						}
						mult_modifier = {
							factor = 2
							trait = ambitious
						}
						mult_modifier = {
							factor = 2
							has_impious_trait_trigger = yes
						}
						mult_modifier = {
							factor = 2
							vassal_of = ROOT
						}
						mult_modifier = {
							factor = 0.5
							NOT = { religion_group = ROOT }
						}
						mult_modifier = {
							factor = 2
							is_ruler = no
						}
						mult_modifier = {
							factor = 2
							dynasty = ROOT
						}

						set_character_flag = join_induction

						ROOT = {
							character_event = {
								id = MNM.7123
								days = 7
							}
						}
					}
				}

				if = {
					limit = { NOT = { has_character_flag = join_induction } }

					ROOT = {
						character_event = {
							id = MNM.7124
							days = 7
						}
					}
				}

				clr_character_flag = join_induction
			}
		}
	}
}

# Successful Induction #
character_event = {
	id = MNM.7123
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion
	portrait = event_target:dw_induction_target

	desc = {
		text = EVTDESC_MNM_7123_WOUNDED
		trigger = {
			event_target:dw_induction_target = {
				is_alive = yes
				has_character_flag = wounded_induction
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7123_INSANE
		trigger = {
			event_target:dw_induction_target = {
				is_alive = yes

				OR = {
					has_character_flag = lunatic_induction
					has_character_flag = possessed_induction
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7123_NOT_WOUNDED
		trigger = {
			event_target:dw_induction_target = {
				is_alive = yes

				NOR = {
					has_character_flag = wounded_induction
					has_character_flag = lunatic_induction
					has_character_flag = possessed_induction
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7123_DEAD
		trigger = {
			event_target:dw_induction_target = { is_alive = no }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7123

		trigger = {
			event_target:dw_induction_target = { is_alive = yes }
		}

		custom_tooltip = { text = successful_induction_tooltip }

		event_target:dw_induction_target = {
			show_scope_change = no

			if = {
				limit = { has_character_flag = wounded_induction }
				clr_character_flag = wounded_induction
				add_trait_silently_wounded_effect = yes
			}

			if = {
				limit = { has_character_flag = lunatic_induction }
				clr_character_flag = lunatic_induction
				add_trait_silently_lunatic_effect = yes
			}

			if = {
				limit = { has_character_flag = possessed_induction }
				clr_character_flag = possessed_induction
				add_trait_silently_possessed_effect = yes
			}

			if = {
				limit = { is_in_society = yes }
				leave_society = yes
			}

			join_prev_devil_worshiper_society_effect = yes
		}
	}

	option = {
		name = EVTOPTB_MNM_7123

		trigger = {
			event_target:dw_induction_target = { is_alive = no }
		}
	}
}

# Failed Induction #
character_event = {
	id = MNM.7124
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion
	portrait = event_target:dw_induction_target

	desc = {
		text = EVTDESC_MNM_7124_WOUNDED
		trigger = {
			event_target:dw_induction_target = {
				is_alive = yes
				has_character_flag = wounded_induction
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7124_INSANE
		trigger = {
			event_target:dw_induction_target = {
				is_alive = yes

				OR = {
					has_character_flag = lunatic_induction
					has_character_flag = possessed_induction
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7124_NOT_WOUNDED
		trigger = {
			event_target:dw_induction_target = {
				is_alive = yes

				NOR = {
					has_character_flag = wounded_induction
					has_character_flag = lunatic_induction
					has_character_flag = possessed_induction
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7123_DEAD
		trigger = {
			event_target:dw_induction_target = { is_alive = no }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7124

		trigger = {
			event_target:dw_induction_target = { is_alive = yes }
		}

		event_target:dw_induction_target = {
			show_scope_change = no

			if = {
				limit = { has_character_flag = wounded_induction }
				clr_character_flag = wounded_induction
				add_trait_silently_wounded_effect = yes
			}

			if = {
				limit = { has_character_flag = lunatic_induction }
				clr_character_flag = lunatic_induction
				add_trait_silently_lunatic_effect = yes
			}

			if = {
				limit = { has_character_flag = possessed_induction }
				clr_character_flag = possessed_induction
				add_trait_silently_possessed_effect = yes
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_7123

		trigger = {
			event_target:dw_induction_target = { is_alive = no }
		}

	}
}


## Power: Dark Divorce

# Dark Divorce spellcasting event
character_event = {
	id = MNM.7801
	desc = EVTDESC_MNM_7801
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dark_divorce_target

	is_triggered_only = yes # devil_worshipers_dark_divorce, mnm_devil_worshipers_decisions.txt

	immediate = {
		hidden_effect = {
			event_target:dark_divorce_target = {
				random_list = {
					20 = { set_character_flag = supernatural_death_fear }
					20 = { set_character_flag = supernatural_death_lightning }
					20 = { set_character_flag = supernatural_death_combustion }
					20 = { set_character_flag = supernatural_death_crows }
					20 = { set_character_flag = supernatural_death_suicide }
				}
			}
		}
	}

	option = { # Bye bye baby
		name = EVTOPTA_MNM_7801

		trigger = { has_society_currency_minor_trigger = yes }

		custom_tooltip = { text = EVTOPTA_MNM_7801_TOOLTIP }

		detract_society_currency_minor_effect = yes

		event_target:dark_divorce_target = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				supernatural_death_fear = {
					ROOT = {
						character_event = {
							id = MNM.7803
							days = 3
							random = 27
						}
					}
				}

				supernatural_death_lightning = {
					ROOT = {
						character_event = {
							id = MNM.7804
							days = 3
							random = 27
						}
					}
				}

				supernatural_death_combustion = {
					ROOT = {
						character_event = {
							id = MNM.7805
							days = 3
							random = 27
						}
					}
				}

				supernatural_death_crows = {
					ROOT = {
						character_event = {
							id = MNM.7806
							days = 3
							random = 27
						}
					}
				}

				supernatural_death_suicide = {
					ROOT = {
						character_event = {
							id = MNM.7808
							days = 1
							random = 6
						}
					}
				}
			}
		}
	}

	option = { # No I won't
		name = EVTOPTB_MNM_7801

		custom_tooltip = { text = EVTOPTB_MNM_7801_TOOLTIP }

		hidden_effect = {
			event_target:dark_divorce_target = {
				clr_character_flag = supernatural_death_fear
				clr_character_flag = supernatural_death_lightning
				clr_character_flag = supernatural_death_combustion
				clr_character_flag = supernatural_death_crows
				clr_character_flag = supernatural_death_suicide
				clr_character_flag = being_dark_divorced
			}
		}

		remove_character_modifier = recently_did_dark_divorce

		ai_chance = { factor = 0 }
	}
}

# Dark Divorce spouse dies from fear event
character_event = {
	id = MNM.7803
	desc = EVTDESC_MNM_7803
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dark_divorce_target

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7803

		event_target:dark_divorce_target = {
			show_scope_change = no

			death = {
				death_reason = death_murder_unknown_fear
				killer = ROOT
			}
		}

		hidden_effect = { major_soul_corruption_effect = yes }
	}
}

# Dark Divorce spouse dies from lightning event
character_event = {
	id = MNM.7804
	desc = EVTDESC_MNM_7804
	picture = GFX_evt_religious_exultation
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dark_divorce_target

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7804

		event_target:dark_divorce_target = {
			show_scope_change = no

			death = {
				death_reason = death_murder_unknown_lightning
				killer = ROOT
			}
		}

		hidden_effect = { major_soul_corruption_effect = yes }
	}
}

# Dark Divorce spouse dies from spontaneous combustion event
character_event = {
	id = MNM.7805
	desc = EVTDESC_MNM_7805
	picture = GFX_evt_burning_house
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dark_divorce_target

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7805

		event_target:dark_divorce_target = {
			show_scope_change = no

			death = {
				death_reason = death_murder_unknown_combustion
				killer = ROOT
			}
		}

		hidden_effect = { major_soul_corruption_effect = yes }
	}
}

# Dark Divorce spouse dies from crows event
character_event = {
	id = MNM.7806
	desc = EVTDESC_MNM_7806
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dark_divorce_target

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7806

		event_target:dark_divorce_target = {
			show_scope_change = no

			death = {
				death_reason = death_murder_unknown_crows
				killer = ROOT
			}
		}

		hidden_effect = { major_soul_corruption_effect = yes }
	}
}

# Dark Divorce spouse becomes possessed event
character_event = {
	id = MNM.7808
	desc = EVTDESC_MNM_7808
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dark_divorce_target

	picture = {
		picture = GFX_evt_bad_news_female
		trigger = { event_target:dark_divorce_target = { is_female = yes } }
	}
	picture = {
		picture = GFX_evt_bad_news
		trigger = { event_target:dark_divorce_target = { is_female = no } }
	}

	is_triggered_only = yes

	immediate = {
		event_target:dark_divorce_target = {
			add_trait_possessed_effect = yes
		}
	}

	option = {
		name = EVTOPTA_MNM_7808

		character_event = {
			id = MNM.7810
			days = 1
			random = 22
		}
	}
}

# Dark Divorce spouse dies from suicide event
character_event = {
	id = MNM.7810
	desc = EVTDESC_MNM_7810
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dark_divorce_target

	picture = {
		picture = GFX_evt_bad_news_female
		trigger = { event_target:dark_divorce_target = { is_female = yes } }
	}
	picture = {
		picture = GFX_evt_bad_news
		trigger = { event_target:dark_divorce_target = { is_female = no } }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_7810

		event_target:dark_divorce_target = {
			show_scope_change = no

			death = {
				death_reason = death_murder_unknown_possessed_fall
				killer = ROOT
			}
		}

		hidden_effect = { major_soul_corruption_effect = yes }
	}
}


# Power: Summon familiar
character_event = {
	id = MNM.7815
	desc = EVTDESC_MNM_7815
	picture = GFX_evt_mysterious_forest
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # devil_worshipers_summon_familiar, mnm_devil_worshipers_decisions.txt

	immediate = {
		remove_character_modifier = cat_familiar
		remove_character_modifier = raven_familiar
		remove_character_modifier = owl_familiar
		remove_character_modifier = wolf_familiar
	}

	# Intrigue (cat)
	option = {
		name = EVTOPTA_MNM_7815

		add_character_modifier = {
			name = cat_familiar
			duration = -1
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 3
				has_education_intrigue_trigger = yes
			}
		}
	}

	# Martial (wolf)
	option = {
		name = EVTOPTB_MNM_7815

		add_character_modifier = {
			name = wolf_familiar
			duration = -1
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 3
				has_education_martial_trigger = yes
			}
		}
	}

	# Owl (learning)
	option = {
		name = EVTOPTC_MNM_7815

		add_character_modifier = {
			name = owl_familiar
			duration = -1
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 3
				has_education_learning_trigger = yes
			}
		}
	}

	# Raven familiar
	option = {
		name = EVTOPTD_MNM_7815

		add_character_modifier = {
			name = raven_familiar
			duration = -1
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 3
				has_education_stewardship_trigger = yes
			}
		}
	}
}


# Power: Tainted touch
character_event = {
	id = MNM.7819

	hide_window = yes
	is_triggered_only = yes # mnm_devil_worshipers_decisions.txt

	immediate = {
		random_list = {
			30 = { # Mild
				random_list = {
					10 = { give_ill_effect = yes }

					10 = {
						trigger = { has_dlc = "Reapers" }
						give_flu_effect = yes
					}

					10 = {
						trigger = { has_dlc = "Reapers" }
						give_food_poisoning_effect = yes
					}

					10 = {
						trigger = { has_dlc = "Reapers" }
						give_gout_effect = yes
					}
				}
			}

			50 = { # Dangerous
				mult_modifier = {
					factor = 1.3
					event_target:curser = {
						society_rank == 4
					}
				}
				mult_modifier = {
					factor = 1.3
					event_target:curser = {
						is_learned_trigger = yes
					}
				}
				mult_modifier = {
					factor = 0.75
					has_character_flag = small_defense_against_dark_forces
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = medium_defense_against_dark_forces
				}
				mult_modifier = {
					factor = 0.1
					has_character_flag = large_defense_against_dark_forces
				}

				random_list = {
					10 = { give_pneumonic_effect = yes }
					10 = { give_great_pox_effect = yes }
					10 = { give_consumption_effect = yes }
					10 = { give_smallpox_effect = yes }
					10 = { give_measles_effect = yes }
					10 = { give_slow_fever_effect = yes }

					10 = {
						trigger = { has_dlc = "Reapers" }
						give_dysentery_effect = yes
					}

					10 = {
						trigger = { has_dlc = "Reapers" }
						give_cancer_effect = yes
					}
				}
			}

			20 = { # Lethal
				mult_modifier = {
					factor = 1.5
					event_target:curser = {
						society_rank == 4
					}
				}
				mult_modifier = {
					factor = 1.5
					event_target:curser = {
						is_learned_trigger = yes
					}
				}
				mult_modifier = {
					factor = 0.75
					has_character_flag = small_defense_against_dark_forces
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = medium_defense_against_dark_forces
				}
				mult_modifier = {
					factor = 0.1
					has_character_flag = large_defense_against_dark_forces
				}

				random_list = {
					50 = { give_bubonic_plague_effect = yes }

					50 = {
						trigger = { has_dlc = "Reapers" }
						give_rabies_effect = yes
					}
				}
			}
		}

		character_event = { id = MNM.7820 days = 7 }
	}
}

character_event = {
	id = MNM.7820

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_ill = yes }

			event_target:curser = {
				character_event = { id = MNM.7821 }
				hidden_effect = { major_soul_corruption_effect = yes }
			}

			# the three following lines are hook-ins from hermetics ward off evil-event:
			clr_character_flag = small_defense_against_dark_forces
			clr_character_flag = medium_defense_against_dark_forces
			clr_character_flag = large_defense_against_dark_forces
		}
		else = {
			character_event = { id = MNM.7820 days = 5 } # CleanSlate: So if something prevents/cures the disease immediately, this could just keep looping forever.
		}
	}
}

character_event = {
	id = MNM.7821
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_7821_MILD
		picture = GFX_evt_recovery
		trigger = { FROM = { has_character_flag = cursed_mild_illness } }
	}
	desc = {
		text = EVTDESC_7821_DANGEROUS
		picture = GFX_evt_illness
		trigger = { FROM = { has_character_flag = cursed_dangerous_illness } }
	}

	is_triggered_only = yes

	immediate = {
		FROM = {
			if = {
				limit = {
					OR = {
						trait = ill
						trait = great_pox
						trait = flu
						trait = food_poisoning
						trait = gout
					}
				}

				set_character_flag = cursed_mild_illness
			}
			else_if = {
				limit = {
					OR = {
						trait = pneumonic
						trait = consumption
						trait = slow_fever
						trait = smallpox
						trait = measles
						trait = dysentery
						trait = cancer
						trait = bubonic_plague
						trait = rabies
					}
				}

				set_character_flag = cursed_dangerous_illness
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_7821_MILD
			trigger = { FROM = { has_character_flag = cursed_mild_illness } }
		}
		name = {
			text = EVTOPTA_MNM_7821_DANGEROUS
			trigger = { FROM = { has_character_flag = cursed_dangerous_illness } }
		}

		FROM = {
			clr_character_flag = cursed_mild_illness
			clr_character_flag = cursed_dangerous_illness
		}
	}
}


# Power: invite witch to court
character_event = {
	id = MNM.7822
	desc = EVTDESC_MNM_7822
	picture = GFX_evt_magic_ritual
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:devil_disciple

	picture = {
		picture = GFX_evt_wise_woman
		trigger = {
			event_target:devil_disciple = { is_female = yes }
		}
	}
	picture = {
		picture = GFX_evt_magic_ritual
		trigger = {
			event_target:devil_disciple = { is_female = no }
		}
	}

	is_triggered_only = yes # devil_worshipers_invite_disciple_of_devil, mnm_devil_worshipers_decisions.txt for player, on_yearly_pulse via MNM.7823 for AI

	immediate = {
		clr_character_flag = disciple_arriving

		create_character = {
			random_traits = yes
			dynasty = none
			religion = ROOT
			female = 60
			age = 20
			health = 7
		}

		new_character = {
			save_event_target_as = devil_disciple

			# Join PREV's (ROOT's) society
			if = {
				limit = { ROOT = { ai = no } }
				join_prev_devil_worshiper_society_effect = yes
			}

			# Age variation
			random_list = {
				33 = { }
				33 = { add_age = 20 }
				33 = { add_age = 45 }
			}
			random_list = {
				3 = { }
				1 = { add_age = -3 }
				1 = { add_age = -2 }
				1 = { add_age = -1 }
				1 = { add_age = 1 }
				1 = { add_age = 2 }
				1 = { add_age = 3 }
			}

			# Set correct education
			clear_education_trait = yes

			random_list = {
				15 = { add_trait = flamboyant_schemer }
				15 = { add_trait = intricate_webweaver }
				10 = { add_trait = elusive_shadow }
				 5 = { add_trait = grey_eminence }
				 5 = { add_trait = brilliant_strategist }
				 5 = { add_trait = midas_touched }
			}

			# Up intrigue
			random_list = {
				33 = { change_intrigue = 2 }
				33 = { change_intrigue = 3 }
				33 = { change_intrigue = 4 }
			}

			# Set some interesting traits

			# Possessed/lunatic
			random = {
				chance = 10
				add_trait = possessed
			}

			random = {
				chance = 5
				add_trait = lunatic
			}

			# Nice congenital
			random_list = {
				20 = {
					remove_trait = ugly
					add_trait = attractive
				}

				10 = {
					remove_trait = imbecile
					remove_trait = quick
					remove_trait = slow
					add_trait = genius
				}

				20 = {
					remove_trait = imbecile
					remove_trait = genius
					remove_trait = slow
					add_trait = quick
				}

				10 = {
					remove_trait = weak
					add_trait = strong
				}

				40 = { }
			}

			# Bad congenital
			random_list = {
				10 = {
					remove_trait = attractive
					add_trait = ugly
				}

				10 = { add_trait = hunchback }
				10 = { add_trait = clubfooted }
				50 = { }
			}

			# Lifestyle
			remove_lifestyle_trait_effect = yes

			random_list = {
				20 = { }
				15 = { add_trait = hedonist }
				15 = { add_trait = mystic }
				10 = { add_trait = master_schemer }
				 5 = { add_trait = gardener }
				 5 = { add_trait = impaler }

				10 = {
					if = {
						limit = { is_female = yes }
						add_trait = master_seductress
					}
					else = {
						add_trait = master_seducer
					}
				}
			}

			# Vices
			remove_trait = chaste
			remove_trait = humble

			random = {
				chance = 25
				add_trait = lustful
			}

			random = {
				chance = 25
				add_trait = proud
			}

			random = {
				chance = 15
				remove_trait = charitable
				add_trait = greedy
			}

			random = {
				chance = 10
				remove_trait = temperate
				add_trait = gluttonous
			}

			random = {
				chance = 10
				remove_trait = kind
				add_trait = envious
			}

			# Misc traits
			remove_trait = honest
			remove_trait = content
			remove_trait = zealous
			remove_trait = trusting

			random = {
				chance = 15
				add_trait = deceitful
			}

			random = {
				chance = 33
				add_trait = ambitious
			}

			random = {
				chance = 15
				add_trait = paranoid
			}

			random = {
				chance = 15
				remove_trait = kind
				add_trait = cruel
			}

			random = {
				chance = 15
				add_trait = homosexual
			}

			if = {
				limit = { has_dlc = "Reapers" }

				random = {
					chance = 15
					add_trait = physician
				}

				random = {
					chance = 5

					mult_modifier = {
						factor = 4
						society_member_of = the_trollcrafters
					}

					add_trait = one_eyed
				}
			}

			# Females should be able to lead armies
			set_character_flag = special_marshal

			# Nicknames
			random_list = {
				10 = { give_nickname = nick_the_alchemist }
				10 = { give_nickname = nick_of_the_wilds }
				10 = { give_nickname = nick_the_black }

				10 = {
					trigger = {
						OR = {
							trait = deceitful
							trait = elusive_shadow
							trait = intricate_webweaver
						}
					}

					give_nickname = nick_the_spider
				}

				10 = {
					trigger = { has_education_intrigue_trigger = yes }
					give_nickname = nick_the_whisperer
				}

				10 = {
					trigger = { has_education_intrigue_trigger = yes }
					give_nickname = nick_the_shadow
				}

				10 = {
					trigger = {
						is_female = yes

						OR = {
							trait = master_seductress
							trait = lustful
						}
					}

					give_nickname = nick_the_temptress
				}

				10 = {
					trigger = {
						is_female = no

						OR = {
							trait = master_seducer
							trait = lustful
						}

					}
					give_nickname = nick_the_seducer
				}

				10 = {
					trigger = {
						is_female = yes
						has_fair_trait_trigger = yes
					}

					give_nickname = nick_the_fair
				}

				10 = {
					trigger = {
						is_female = no
						has_fair_trait_trigger = yes
					}

					give_nickname = nick_the_handsome
				}

				10 = {
					trigger = { trait = hunchback }
					give_nickname = nick_the_hunchback
				}

				50 = { }
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_7822

		reverse_opinion = {
			name = opinion_loyal_servant
			who = event_target:devil_disciple
		}
	}
}

# AI has a chance to get a devilish disciple on_yearly_pulse, rather than using the decision
character_event = {
	id = MNM.7823

	hide_window = yes
	is_triggered_only = yes # on_yearly_pulse, random_events

	has_dlc = "Mystics"
	ai = yes
	is_in_society = yes

	trigger = {
		is_devil_worshiper_trigger = yes
		society_rank >= 3
		NOT = { has_character_flag = disciple_arriving }
	}

	immediate = {
		character_event = { id = MNM.7822 }
	}
}


## Sacrifice prisoner events

# Head of Religion or Holy man
character_event = {
	id = MNM.7500
	desc = MNM.7500.d
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # prisoner_dark_sacrifice, mnm_devil_worshipers_decisions.txt

	ai = no

	option = {
		name = MNM.7500.a
	}
}

# Dwarf
character_event = {
	id = MNM.7502
	desc = MNM.7502.d
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # prisoner_dark_sacrifice, mnm_devil_worshipers_decisions.txt

	ai = no

	option = {
		name = MNM.7502.a
	}
}

# Child
character_event = {
	id = MNM.7503
	desc = MNM.7503.d
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # prisoner_dark_sacrifice, mnm_devil_worshipers_decisions.txt

	ai = no

	option = {
		name = MNM.7503.a
	}
}

# Virgin
character_event = {
	id = MNM.7504
	desc = MNM.7504.d
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # prisoner_dark_sacrifice, mnm_devil_worshipers_decisions.txt

	ai = no

	option = {
		name = MNM.7504.a
	}
}

# Regular dude
character_event = {
	id = MNM.7505
	desc = MNM.7505.d
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # prisoner_dark_sacrifice, mnm_devil_worshipers_decisions.txt

	ai = no

	option = {
		name = MNM.7505.a
	}
}

# Sacrifice's reaction
long_character_event = {
	id = MNM.7506
	desc = MNM.7506.d
	picture = GFX_evt_sacrifice
	border = GFX_event_long_frame_intrigue

	is_triggered_only = yes # prisoner_dark_sacrifice, mnm_devil_worshipers_decisions.txt; MNM.7509 - Prolong life sacrifice

	ai = no

	option = {
		name = MNM.7506.a
	}
}


# Power: Demonic impregnation
character_event = {
	id = MNM.7507
	picture = GFX_evt_dark_love
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7507_SELF
		trigger = { character = FROM }
	}
	desc = {
		text = EVTDESC_MNM_7507_OTHER
		trigger = { NOT = { character = FROM } }
	}

	is_triggered_only = yes # DW_demonic_impregnation, mnm_devil_worshipers_decisions.txt

	option = {
		name = EVTOPTA_MNM_7507

		custom_tooltip = { text = EVTOPTA_MNM_7507_TOOLTIP }

		hidden_effect = {
			if = {
				limit = { has_quest = quest_the_devil_worshipers_demonic_impregnation }

				FROM = {
					set_quest_target = {
						id = quest_the_devil_worshipers_demonic_impregnation
						holder = ROOT
					}
				}
			}

			FROM = {
				impregnate = 0
				set_character_flag = DW_unholy_mother
			}
		}
	}
}

# Demonic pregnancy - Birth
character_event = {
	id = MNM.7508

	hide_window = yes
	is_triggered_only = yes # on_birth

	trigger = {
		mother = { has_character_flag = DW_unholy_mother }
	}

	immediate = {
		add_trait = lefthanded
		remove_trait = sickly
		set_character_flag = demon_child_non_pagan
		set_global_flag = demon_child_born

		add_character_modifier = {
			name = demon_child_non_pagan
			duration = -1
			hidden = yes
		}

		character_event = {
			id = SoA.3019 # Demon child tombola
			days = 90
			random = 90
		}

		mother = {
			clr_character_flag = DW_unholy_mother
			save_event_target_as = unholy_mother

			any_quester_targeting_this = {
				limit = { has_quest = quest_the_devil_worshipers_demonic_impregnation }
				character_event = { id = MNM.7511 days = 10 }
			}

			trigger_switch = {
				on_trigger = society_member_of

				the_satanists = {
					ROOT = { set_character_flag = demonspawn_will_join_satanists }
				}

				the_cold_ones = {
					ROOT = { set_character_flag = demonspawn_will_join_cold_ones }
				}

				the_plaguebringers = {
					ROOT = { set_character_flag = demonspawn_will_join_plaguebringers }
				}

				the_cult_of_kali = {
					ROOT = { set_character_flag = demonspawn_will_join_cult_of_kali }
				}

				the_trollcrafters = {
					ROOT = { set_character_flag = demonspawn_will_join_trollcrafters }
				}

				the_bacchants = {
					ROOT = { set_character_flag = demonspawn_will_join_bacchants }
				}

				the_vodouns = {
					ROOT = { set_character_flag = demonspawn_will_join_vodouns }
				}
			}
		}

		# random_list = {
		#	50 = { set_character_flag = demon_child_non_pagan }
		#	50 = { set_character_flag = demon_child_fake }
		# }
	}
}

# Demonic pregnancy - Announcement
character_event = {
	id = MNM.7511
	picture = GFX_evt_magic_ritual
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7511_SELF
		trigger = { is_parent_of = FROM }
	}
	desc = {
		text = EVTDESC_MNM_7511_OTHER
		trigger = { NOT = { is_parent_of = FROM } }
	}

	is_triggered_only = yes

	trigger = { has_quest = quest_the_devil_worshipers_demonic_impregnation }

	option = {
		name = EVTOPTA_MNM_7511

		clr_quest = quest_the_devil_worshipers_demonic_impregnation
		add_society_currency_massive_effect = yes

		if = {
			limit = { FROM = { is_female = yes } }
			sound_effect = devil_worshippers_impregnation_courtier_female
		}
		else = {
			sound_effect = devil_worshippers_impregnation_courtier_male
		}
	}
}


# Power: Prolong life sacrifice
character_event = {
	id = MNM.7509
	desc = MNM.7509.d
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # DW_prolong_life, mnm_devil_worshipers_decisions.txt

	option = {
		name = MNM.7509.a

		save_event_target_as = satanist

		FROM = {
			show_scope_change = no

			long_character_event = { id = MNM.7506 }
			death = { death_reason = death_missing }
		}

		add_prolong_life_effect = yes
		hidden_effect = { minor_soul_corruption_effect = yes }
		character_event = { id = MNM.7510 days = 3651 }
	}
}

# Prolong life effect fades notification
character_event = {
	id = MNM.7510
	desc = MNM.7510.d
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	ai = no

	trigger = {
		NOR = {
			has_character_modifier = stolen_life_minor
			has_character_modifier = stolen_life_medium
			has_character_modifier = stolen_life_major
		}
	}

	option = {
		name = MNM.7510.a # Info only
	}
}

### MISSIONS ###

# CleanSlate: Offset to avoid firing events on same day as random society events. Previously occured between tombola and quest event.
character_event = {
	id = MNM.7200

	hide_window = yes
	is_triggered_only = yes # on_society_bi_yearly_pulse

	immediate = {
		character_event = {
			id = MNM.7201
			days = 7
			random = 7
		}
	}
}


## DW Mission Tombola
character_event = {
	id = MNM.7201

	hide_window = yes
	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		has_any_quest = no
		is_devil_worshiper_trigger = yes
		is_inaccessible_trigger = no
		is_society_grandmaster = no
		NOT = { has_character_modifier = quest_cooldown_timer }
	}

	immediate = {
		society = {
			leader = { save_event_target_as = grand_enchanter }
		}

		random_list = {
			20 = {
				trigger = {
					society_rank > 1
					is_playable = yes

					any_character = {
						is_priest = yes
						religion = ROOT
						ai = yes
						is_offmap_ruler = no
						is_inaccessible_or_incapable_trigger = no

						NOR = {
							character = ROOT
							same_society_as = ROOT
						}

						trigger_if = {
							limit = { ROOT = { ai = no } }
							is_within_diplo_range = ROOT
						}
						trigger_else = {
							same_realm = ROOT
						}
					}
				}

				society_quest_event = { id = MNM.7839 } # Corrupt a priest
			}

			20 = {
				trigger = {
					is_playable = yes

					any_realm_province = {
						held_under_PREV = yes

						any_province_holding = {
							holding_type = temple

							owner = {
								religion = ROOT

								NOR = {
									character = ROOT
									same_society_as = ROOT
								}
							}
						}
					}
				}

				society_quest_event = { id = MNM.7110 } # desecrate a temple
			}

			20 = {
				trigger = { is_playable = yes }
				society_quest_event = { id = MNM.7025 } # sacrifice someone
			}

			20 = {
				trigger = {
					society_rank >= 3
					is_playable = yes
					NOT = { has_character_flag = given_unholy_impregnation_mission }
				}

				set_character_flag = given_unholy_impregnation_mission
				society_quest_event = { id = MNM.7027 } # demonic impregnation
			}

			20 = {
				trigger = {
					society_rank > 1
					is_playable = yes

					any_courtier = {
						ai = yes
						is_adult = yes
						is_incapable = no

						NOR = {
							character = ROOT
							same_society_as = ROOT
							trait = lunatic
							trait = possessed
						}
					}
				}

				society_quest_event = { id = MNM.7029 } # demonic possession
			}

			75 = { # AI bypasses missions at times
				trigger = { ai = yes }

				random_list = {
					70 = {
						mult_modifier = {
							factor = 0.9
							society_influence >= 30
						}
						mult_modifier = {
							factor = 0.9
							society_influence >= 40
						}
						mult_modifier = {
							factor = 0.8
							society_influence >= 50
						}
						mult_modifier = {
							factor = 0.7
							society_influence >= 70
						}
						mult_modifier = {
							factor = 0.6
							society_influence >= 80
						}
						mult_modifier = {
							factor = 0.5
							society_influence >= 90
						}

						add_mission_succeed_influence_effect = yes
					}

					30 = { add_mission_fail_influence_effect = yes }
				}
			}

			200 = {
				trigger = { ai = yes }
				# Do nothing for AI
			}
		}
	}
}

### MISSION: Desecrate temple ###

# Assign event
society_quest_event = {
	id = MNM.7110
	desc = EVTDESC_MNM_7110
	portrait = event_target:grand_enchanter
	quest_target = event_target:dw_desecration_target

	is_triggered_only = yes

	immediate = {
		random_realm_province = {
			limit = {
				held_under_PREV = yes

				any_province_holding = {
					holding_type = temple

					owner = {
						religion = ROOT

						NOR = {
							character = ROOT
							same_society_as = ROOT
						}
					}
				}
			}

			preferred_limit = {
				NOT = { owned_by = ROOT }
			}

			random_province_holding = {
				limit = {
					holding_type = temple

					owner = {
						religion = ROOT

						NOR = {
							character = ROOT
							same_society_as = ROOT
						}
					}
				}

				save_event_target_as = dw_desecration_target
			}
		}
	}


	option = {
		name = ACCEPT

		event_target:dw_desecration_target = {
			show_scope_change = no

			set_quest_target = {
				id = quest_devil_worshipers_desecrate_temple
				holder = ROOT
			}
		}
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}
}

# Start desecrate temple via siege
# ROOT is the owner of the winning unit
# FROM is the taken holding title
character_event = {
	id = MNM.7111
	desc = EVTDESC_MNM_7111
	picture = GFX_evt_shadowy_cabal
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # on_siege_over_winner

	only_capable = yes
	prisoner = no

	trigger = {
		FROM = { is_quest_target_of = ROOT }
		has_quest = quest_devil_worshipers_desecrate_temple
		is_inaccessible_trigger = no
	}

	immediate = {
		FROM = { save_event_target_as = dw_desecration_target }
		set_character_flag = desecration_in_progress
	}

	# take opportunity to desecrate, start desecration chain
	option = {
		name = EVTOPTA_MNM_7111

		set_character_flag = desecration_violent

		character_event = {
			id = MNM.7113
			days = 4
		}
	}

	# too dangerous
	option = {
		name = EVTOPTB_MNM_7111

		clr_character_flag = desecration_in_progress
		detract_society_currency_minor_effect = yes
	}
}

# Start desecrate temple via title decision
character_event = {
	id = MNM.7112
	desc = EVTDESC_MNM_7112
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # devil_worshiper_desecrate_temple_decision, mnm_devil_worshipers_decisions.txt
	hide_from = yes

	immediate = {
		quest_target = { save_event_target_as = dw_desecration_target }
	}

	option = {
		name = EVTOPT_MNM_7112

		set_character_flag = desecration_plotting

		character_event = {
			id = MNM.7113
			days = 7
		}
	}
}

# Detection choice, martial to cover up with violence, intrigue to be real sneaky, general choice of lots of currency but risk of discovery or little currency but little risk
character_event = {
	id = MNM.7113
	picture = GFX_evt_secluded_in_prayer
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7113_VIOLENT_HOLDER
		trigger = {
			has_character_flag = desecration_violent

			event_target:desecration_holder = {
				has_character_flag = desecration_at_home
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7113_PLOTTING_HOLDER
		trigger = {
			has_character_flag = desecration_plotting

			event_target:desecration_holder = {
				has_character_flag = desecration_at_home
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7113_VIOLENT
		trigger = {
			has_character_flag = desecration_violent

			NOT = {
				event_target:desecration_holder = {
					has_character_flag = desecration_at_home
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7113_PLOTTING
		trigger = {
			has_character_flag = desecration_plotting

			NOT = {
				event_target:desecration_holder = {
					has_character_flag = desecration_at_home
				}
			}
		}
	}

	is_triggered_only = yes

	trigger = {
		is_devil_worshiper_trigger = yes
		has_quest = quest_devil_worshipers_desecrate_temple
	}

	immediate = {
		event_target:dw_desecration_target = {
			holder_scope = {
				save_event_target_as = desecration_holder

				if = {
					limit = { is_abroad = no }

					random = {
						chance = 50
						set_character_flag = desecration_at_home
					}
				}
			}
		}
	}

	option = {
		name = EVTOPT_MNM_7113_MARTIAL
		tooltip_info = martial

		trigger = {
			has_character_flag = desecration_violent

			OR = {
				martial >= 14
				combat_rating >= 30
			}
		}

		add_society_currency_minor_effect = yes

		event_target:desecration_holder = {
			show_scope_change = no

			if = {
				limit = { has_character_flag = desecration_at_home }
				death = { death_reason = death_sacrificed }
			}
		}

		hidden_effect = { minor_soul_corruption_effect = yes }
		character_event = { id =  MNM.7116 days = 7 }
	}

	option = {
		name = EVTOPT_MNM_7113_INTRIGUE
		tooltip_info = intrigue

		trigger = {
			has_character_flag = desecration_plotting
			intrigue >= 14
		}

		add_society_currency_minor_effect = yes

		event_target:desecration_holder = {
			show_scope_change = no

			if = {
				limit = { has_character_flag = desecration_at_home }
				death = { death_reason = death_sacrificed }
			}
		}

		hidden_effect = { minor_soul_corruption_effect = yes }
		character_event = { id = MNM.7116 days = 7 }
	}

	option = {
		name = EVTOPTA_MNM_7113

		hidden_effect = {
			random_list = {
				25 = {character_event = { id = MNM.7114 days = 3 } }
				75 = { character_event = { id = MNM.7116 days = 7 } }
			}
		}
	}

	option = {
		name = {
			text = EVTOPTB_MNM_7113_VIOLENT
			trigger = { has_character_flag = desecration_violent }
		}
		name = {
			text = EVTOPTB_MNM_7113_PLOTTING
			trigger = { has_character_flag = desecration_plotting }
		}

		hidden_effect = {
			random_list = {
				50 = {
					# DETECTED!
					mult_modifier = {
						factor = 3
						has_character_flag = desecration_violent
					}

					character_event = { id = MNM.7114 days = 3 }
				}

				50 = {
					# SNEAKY
					mult_modifier = {
						factor = 3
						has_character_flag = desecration_plotting
					}

					character_event = { id = MNM.7116 days = 7 }
				}
			}
		}
	}
}

# Priest/escape
character_event = {
	id = MNM.7114
	picture = GFX_evt_shadowy_cabal
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7114_HOLDER
		trigger = {
			event_target:desecration_holder = {
				has_character_flag = desecration_at_home
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7114
		trigger = {
			NOT = {
				event_target:desecration_holder = {
					has_character_flag = desecration_at_home
				}
			}
		}
	}

	is_triggered_only = yes

	trigger = {
		is_devil_worshiper_trigger = yes
		has_quest = quest_devil_worshipers_desecrate_temple
	}

	option = {
		name = EVTOPTA_MNM_7114

		hidden_effect = {
			random_list = {
				50 = {
					event_target:desecration_holder = {
						if = {
							limit = { has_character_flag = desecration_at_home }

							death = {
								death_reason = death_murder_unknown
								killer = ROOT
							}
						}
					}
				}

				50 = {
					increase_visibility_effect = yes
					set_character_flag = desecration_revealed
				}
			}
		}

		random_list = {
			75 = { }
			20 = { add_trait_silently_wounded_effect = yes }
			 5 = { add_maimed_trait_effect = yes }
		}

		character_event = { id = MNM.7116 days = 7 }
	}

	option = {
		name = EVTOPTB_MNM_7114

		clr_quest = {
			id = quest_devil_worshipers_desecrate_temple
			failure = yes
		}

		clr_character_flag = desecration_in_progress

		hidden_effect = {
			event_target:desecration_holder = {
				clr_character_flag = desecration_at_home
			}
		}
	}
}


# Finds holy relics, steal or destroy
character_event = {
	id = MNM.7116
	picture = GFX_evt_burning_house
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7116_POOR
		trigger = {
			event_target:dw_desecration_target = {
				is_rich_holding = no
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7116_RICH
		picture = GFX_evt_treasure_chamber
		trigger = {
			event_target:dw_desecration_target = {
				is_rich_holding = yes
				is_richer_holding = no
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_7116_RICHER
		picture = GFX_evt_treasure_chamber
		trigger = {
			event_target:dw_desecration_target = {
				is_richer_holding = yes
			}
		}
	}

	is_triggered_only = yes

	trigger = {
		is_devil_worshiper_trigger = yes
		has_quest = quest_devil_worshipers_desecrate_temple
	}

	# take most valuable
	option = {
		name = EVTOPT_MNM_7116_STEWARDSHIP
		tooltip_info = stewardship

		trigger = { stewardship >= 20 }

		add_society_currency_minor_effect = yes

		if = {
			limit = {
				event_target:dw_desecration_target = {
					is_richer_holding = yes
				}
			}

			scaled_wealth = {
				value = 0.3
				min = 100
			}
		}
		else_if = {
			limit = {
				event_target:dw_desecration_target = {
					is_rich_holding = yes
				}
			}

			scaled_wealth = {
				value = 0.2
				min = 40
			}
		}
		else = {
			scaled_wealth = {
				value = 0.1
				min = 15
			}
		}
	}

	# identify and destroy most holy
	option = {
		name = EVTOPT_MNM_7116_LEARNING
		tooltip_info = learning

		trigger = { learning >= 20 }

		add_society_currency_medium_effect = yes
	}

	option = {
		name = EVTOPTA_MNM_7116

		if = {
			limit = {
				event_target:dw_desecration_target = {
					is_richer_holding = yes
				}
			}

			scaled_wealth = {
				value = 0.2
				min = 40
			}
		}
		else_if = {
			limit = {
				event_target:dw_desecration_target = {
					is_rich_holding = yes
				}
			}

			scaled_wealth = {
				value = 0.1
				min = 20
			}
		}
		else = {
			scaled_wealth = {
				value = 0.05
				min = 5
			}
		}

		ai_chance = {
			factor = 1

			trigger = { stewardship < 20 }
		}
	}

	option = {
		name = EVTOPTB_MNM_7116

		add_society_currency_trivial_effect = yes

		ai_chance = {
			factor = 1

			trigger = { learning < 20 }
		}
	}

	after = {
		character_event = {
			id = MNM.7117
			days = 4
		}
	}
}

# finishing narrative piece
character_event = {
	id = MNM.7117
	picture = GFX_evt_sacrifice
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_7117_VIOLENT
		trigger = { has_character_flag = desecration_violent }
	}

	desc = {
		text = EVTDESC_MNM_7117_PLOTTING
		trigger = { has_character_flag = desecration_plotting }
	}

	is_triggered_only = yes

	trigger = {
		is_devil_worshiper_trigger = yes
		has_quest = quest_devil_worshipers_desecrate_temple
	}

	option = {
		name = EVTOPT_MNM_7117_VIOLENT
		trigger = { has_character_flag = desecration_violent }

		clr_character_flag = desecration_violent
		add_society_currency_minor_effect = yes
	}

	option = {
		name = EVTOPT_MNM_7117_PLOTTING
		trigger = { has_character_flag = desecration_plotting }

		clr_character_flag = desecration_plotting
		add_society_currency_medium_effect = yes
	}

	after = {
		event_target:dw_desecration_target = {
			show_scope_change = no

			add_holding_modifier = {
				name = desecrated_temple
				years = 5
				hidden = yes
			}
		}

		event_target:desecration_holder = {
			show_scope_change = no

			clr_character_flag = desecration_at_home

			religion_authority = {
				name = temple_desecrated
				years = 30
			}
		}

		clr_character_flag = desecration_in_progress
		clr_quest = quest_devil_worshipers_desecrate_temple
		sound_effect = devil_worshippers_desecrate_temple

		hidden_effect = {
			random = {
				chance = 50
				minor_soul_corruption_effect = yes
			}
		}
	}
}


# MISSION: Corrupt a priest
# We want you to corrupt this priest!
society_quest_event = {
	id = MNM.7839
	desc = EVTDESC_MNM_7839
	portrait = event_target:grand_enchanter
	quest_target = event_target:corrupt_priest_mission_target

	is_triggered_only = yes

	immediate = {
		random_character = {
			limit = {
				is_priest = yes
				religion = ROOT
				ai = yes
				is_offmap_ruler = no
				is_inaccessible_or_incapable_trigger = no

				NOR = {
					character = ROOT
					same_society_as = ROOT
				}

				trigger_if = {
					limit = { ROOT = { ai = no } }
					is_within_diplo_range = ROOT
				}
				trigger_else = {
					same_realm = ROOT
				}
			}

			preferred_limit = {
				ROOT = { society_rank >= 3 }
				higher_tier_than = BARON
			}

			preferred_limit = {
				ROOT = { society_rank >= 2 }
				higher_tier_than = BARON
				lower_tier_than = KING
			}

			save_event_target_as = corrupt_priest_mission_target
		}
	}

	option = { # accept
		name = ACCEPT
		show_portrait = event_target:corrupt_priest_mission_target

		event_target:corrupt_priest_mission_target = {
			set_quest_target = {
				id = quest_devil_worshipers_corrupt_priest
				holder = ROOT
			}
		}
	}

	option = { # nah thx
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		hidden_effect = {
			add_character_modifier = {
				name = quest_cooldown_timer
				days = 1000
				hidden = yes
			}
		}

		ai_chance = { factor = 0 }
	}
}


# MISSION: Sacrifice character
## For the character that gets the mission Sacrifice someone
society_quest_event = {
	id = MNM.7025
	desc = EVTDESC_MNM_7025
	border = GFX_event_letter_frame_intrigue
	portrait = event_target:grand_enchanter

	is_triggered_only = yes

	immediate = {
		random_list = {
			10 = { set_character_flag = sacrifice_ruler }
			10 = { set_character_flag = sacrifice_holy_person }
			10 = { set_character_flag = sacrifice_virgin }
			 5 = { set_character_flag = sacrifice_dwarf }
		}
	}

	option = {
		name = ACCEPT

		trigger_switch = {
			on_trigger = has_character_flag

			sacrifice_ruler       = { set_quest = quest_the_devil_worshipers_sacrifice_ruler }
			sacrifice_holy_person = { set_quest = quest_the_devil_worshipers_sacrifice_holy_person }
			sacrifice_virgin      = { set_quest = quest_the_devil_worshipers_sacrifice_virgin }
			sacrifice_dwarf       = { set_quest = quest_the_devil_worshipers_sacrifice_dwarf }
		}
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}

	after = {
		clr_character_flag = sacrifice_ruler
		clr_character_flag = sacrifice_holy_person
		clr_character_flag = sacrifice_virgin
		clr_character_flag = sacrifice_dwarf
	}
}


# MISSION: Demonic impregnation
## For the character that gets the mission Demonic Impregnation
society_quest_event = {
	id = MNM.7027
	desc = EVTDESC_MNM_7027
	portrait = event_target:grand_enchanter

	is_triggered_only = yes

	option = {
		name = ACCEPT

		set_quest = quest_the_devil_worshipers_demonic_impregnation
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}
}


# MISSION: Demonic posesssion
## For the character that gets the mission Demonic Possession
society_quest_event = {
	id = MNM.7029
	desc = EVTDESC_MNM_7029
	border = GFX_event_letter_frame_intrigue
	portrait = event_target:grand_enchanter
	quest_target = event_target:demonic_possession_mission_target

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				ai = yes
				is_adult = yes
				is_incapable = no

				NOR = {
					character = ROOT
					same_society_as = ROOT
					trait = lunatic
					trait = possessed
				}
			}

			save_event_target_as = demonic_possession_mission_target
		}
	}

	option = {
		name = ACCEPT
		show_portrait = event_target:demonic_possession_mission_target

		event_target:demonic_possession_mission_target = {
			set_quest_target = {
				id = quest_the_devil_worshipers_demonic_possession
				holder = ROOT
			}
		}

	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}
}

## Power: Demonic Possession ##

# Event for Demonic Possession Spellcasting
character_event = {
	id = MNM.7841
	desc = EVTDESC_MNM_7841
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:possess_courtier_target

	is_triggered_only = yes # mnm_devil_worshipers_decisions.txt

	option = { # Possess them
		name = EVTOPTA_MNM_7841

		custom_tooltip = { text = EVTOPTA_MNM_7841_TOOLTIP }

		hidden_effect = {
			random_list = {
				80 = {
					character_event = { # controlled possession
						id = MNM.7843
						days = 6
						random = 54
					}
				}

				10 = {
					character_event = { # just possession
						id = MNM.7844
						days = 6
						random = 54
					}
				}

				10 = {
					character_event = { # lunatic instead of possession
						id = MNM.7845
						days = 6
						random = 54
					}
				}
			}
		}
	}

	option = { # No I won't
		name = EVTOPTB_MNM_7841

		custom_tooltip = { text = EVTOPTB_MNM_7841_TOOLTIP }

		hidden_effect = {
			event_target:possess_courtier_target = {
				clr_character_flag = possessing_courtier
			}
		}

		ai_chance = { factor = 0 }
	}
}

# Demonic Possession Success event
character_event = {
	id = MNM.7843
	desc = EVTDESC_MNM_7843
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:possess_courtier_target

	is_triggered_only = yes

	immediate = {
		event_target:possess_courtier_target = { add_trait = possessed }
	}

	option = {
		name = EVTOPTA_MNM_7843

		# If quest holder, clear quest and reward
		if = {
			limit = {
				has_quest = quest_the_devil_worshipers_demonic_possession
				quest_target = { character = event_target:possess_courtier_target }
			}

			clr_quest = quest_the_devil_worshipers_demonic_possession
			add_society_currency_medium_effect = yes
		}

		if = {
			limit = { event_target:possess_courtier_target = { is_female = yes } }
			sound_effect = devil_worshippers_demonic_possession_female
		}
		else = {
			sound_effect = devil_worshippers_demonic_possession_male
		}

		reverse_opinion = {
			name = opinion_loyal_servant
			who = event_target:possess_courtier_target
		}

		hidden_effect = {
			minor_soul_corruption_effect = yes

			random = { # might kill you first year
				chance = 2

				character_event = {
					id = MNM.7847
					months = 6
					random = 180
				}
			}
		}
	}
}

# Demonic Possession Failure event (possession)
character_event = {
	id = MNM.7844
	desc = EVTDESC_MNM_7844
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:possess_courtier_target

	is_triggered_only = yes

	immediate = {
		event_target:possess_courtier_target = { add_trait = possessed }
	}

	option = {
		name = EVTOPTA_MNM_7844

		custom_tooltip = { text = EVTOPTA_MNM_7844_TOOLTIP }

		if = {
			limit = {
				has_quest = quest_the_devil_worshipers_demonic_possession
				quest_target = { character = FROM }
			}

			clr_quest = {
				id = quest_the_devil_worshipers_demonic_possession
				failure = yes
			}
		}

		hidden_effect = { major_soul_corruption_effect = yes }
	}
}

# Demonic Possession Failure event (lunatic)
character_event = {
	id = MNM.7845
	desc = EVTDESC_MNM_7845
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:possess_courtier_target

	is_triggered_only = yes

	immediate = {
		event_target:possess_courtier_target = { add_trait = lunatic }
	}

	option = {
		name = EVTOPTA_MNM_7845

		custom_tooltip = { text = EVTOPTA_MNM_7845_TOOLTIP }

		if = {
			limit = {
				has_quest = quest_the_devil_worshipers_demonic_possession
				quest_target = { character = FROM }
			}

			clr_quest = {
				id = quest_the_devil_worshipers_demonic_possession
				failure = yes
			}
		}

		hidden_effect = { major_soul_corruption_effect = yes }
	}
}

# Demonic Possession Failure event (they kill you)
character_event = {
	id = MNM.7847
	desc = EVTDESC_MNM_7847
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:possess_courtier_target

	is_triggered_only = yes

	trigger = { event_target:possess_courtier_target = { is_alive = yes } }

	option = {
		name = EVTOPTA_MNM_7847

		death = {
			death_reason = death_murder_unknown
			killer = event_target:possess_courtier_target
		}

		hidden_effect = {
			event_target:possess_courtier_target = {
				add_character_modifier = {
					name = suspected_assassin
					years = 4
				}
			}
		}
	}
}

###########################################
# Member Interaction Events
# Fired from 'on_society_bi_yearly_pulse'
# By Henrik Fahraeus
###########################################

###########################################
# Satanic Orgy - Hidden start
# Fired from on_society_bi_yearly_pulse
###########################################
character_event = {
	id = MNM.20000
	picture = GFX_evt_sultan
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanic_orgiast

	desc = {
		text = EVTDESC_MNM_20000
		trigger = {
			event_target:satanic_orgiast = {
				NOT = { host = { character = ROOT } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20000_COURT
		trigger = {
			event_target:satanic_orgiast = {
				host = { character = ROOT }
			}
		}
	}

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	only_playable = yes
	only_capable = yes
	prisoner = no

	trigger = {
		is_devil_worshiper_trigger = yes
		is_inaccessible_trigger = no
		NOT = { trait = celibate }
		is_ill = no

		society = {
			any_society_member = {
				ai = yes
				in_command = no
				is_ill = no
				is_inaccessible_or_incapable_trigger = no
				is_within_diplo_range = ROOT

				trigger_if = {
					limit = { is_female = yes }
					practical_age < 45
					is_pregnant = no
				}

				NOR = {
					character = ROOT
					trait = celibate
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 2.0
			trait = lustful
		}
		mult_modifier = {
			factor = 1.5
			trait = hedonist
		}
		mult_modifier = {
			factor = 3.0
			has_focus = focus_seduction
		}
		mult_modifier = {
			factor = 0.5
			trait = chaste
		}
		mult_modifier = {
			factor = 0.25
			has_character_flag = had_an_orgy
		}
	}

	immediate = {
		society = {
			random_society_member = {
				limit = {
					ai = yes
					in_command = no
					is_ill = no
					is_inaccessible_or_incapable_trigger = no
					is_within_diplo_range = ROOT

					trigger_if = {
						limit = { is_female = yes }
						practical_age < 45
						is_pregnant = no
					}

					NOR = {
						character = ROOT
						trait = celibate
					}
				}

				preferred_limit = {
					host = { character = ROOT } # First look for someone at court
				}

				preferred_limit = {
					same_realm = ROOT # Then look for someone in the same realm
				}

				# Then look abroad...
				save_event_target_as = satanic_orgiast
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20000 # Of course

		character_event = {
			id = MNM.20004
			days = 3
			tooltip = evt_MNM_20003_TT
		}

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTB_MNM_20000 # No way!

		detract_society_currency_minor_effect = yes

		reverse_opinion = {
			name = opinion_coward
			who = event_target:satanic_orgiast
			years = 5
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 200
				trait = chaste
			}
			mult_modifier = {
				factor = 50
				trait = craven
			}
		}
	}
}

# Satanic Orgy - Aftermath
character_event = {
	id = MNM.20004
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanic_orgiast

	desc = {
		text = EVTDESC_MNM_20004
		picture = GFX_evt_sultan
		trigger = {
			NOT = { has_character_flag = orgy_sex }
		}
	}
	desc = {
		text = EVTDESC_MNM_20004_SEX
		picture = GFX_evt_sultan
		trigger = {
			has_character_flag = orgy_sex

			trigger_if = {
				limit = { same_sex = event_target:satanic_orgiast }
				trait = homosexual
			}
			trigger_else = {
				NOT = { trait = homosexual }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20004_ODD_SEX
		trigger = {
			has_character_flag = orgy_sex

			trigger_if = {
				limit = { same_sex = event_target:satanic_orgiast }
				NOT = { trait = homosexual }
			}
			trigger_else = {
				trait = homosexual
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		set_character_flag = had_an_orgy
		event_target:satanic_orgiast = { save_event_target_as = sex_partner }

		random = {
			chance = 50

			unprotected_sex_effect_event_target = yes
			set_character_flag = orgy_sex

			# Homo
			if = {
				limit = {
					same_sex = event_target:satanic_orgiast
					NOT = { trait = homosexual }
				}

				random = {
					chance = 25
					set_character_flag = orgy_gain_homo_trait
				}
			}
			# Hetero
			else_if = {
				limit = {
					is_opposite_sex = event_target:satanic_orgiast
					trait = homosexual
				}

				random = {
					chance = 50
					set_character_flag = orgy_lose_homo_trait
				}
			}

			# Gain Lover?
			if = {
				limit = {
					NOT = { is_lover = event_target:satanic_orgiast }

					OR = {
						has_character_flag = orgy_lose_homo_trait
						has_character_flag = orgy_gain_homo_trait

						trigger_if = {
							limit = { same_sex = event_target:satanic_orgiast }
							trait = homosexual
						}
						trigger_else = {
							NOT = { trait = homosexual }
						}
					}
				}

				random = {
					chance = 50
					set_character_flag = orgy_lover
				}
			}
		}

		random_list = {
			100 = { # Become more lustful
				trigger = {
					NOT = { trait = lustful }
				}

				set_character_flag = orgy_sex_lustify
			}

			100 = { # Gain the "Robust" trait
				trigger = {
					NOT = { trait = brawny }
				}

				set_character_flag = orgy_gain_brawny
			}

			100 = { # Gain the "Feeble" trait
				trigger = {
					NOT = { trait = frail }
				}

				set_character_flag = orgy_gain_frail
			}

			50 = { # Gain the "Cannibal" trait
				trigger = {
					NOT = { trait = cannibal }
				}

				set_character_flag = orgy_cannibal
			}

			100 = { # Gain a demonic blessing
				trigger = {
					NOR = {
						has_character_modifier = satyric_blessing
						has_character_modifier = blessing_of_lilith
					}
				}

				set_character_flag = orgy_blessing
			}

			20 = { # Gain a "sex dwarf"
				trigger = {
					NOT = {
						any_courtier = {
							trait = dwarf
						}
					}
				}

				set_character_flag = orgy_sex_dwarf
			}
		}

		# Random courtier is ritually murdered
		random = {
			chance = 20

			random_courtier = {
				limit = {
					is_adult = yes
					prisoner = no
					is_ruler = no

					NOR = {
						character = ROOT
						character = FROM
						is_married = ROOT
						is_close_relative = ROOT
						same_society_as = ROOT
					}
				}

				ROOT = { set_character_flag = orgy_murder }
				save_event_target_as = orgy_casualty

				death = {
					death_reason = death_murder_unknown
					killer = ROOT
				}
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_20004_CANNIBAL
			trigger = { has_character_flag = orgy_cannibal }
		}
		name = {
			text = EVTOPTA_MNM_20004_GOOD # I feel good!
			trigger = {
				NOT = { has_character_flag = orgy_cannibal }

				OR = {
					has_character_flag = orgy_gain_brawny
					has_character_flag = orgy_blessing
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_20004_BAD # I feel drained...
			trigger = {
				NOT = { has_character_flag = orgy_cannibal }
				has_character_flag = orgy_gain_frail
			}
		}
		name = {
			text = EVTOPTA_MNM_20004_CHANGE
			trigger = {
				NOT = { has_character_flag = orgy_cannibal }

				OR = {
					has_character_flag = orgy_gain_homo_trait
					has_character_flag = orgy_lose_homo_trait
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_20004
			trigger = {
				NOR = {
					has_character_flag = orgy_cannibal
					has_character_flag = orgy_gain_brawny
					has_character_flag = orgy_blessing
					has_character_flag = orgy_gain_frail
					has_character_flag = orgy_gain_homo_trait
					has_character_flag = orgy_lose_homo_trait
				}
			}
		}

		# Dark Power gain
		add_society_currency_minor_effect = yes

		if = {
			limit = { has_character_flag = orgy_gain_homo_trait }
			clr_character_flag = orgy_gain_homo_trait
			add_trait = homosexual
		}
		else_if = {
			limit = { has_character_flag = orgy_lose_homo_trait }
			clr_character_flag = orgy_lose_homo_trait
			remove_trait = homosexual
		}

		if = {
			limit = { has_character_flag = orgy_lover }

			clr_character_flag = orgy_lover

			if = {
				limit = { is_rival = event_target:satanic_orgiast }
				remove_rival = event_target:satanic_orgiast
			}
			else = {
				add_lover = event_target:satanic_orgiast
			}
		}

		trigger_switch = {
			on_trigger = has_character_flag

			orgy_sex_lustify = {
				clr_character_flag = orgy_sex_lustify
				add_trait_partially_silently_lustful_effect = yes
			}

			orgy_gain_brawny = {
				clr_character_flag = orgy_gain_brawny

				if = {
					limit = { trait = frail }
					remove_trait = frail
				}
				else = {
					add_trait = brawny
				}
			}

			orgy_gain_frail = {
				clr_character_flag = orgy_gain_frail

				if = {
					limit = { trait = brawny }
					remove_trait = brawny
				}
				else = {
					add_trait = frail
				}
			}

			orgy_cannibal = {
				clr_character_flag = orgy_cannibal
				add_trait = cannibal
			}

			orgy_blessing = {
				clr_character_flag = orgy_blessing

				if = {
					limit = { is_female = yes }

					add_character_modifier = {
						name = blessing_of_lilith
						duration = -1
					}
				}
				else = {
					add_character_modifier = {
						name = satyric_blessing
						duration = -1
					}
				}
			}

			orgy_sex_dwarf = {
				clr_character_flag = orgy_sex_dwarf

				create_character = {
					random_traits = no
					dynasty = none
					religion = event_target:satanic_orgiast
					culture = event_target:satanic_orgiast
					female = no
					age = 30

					attributes = {
						intrigue = 6
						diplomacy = 9
					}

					add_trait = elusive_shadow
					add_trait = dwarf
					add_trait = one_eyed
					add_trait = cruel
					add_trait = master_seducer
					add_trait = lustful
					add_trait = drunkard
					add_trait = ugly
					add_trait = gregarious
				}

				new_character = {
					set_character_flag = sex_dwarf

					if = {
						limit = {
							ROOT = {
								NOT = { has_character_flag = orgy_sex }
								prefers_men_trigger = yes
							}
						}

						save_event_target_as = sex_partner

						ROOT = {
							set_character_flag = orgy_sex_with_dwarf
							unprotected_sex_effect_event_target = yes
						}
					}
				}

			}
		}

		# Impregnated by unspecified participant
		if = {
			limit = {
				is_female = yes
				practical_age < 45
				fertility >= 0
				is_pregnant = no

				NOR = {
					has_character_flag = orgy_sex_with_dwarf
					has_character_flag = orgy_sex
				}

				society = {
					any_society_member = {
						is_female = no
						prisoner = no
					}
				}
			}

			hidden_effect = {
				society = {
					random_society_member = {
						limit = {
							is_female = no
							prisoner = no
						}

						preferred_limit = {
							fertility >= 1
						}

						save_event_target_as = sex_partner
					}
				}

				unprotected_sex_effect_event_target = yes

				if = {
					limit = { is_pregnant = yes }
					set_character_flag = orgy_impregnated
				}
			}
		}

		clr_character_flag = orgy_sex
		clr_character_flag = orgy_sex_with_dwarf

		# Friend gained / Rivalry lost
		if = {
			limit = { is_rival = event_target:satanic_orgiast }
			remove_rival = event_target:satanic_orgiast
		}
		else_if = {
			limit = {
				NOR = {
					is_lover = event_target:satanic_orgiast
					is_friend = event_target:satanic_orgiast
				}

				random < 25 # 25% chance
			}

			add_friend = event_target:satanic_orgiast
		}

		if = {
			limit = { has_character_flag = orgy_murder }
			clr_character_flag = orgy_murder

			event_target:orgy_casualty = {
				show_scope_change = no

				show_portrait = yes

				tooltip = {
					death = {
						death_reason = death_murder_unknown
						killer = ROOT
					}
				}
			}
		}
	}
}

# On-action event: A satanic orgy child is born. Hidden utility event. Cleanslate: Formerly event 335
character_event = {
	id = MNM.20005

	hide_window = yes
	is_triggered_only = yes # on_birth

	has_dlc = "Mystics"

	immediate = {
		if = {
			limit = {
				mother = {
					has_character_flag = orgy_impregnated
				}
			}

			mother = {
				clr_character_flag = orgy_impregnated
			}

			if = {
				limit = {
					random < 1 # 1% chance

					NOT = {
						has_game_rule = {
							name = supernatural_events
							value = off
						}
					}

					trigger_if = {
						limit = {
							NOT = {
								any_close_relative = {
									is_parent_of = ROOT
									ai = no
								}
							}
						}

						has_game_rule = {
							name = supernatural_events
							value = unrestricted
						}
					}

					NOT = { event_target:demon_child_non_pagan = { is_alive = yes } }
				}

				save_global_event_target_as = demon_child_non_pagan

				random_close_relative = {
					limit = { is_parent_of = ROOT }

					preferred_limit = { ai = no }
					preferred_limit = { is_female = yes }

					narrative_event = {
						id = SoA.3002 # Demon child
						years = 2
					}
				}
			}
		}
	}
}

###########################################
# Satanic Night at the Town - Hidden start
# Fired from on_society_bi_yearly_pulse
###########################################
character_event = {
	id = MNM.20012
	picture = GFX_evt_shady_meeting # GFX_evt_council
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanic_reveler

	desc = {
		text = EVTDESC_MNM_20012
		trigger = {
			event_target:satanic_reveler = {
				NOT = { host = { character = ROOT } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20012_COURT
		trigger = {
			event_target:satanic_reveler = {
				host = { character = ROOT }
			}
		}
	}

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	only_playable = yes
	only_capable = yes
	prisoner = no

	trigger = {
		is_devil_worshiper_trigger = yes
		is_inaccessible_trigger = no
		is_ill = no

		society = {
			any_society_member = {
				ai = yes
				is_ill = no
				in_command = no
				is_inaccessible_or_incapable_trigger = no
				is_within_diplo_range = ROOT
				NOT = { character = ROOT }
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.25
			trait = impaler
		}
		mult_modifier = {
			factor = 1.25
			trait = cruel
		}
		mult_modifier = {
			factor = 1.25
			trait = arbitrary
		}
		mult_modifier = {
			factor = 1.25
			trait = socializer
		}
		mult_modifier = {
			factor = 1.25
			trait = drunkard
		}
		mult_modifier = {
			factor = 1.25
			trait = gluttonous
		}
		mult_modifier = {
			factor = 3.0
			has_focus = focus_carousing
		}
		mult_modifier = {
			factor = 0.5
			trait = temperate
		}
		mult_modifier = {
			factor = 0.5
			trait = just
		}
		mult_modifier = {
			factor = 0.25
			trait = kind
		}
		mult_modifier = {
			factor = 0.25
			has_character_flag = had_a_night_at_the_town
		}
	}

	immediate = {
		society = {
			random_society_member = {
				limit = {
					ai = yes
					is_ill = no
					in_command = no
					is_inaccessible_or_incapable_trigger = no
					is_within_diplo_range = ROOT
					NOT = { character = ROOT }
				}

				preferred_limit = {
					host = { character = ROOT } # First look for someone at court
				}

				preferred_limit = {
					same_realm = ROOT # Then look for someone in the same realm
				}

				# Then look abroad...
				save_event_target_as = satanic_reveler
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20012 # Of course

		if = {
			limit = {
				OR = {
					trait = arbitrary
					trait = wroth
					trait = cruel
					trait = impaler
					trait = lunatic
					trait = possessed
				}
			}

			character_event = {
				id = MNM.20014
				days = 1
				tooltip = evt_MNM_20013_TT
			}
		}
		else = {
			character_event = {
				id = MNM.20021
				days = 2
				tooltip = evt_MNM_20013_TT
			}
		}

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTB_MNM_20012 # No way!

		detract_society_currency_minor_effect = yes

		reverse_opinion = {
			name = opinion_coward
			who = event_target:satanic_reveler
			years = 5
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 20
				trait = temperate
			}
			mult_modifier = {
				factor = 10
				trait = kind
			}
			mult_modifier = {
				factor = 10
				trait = just
			}
		}
	}
}

# Satanic Night at the Town - Choice
character_event = {
	id = MNM.20014
	picture = GFX_evt_tribal_lands
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanic_reveler

	desc = {
		text = EVTDESC_MNM_20014
		picture = GFX_evt_stone_church
		trigger = {
			OR = {
				society_member_of = the_satanists
				society_member_of = the_cold_ones
				society_member_of = the_cult_of_kali
				society_member_of = the_trollcrafters
				society_member_of = the_vodouns
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20014_NOMAD
		picture = GFX_evt_nomad_camp
		trigger = { society_member_of = the_plaguebringers }
	}
	desc = {
		text = EVTDESC_MNM_20014_BACCHANALIS
		picture = GFX_evt_bacchants_initiation
		trigger = { society_member_of = the_bacchants }
	}

	is_triggered_only = yes

	immediate = {
		set_character_flag = had_a_night_at_the_town
	}

	option = {
		name = {
			text = EVTOPTA_MNM_20014 # Head for the town
			trigger = {
				NOT = { society_member_of = the_bacchants }
			}
		}
		name = {
			text = EVTOPTA_MNM_20014_B # Prefers orgy to murder.
			trigger = { society_member_of = the_bacchants }
		}

		character_event = {
			id = MNM.20021
			days = 2
		}
	}

	option = {
		name = {
			text = EVTOPTB_MNM_20014 # Home Invasion
			trigger = {
				NOT = { society_member_of = the_bacchants }
			}
		}
		name = {
			text = EVTOPTB_MNM_20014_B # Intoxicated massacre.
			trigger = { society_member_of = the_bacchants }
		}

		character_event = {
			id = MNM.20015
			days = 2
			tooltip = evt_MNM_20015_TT
		}
	}
}

# Home Invasion - Main event
character_event = {
	id = MNM.20015
	picture = GFX_evt_burning_house
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_20015
		picture = GFX_evt_impalement
		trigger = {
			NOR = {
				has_character_flag = home_invasion_buddy_dies
				society_member_of = the_bacchants
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20015_DEATH
		picture = GFX_evt_impalement
		trigger = {
			has_character_flag = home_invasion_buddy_dies
			NOT = { society_member_of = the_bacchants }
		}
	}
	desc = {
		text = EVTDESC_MNM_20015_B
		picture = GFX_evt_bacchants_initiation
		trigger = {
			society_member_of = the_bacchants
			NOT = { has_character_flag = home_invasion_buddy_dies }
		}
	}
	desc = {
		text = EVTDESC_MNM_20015_DEATH_B
		picture = GFX_evt_bacchants_initiation
		trigger = {
			society_member_of = the_bacchants
			has_character_flag = home_invasion_buddy_dies
		}
	}

	is_triggered_only = yes

	immediate = {
		# Chance of a bad effect
		random = {
			chance = 25

			random_list = {
				25 = { # Buddy dies
					trigger = {
						event_target:satanic_reveler = { is_ruler = no }
					}

					set_character_flag = home_invasion_buddy_dies
				}

				25 = { # Wounded
					trigger = {
						NOT = { trait = wounded }
					}

					set_character_flag = home_invasion_wounded
				}

				25 = { # Become Arbitrary
					trigger = {
						NOT = { trait = arbitrary }
					}

					set_character_flag = home_invasion_gain_arbitrary
				}

				25 = { # Become Cannibal
					trigger = {
						NOT = { trait = cannibal }
					}

					set_character_flag = home_invasion_gain_cannibal
				}
			}
		}

		# Increased ambition?
		if = {
			limit = {
				NOT = { trait = ambitious }
			}

			random = {
				chance = 25
				set_character_flag = home_invasion_inc_ambition
			}
		}

		# Increased cruelty? (Cruel and Impaler)
		if = {
			limit = {
				OR = {
					NOT = { trait = cruel }
					lifestyle_traits < 1
				}
			}

			random = {
				chance = 50
				set_character_flag = home_invasion_inc_cruelty
			}
		}

		# Remove stress or depression?
		random = {
			chance = 25

			if = {
				limit = { trait = stressed }
				set_character_flag = home_invasion_remove_stress
			}
			else_if = {
				limit = { trait = depressed }
				set_character_flag = home_invasion_remove_depression
			}
		}

		# Chance of peasant revolt in case you leave the scene intact
		if = {
			limit = {
				location = {
					trigger_if = {
						limit = {
							owner = { is_nomadic = yes }
						}

						has_empty_holding = no
					}

					OR = {
						has_castle = yes
						has_city = yes
						has_temple = yes
						has_tribal = yes
					}
				}
			}

			random = {
				chance = 50
				set_character_flag = peasants_revolt
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_20015 # Burn everything! No one must know.
			trigger = {
				NOT = { society_member_of = the_bacchants }
			}
		}
		name = {
			text = EVTOPTA_MNM_20015_B # Clean up the mess.
			trigger = { society_member_of = the_bacchants }
		}

		add_society_currency_minor_effect = yes
	}

	option = {
		name = {
			text = EVTOPTB_MNM_20015 # Leave it as a monument (risk of revolt)
			trigger = {
				NOT = { society_member_of = the_bacchants }
			}
		}
		name = {
			text = EVTOPTB_MNM_20015_B # Leave it as a monument (risk of revolt)
			trigger = { society_member_of = the_bacchants }
		}

		add_society_currency_medium_effect = yes

		# Blessing of Berith
		if = {
			limit = {
				NOT = { has_character_modifier = blessing_of_berith }
			}

			add_character_modifier = {
				name = blessing_of_berith
				years = 5
			}
		}

		if = {
			limit = { has_character_flag = peasants_revolt }

			character_event = {
				id = MNM.20017
				days = 3
				tooltip = evt_MNM_20017_TT
			}
		}
		else = {
			character_event = {
				id = MNM.20016
				days = 3
				tooltip = evt_MNM_20016_TT
			}
		}
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			# Buddy dies
			home_invasion_buddy_dies = {
				event_target:satanic_reveler = {
					show_scope_change = no

					death = { death_reason = death_accident }
				}
			}

			# Wounded
			home_invasion_wounded = {
				clr_character_flag = home_invasion_wounded
				add_trait = wounded
			}

			# Become Arbitrary
			home_invasion_gain_arbitrary = {
				clr_character_flag = home_invasion_gain_arbitrary
				add_trait_partially_silently_arbitrary_effect = yes
			}

			# Cannibal
			home_invasion_gain_cannibal = {
				clr_character_flag = home_invasion_gain_cannibal
				add_trait = cannibal
			}
		}

		# Ambition
		if = {
			limit = { has_character_flag = home_invasion_inc_ambition }
			clr_character_flag = home_invasion_inc_ambition
			add_trait_partially_silently_ambitious_effect = yes
		}

		# Increase Cruelty
		if = {
			limit = { has_character_flag = home_invasion_inc_cruelty }
			clr_character_flag = home_invasion_inc_cruelty

			if = {
				limit = {
					trait = cruel
					lifestyle_traits < 1
				}

				add_trait = impaler
			}

			add_trait_partially_silently_cruel_effect = yes
		}

		# Relieve Stress
		if = {
			limit = { has_character_flag = home_invasion_remove_stress }
			clr_character_flag = home_invasion_remove_stress
			remove_trait = stressed
		}
		# Cure Depression
		else_if = {
			limit = { has_character_flag = home_invasion_remove_depression }
			clr_character_flag = home_invasion_remove_depression
			remove_trait = depressed
		}

		# Friend gained / Rivalry lost
		if = {
			limit = {
				NOR = {
					has_character_flag = home_invasion_buddy_dies
					is_friend = event_target:satanic_reveler
				}
			}

			if = {
				limit = { is_rival = event_target:satanic_reveler }
				remove_rival = event_target:satanic_reveler
			}
			else_if = {
				limit = {
					NOR = {
						is_lover = event_target:satanic_reveler
						is_friend = event_target:satanic_reveler
					}
				}

				add_friend = event_target:satanic_reveler
			}
		}

		clr_character_flag = peasants_revolt
		clr_character_flag = home_invasion_buddy_dies
	}
}

# Home Invasion - Demonic Monument outcome - increased revolt risk
character_event = {
	id = MNM.20016
	desc = EVTDESC_MNM_20016
	picture = GFX_evt_peasants
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanic_reveler

	is_triggered_only = yes

	immediate = {
		location = {
			show_scope_change = no

			add_province_modifier = {
				name = rumors_of_witchcraft
				years = 3
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20016
	}
}

# Home Invasion - Demonic Monument outcome - rebellion
character_event = {
	id = MNM.20017
	desc = EVTDESC_MNM_20017
	picture = GFX_evt_peasants
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanic_reveler

	desc = {
		text = EVTDESC_MNM_20021
		trigger = {
			NOR = {
				has_character_flag = nt_rivalry
				society_member_of = the_bacchants
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20021_RIVALRY
		trigger = {
			has_character_flag = nt_rivalry
			NOT = { society_member_of = the_bacchants }
		}
	}
	desc = {
		text = EVTDESC_MNM_20021_B
		picture = GFX_evt_magic_ritual
		trigger = {
			NOT = { has_character_flag = nt_rivalry }
			society_member_of = the_bacchants
		}
	}
	desc = {
		text = EVTDESC_MNM_20021_RIVALRY_B
		picture = GFX_evt_magic_ritual
		trigger = {
			has_character_flag = nt_rivalry
			society_member_of = the_bacchants
		}
	}

	is_triggered_only = yes

	immediate = {
		location = {
			set_province_flag = force_peasant_revolt
			province_event = { id = TOG.1000 }
			clr_province_flag = force_peasant_revolt
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_20017
			trigger = {
				location = {
					owner = {
						OR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_20017_OTHER
			trigger = {
				location = {
					owner = {
						NOR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
						}
					}
				}
			}
		}
	}
}

# Debauchery at the Tavern - Main event
character_event = {
	id = MNM.20021
	picture = GFX_evt_brothel
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:satanic_reveler

	desc = {
		text = EVTDESC_MNM_20021
		trigger = {
			NOR = {
				has_character_flag = nt_rivalry
				society_member_of = the_bacchants
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20021_RIVALRY
		trigger = {
			has_character_flag = nt_rivalry
			NOT = { society_member_of = the_bacchants }
		}
	}
	desc = {
		text = EVTDESC_MNM_20021_B
		picture = GFX_evt_magic_ritual
		trigger = {
			NOT = { has_character_flag = nt_rivalry }
			society_member_of = the_bacchants
		}
	}
	desc = {
		text = EVTDESC_MNM_20021_RIVALRY_B
		picture = GFX_evt_magic_ritual
		trigger = {
			has_character_flag = nt_rivalry
			society_member_of = the_bacchants
		}
	}

	is_triggered_only = yes

	immediate = {
		# Gain Wroth?
		if = {
			limit = {
				NOT = { trait = wroth }
			}

			random = {
				chance = 25
				set_character_flag = nt_gain_wroth
			}
		}

		# Gain Cruel?
		if = {
			limit = {
				NOT = { trait = cruel }
			}

			random = {
				chance = 50
				set_character_flag = nt_gain_cruel
			}
		}

		# Remove stress or depression?
		random = {
			chance = 25

			if = {
				limit = { trait = stressed }
				set_character_flag = nt_remove_stress
			}
			else_if = {
				limit = { trait = depressed }
				set_character_flag = nt_remove_depression
			}
		}

		# Friendship or Rivalry?
		if = {
			limit = {
				NOR = { is_lover = event_target:satanic_reveler }
			}

			random_list = {
				100 = {
					trigger = {
						NOT = { is_friend = event_target:satanic_reveler } # CleanSlate: So if they were your friend, they always move towards becoming your rival and vice versa? Is that intended?
					}

					set_character_flag = nt_bonding
				}

				20 = {
					trigger = {
						NOT = { is_rival = event_target:satanic_reveler }
					}

					set_character_flag = nt_rivalry
				}
			}
		}

		# Oops, I drank the beer.
		if = {
			limit = { # Taking drugs is the whole point of the ritual.
				NOT = { society_member_of = the_bacchants }
			}

			random = {
				chance = 20

				mult_modifier = {
					factor = 0.5
					trait = shrewd
				}
				mult_modifier = {
					factor = 0.5
					trait = quick
				}
				mult_modifier = {
					factor = 0.25
					trait = genius
				}
				mult_modifier = {
					factor = 3.0
					trait = slow
				}
				mult_modifier = {
					factor = 2.0
					trait = dull
				}
				mult_modifier = {
					factor = 2.0
					trait = drunkard
				}
				mult_modifier = {
					factor = 2.0
					trait = hedonist
				}
				mult_modifier = {
					factor = 5.0
					trait = imbecile
				}

				set_character_flag = nt_drank_the_beer
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_20021_RIVALRY
			trigger = {
				has_character_flag = nt_rivalry
				NOT = { has_character_flag = nt_drank_the_beer }
			}
		}
		name = {
			text = EVTOPTA_MNM_20021
			trigger = {
				NOR = {
					has_character_flag = nt_drank_the_beer
					has_character_flag = nt_rivalry
					society_member_of = the_bacchants
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_20021_B
			trigger = {
				NOR = {
					has_character_flag = nt_drank_the_beer
					has_character_flag = nt_rivalry
				}
				society_member_of = the_bacchants
			}
		}
		name = {
			text = EVTOPTA_MNM_20021_OOPS
			trigger = { has_character_flag = nt_drank_the_beer }
		}

		add_society_currency_minor_effect = yes

		# Gain Wroth
		if = {
			limit = { has_character_flag = nt_gain_wroth }
			clr_character_flag = nt_gain_wroth
			add_trait_partially_silently_wroth_effect = yes
		}

		# Gain Cruel
		if = {
			limit = { has_character_flag = nt_gain_cruel }
			clr_character_flag = nt_gain_cruel
			add_trait_partially_silently_cruel_effect = yes
		}

		# Relieve Stress
		if = {
			limit = { has_character_flag = nt_remove_stress }
			clr_character_flag = nt_remove_stress
			remove_trait = stressed
		}
		# Cure Depression
		else_if = {
			limit = { has_character_flag = nt_remove_depression }
			clr_character_flag = nt_remove_depression
			remove_trait = depressed
		}

		# Friend gained
		if = {
			limit = { has_character_flag = nt_bonding }

			clr_character_flag = nt_bonding

			if = {
				limit = { is_rival = event_target:satanic_reveler }
				remove_rival = event_target:satanic_reveler
			}
			else_if = {
				limit = {
					NOT = { is_friend = event_target:satanic_reveler }
				}

				add_friend = event_target:satanic_reveler
			}
		}

		# Rival gained
		else_if = {
			limit = { has_character_flag = nt_rivalry }

			clr_character_flag = nt_rivalry

			if = {
				limit = { is_friend = event_target:satanic_reveler }
				remove_friend = event_target:satanic_reveler
			}
			else_if = {
				limit = {
					NOT = { is_rival = event_target:satanic_reveler }
				}

				add_rival = event_target:satanic_reveler
			}
		}

		if = {
			limit = { has_character_flag = nt_drank_the_beer }

			clr_character_flag = nt_drank_the_beer

			character_event = {
				id = MNM.20022
				days = 1
				tooltip = evt_MNM_20022_TT
			}
		}
	}
}

# Debauchery at the Tavern - Drank the drugged beer
character_event = {
	id = MNM.20022
	desc = EVTDESC_MNM_20022
	picture = GFX_evt_drunk
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	immediate = {
		random_list = {
			100 = { set_character_flag = nt_grow_dumber }

			100 = {
				trigger = {
					NOT = { trait = drunkard }
				}

				set_character_flag = nt_gain_drunkard
			}

			25 = {
				trigger = {
					NOT = { trait = lunatic }
				}

				set_character_flag = nt_gain_lunatic
			}

			100 = {
				trigger = {
					NOT = { has_character_modifier = hallucinating }
				}

				set_character_flag = nt_bad_modifier
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20022

		trigger_switch = {
			on_trigger = has_character_flag

			nt_gain_drunkard = { # Become a drunkard
				clr_character_flag = nt_gain_drunkard
				add_trait = drunkard
			}

			nt_gain_lunatic = { # Go insane
				clr_character_flag = nt_gain_lunatic
				add_trait = lunatic
			}

			nt_bad_modifier = { # Poisoned
				clr_character_flag = nt_bad_modifier

				add_character_modifier = {
					name = hallucinating
					months = 4
				}
			}

			# Brain damage
			nt_grow_dumber = {
				clr_character_flag = nt_grow_dumber

				if = {
					limit = { trait = shrewd }
					remove_trait = shrewd
				}
				else_if = {
					limit = {
						NOR = {
							trait = dull
							trait = genius
							trait = quick
							trait = slow
							trait = imbecile
						}
					}

					add_trait = dull
				}

				if = {
					limit = { trait = slow }
					remove_trait = slow
					add_trait = imbecile
				}
				else_if = {
					limit = { trait = quick }
					remove_trait = quick
				}
				else_if = {
					limit = { trait = genius }
					remove_trait = genius
					add_trait = quick
				}
			}
		}
	}
}

###########################################
# Grand Demon Summoning - Hidden start
# Fired from on_society_bi_yearly_pulse
###########################################

# Demon Summoning - Planning
narrative_event = {
	id = MNM.20032
	title = EVTTITLE_MNM_20034
	picture = GFX_evt_shadowy_cabal
	border = GFX_event_narrative_frame_intrigue
	portrait = event_target:demon_summoner

	desc = {
		text = EVTDESC_MNM_20032
		trigger = {
			event_target:demon_summoner = {
				NOT = { host = { character = ROOT } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20032_COURT
		trigger = {
			event_target:demon_summoner = {
				host = { character = ROOT }
			}
		}
	}

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	only_playable = yes
	only_capable = yes
	prisoner = no

	trigger = {
		is_devil_worshiper_trigger = yes
		is_inaccessible_trigger = no
		is_ill = no

		society = {
			any_society_member = {
				ai = yes
				in_command = no
				is_ill = no
				is_inaccessible_or_incapable_trigger = no
				is_within_diplo_range = ROOT
				NOT = { character = ROOT }
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 2.0
			society_rank >= 3
		}
		mult_modifier = {
			factor = 0.5
			society_rank == 1
		}
		mult_modifier = {
			factor = 3.0
			OR = {
				has_focus = focus_scholarship
				has_focus = focus_theology
			}
		}
		mult_modifier = {
			factor = 3.0
			trait = genius
		}
		mult_modifier = {
			factor = 3.0
			trait = mystic
		}
		mult_modifier = {
			factor = 2.0
			trait = quick
		}
		mult_modifier = {
			factor = 2.0
			trait = shrewd
		}
		mult_modifier = {
			factor = 0.5
			trait = dull
		}
		mult_modifier = {
			factor = 0.5
			trait = slow
		}
		mult_modifier = {
			factor = 0.1
			trait = imbecile
		}
		mult_modifier = {
			factor = 0.25
			has_character_flag = had_a_grand_demon_summoning
		}
	}

	immediate = {
		society = {
			random_society_member = {
				limit = {
					ai = yes
					in_command = no
					is_ill = no
					is_inaccessible_or_incapable_trigger = no
					is_within_diplo_range = ROOT
					NOT = { character = ROOT }
				}

				preferred_limit = {
					host = { character = ROOT } # First look for someone at court
				}

				preferred_limit = {
					same_realm = ROOT # Then look for someone in the same realm
				}

				# Then look abroad...
				save_event_target_as = demon_summoner
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20032 # Unlimited Power!

		set_character_flag = had_a_grand_demon_summoning

		narrative_event = {
			id = MNM.20034
			days = 3
			tooltip = evt_MNM_20033_TT
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 50
				trait = ambitious
			}
			mult_modifier = {
				factor = 50
				trait = mystic
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_20032 # Let's think this through

		detract_society_currency_minor_effect = yes

		reverse_opinion = {
			name = opinion_coward
			who = event_target:demon_summoner
			years = 5
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 50
				trait = craven
			}
			mult_modifier = {
				factor = 25
				trait = content
			}
		}
	}
}

# Demon Summoning - The Ritual
narrative_event = {
	id = MNM.20034
	title = EVTTITLE_MNM_20034
	picture = GFX_evt_magic_ritual
	border = GFX_event_narrative_frame_intrigue
	portrait = event_target:demon_summoner

	desc = {
		text = EVTDESC_MNM_20034
		trigger = {
			NOT = { has_character_flag = ds_disaster }
		}
	}
	desc = {
		text = EVTOPTA_MNM_20034_DISASTER
		trigger = { has_character_flag = ds_disaster }
	}

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_list = {
				100 = { # Stewardship Demon
					trigger = {
						trigger_if = {
							limit = { has_character_modifier = blessing_of_mammon }

							OR = {
								trait = indulgent_wastrel
								trait = thrifty_clerk
								trait = fortune_builder
							}
						}
					}

					mult_modifier = {
						factor = 2
						has_education_stewardship_trigger = yes
					}
					mult_modifier = {
						factor = 2
						OR = {
							has_focus = focus_rulership
							has_focus = focus_business
						}
					}

					set_character_flag = ds_STE
				}

				100 = { # Diplomacy Demon
					trigger = {
						trigger_if = {
							limit = { has_character_modifier = blessing_of_belial }

							OR = {
								trait = naive_appeaser
								trait = underhanded_rogue
								trait = charismatic_negotiator
							}
						}
					}

					mult_modifier = {
						factor = 2
						has_education_diplomacy_trigger = yes
					}
					mult_modifier = {
						factor = 2
						OR = {
							has_focus = focus_family
							has_focus = focus_carousing
						}
					}

					set_character_flag = ds_DIP
				}

				100 = { # Martial Demon
					trigger = {
						trigger_if = {
							limit = { has_character_modifier = blessing_of_azazel }

							OR = {
								trait = misguided_warrior
								trait = tough_soldier
								trait = skilled_tactician
							}
						}
					}

					mult_modifier = {
						factor = 2
						has_education_martial_trigger = yes
					}
					mult_modifier = {
						factor = 2
						OR = {
							has_focus = focus_war
							has_focus = focus_hunting
						}
					}

					set_character_flag = ds_MAR
				}

				100 = { # Intrigue Demon
					trigger = {
						OR = {
							num_of_rivals > 0

							trigger_if = {
								limit = { has_character_modifier = blessing_of_vetis }

								OR = {
									trait = amateurish_plotter
									trait = flamboyant_schemer
									trait = intricate_webweaver
								}
							}
						}
					}

					mult_modifier = {
						factor = 2
						has_education_intrigue_trigger = yes
					}
					mult_modifier = {
						factor = 2
						OR = {
							has_focus = focus_seduction
							has_focus = focus_intrigue
						}
					}

					random_rival = {
						save_event_target_as = rival_1
					}

					random_rival = {
						limit = {
							NOT = { character = event_target:rival_1 }
						}

						save_event_target_as = rival_2
					}

					set_character_flag = ds_INT
				}

				100 = { # Learning Demon
					trigger = {
						trigger_if = {
							limit = { has_character_modifier = blessing_of_avnas }

							OR = {
								trait = detached_priest
								trait = dutiful_cleric
								trait = scholarly_theologian
								NOT = { trait = shrewd }
							}
						}
					}

					mult_modifier = {
						factor = 2
						has_education_learning_trigger = yes
					}
					mult_modifier = {
						factor = 2
						OR = {
							has_focus = focus_scholarship
							has_focus = focus_theology
						}
					}

					set_character_flag = ds_LEA
				}

				100 = { # Disaster!
					mult_modifier = {
						factor = 0.5
						trait = genius
					}
					mult_modifier = {
						factor = 0.5
						trait = mystic
					}
					mult_modifier = {
						factor = 0.75
						trait = quick
					}
					mult_modifier = {
						factor = 0.75
						trait = shrewd
					}
					mult_modifier = {
						factor = 2.0
						trait = slow
					}
					mult_modifier = {
						factor = 2.0
						trait = dull
					}
					mult_modifier = {
						factor = 5.0
						trait = imbecile
					}
					mult_modifier = {
						factor = 3.0
						trait = inbred
					}

					random_list = {
						100 = { set_character_flag = ds_stupid }
						100 = { set_character_flag = ds_illness }

						100 = {
							trigger = {
								location = { has_disease = no }
							}

							set_character_flag = ds_epidemic
						}

						100 = {
							trigger = {
								is_female = no
								NOT = { trait = eunuch }
							}

							set_character_flag = ds_eunuch
						}

						100 = {
							trigger = {
								NOT = { has_character_modifier = known_witch }
							}

							set_character_flag = ds_exposure
						}

						100 = {
							trigger = {
								NOT = { is_rival = event_target:demon_summoner }
							}

							set_character_flag = ds_rivalry
						}

						100 = {
							trigger = {
								NOT = { trait = possessed }
							}

							set_character_flag = ds_possess
						}
					}

					set_character_flag = ds_disaster
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20034

		trigger = {
			NOT = { has_character_flag = ds_disaster }
		}

		add_society_currency_minor_effect = yes
		increase_visibility_effect = yes

		trigger_switch = {
			on_trigger = has_character_flag

			# Stewardship Boon
			ds_STE = {
				if = {
					limit = { has_character_modifier = blessing_of_mammon }

					trigger_switch = {
						on_trigger = trait

						fortune_builder = {
							hidden_effect = { remove_trait = fortune_builder }
							add_trait = midas_touched
						}

						thrifty_clerk = {
							hidden_effect = { remove_trait = thrifty_clerk }
							add_trait = fortune_builder
						}

						indulgent_wastrel = {
							hidden_effect = { remove_trait = indulgent_wastrel }
							add_trait = thrifty_clerk
						}
					}
				}
				else = {
					add_character_modifier = {
						name = blessing_of_mammon
						duration = -1
					}
				}
			}

			# Diplomacy Boon
			ds_DIP = {
				if = {
					limit = { has_character_modifier = blessing_of_belial }

					trigger_switch = {
						on_trigger = trait

						charismatic_negotiator = {
							hidden_effect = { remove_trait = charismatic_negotiator }
							add_trait = grey_eminence
						}

						underhanded_rogue = {
							hidden_effect = { remove_trait = underhanded_rogue }
							add_trait = charismatic_negotiator
						}

						naive_appeaser = {
							hidden_effect = { remove_trait = naive_appeaser }
							add_trait = underhanded_rogue
						}
					}
				}
				else = {
					add_character_modifier = {
						name = blessing_of_belial
						duration = -1
					}
				}
			}

			# Martial Boon
			ds_MAR = {
				if = {
					limit = { has_character_modifier = blessing_of_azazel }

					trigger_switch = {
						on_trigger = trait

						skilled_tactician = {
							hidden_effect = { remove_trait = skilled_tactician }
							add_trait = brilliant_strategist
						}

						tough_soldier = {
							hidden_effect = { remove_trait = tough_soldier }
							add_trait = skilled_tactician
						}

						misguided_warrior = {
							hidden_effect = { remove_trait = misguided_warrior }
							add_trait = tough_soldier
						}
					}
				}
				else = {
					add_character_modifier = {
						name = blessing_of_azazel
						duration = -1
					}
				}
			}

			# Intrigue Boon
			ds_INT = {
				if = {
					limit = { has_character_modifier = blessing_of_vetis }

					trigger_switch = {
						on_trigger = trait

						intricate_webweaver = {
							hidden_effect = { remove_trait = intricate_webweaver }
							add_trait = elusive_shadow
						}

						flamboyant_schemer = {
							hidden_effect = { remove_trait = flamboyant_schemer }
							add_trait = intricate_webweaver
						}

						amateurish_plotter = {
							hidden_effect = { remove_trait = amateurish_plotter }
							add_trait = flamboyant_schemer
						}
					}
				}
				else = {
					add_character_modifier = {
						name = blessing_of_vetis
						duration = -1
					}
				}
			}

			# Learning Boon
			ds_LEA = {
				if = {
					limit = { has_character_modifier = blessing_of_avnas }

					trigger_switch = {
						on_trigger = trait

						scholarly_theologian = {
							hidden_effect = { remove_trait = scholarly_theologian }
							add_trait = mastermind_theologian
							set_character_flag = ds_better_ed
						}

						dutiful_cleric = {
							hidden_effect = { remove_trait = dutiful_cleric }
							add_trait = scholarly_theologian
							set_character_flag = ds_better_ed
						}

						detached_priest = {
							hidden_effect = { remove_trait = detached_priest }
							add_trait = dutiful_cleric
							set_character_flag = ds_better_ed
						}
					}

					if = {
						limit = {
							NOT = { has_character_flag = ds_better_ed }
						}

						if = {
							limit = { trait = dull }
							remove_trait = dull
						}
						else_if = {
							limit = {
								NOT = { trait = shrewd }
							}

							add_trait = shrewd
						}
					}

					clr_character_flag = ds_better_ed
				}
				else = {
					add_character_modifier = {
						name = blessing_of_avnas
						duration = -1
					}
				}
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_20034_ILLNESS
			trigger = { has_character_flag = ds_illness }
		}
		name = {
			text = EVTOPTA_MNM_20034_EPIDEMIC
			trigger = { has_character_flag = ds_epidemic }
		}
		name = {
			text = EVTOPTA_MNM_20034_EUNUCH
			trigger = { has_character_flag = ds_eunuch }
		}
		name = {
			text = EVTOPTA_MNM_20034_STUPID
			trigger = { has_character_flag = ds_stupid }
		}
		name = {
			text = EVTOPTA_MNM_20034_EXPOSURE
			trigger = { has_character_flag = ds_exposure }
		}
		name = {
			text = EVTOPTA_MNM_20034_POSSESS
			trigger = { has_character_flag = ds_possess }
		}
		name = {
			text = EVTOPTA_MNM_20034_RIVALRY
			trigger = { has_character_flag = ds_rivalry }
		}

		trigger = { has_character_flag = ds_disaster }

		trigger_switch = {
			on_trigger = has_character_flag

			ds_illness = {
				if = {
					limit = { has_dlc = "Reapers" }
					add_trait = cancer
				}
			}

			ds_epidemic = {
				location = {
					show_scope_change = no
					spawn_disease = slow_fever
				}
			}

			ds_eunuch = {
				add_trait = eunuch
			}

			ds_stupid = {
				if = {
					limit = { trait = shrewd }
					remove_trait = shrewd
				}
				else_if = {
					limit = {
						NOR = {
							trait = dull
							trait = genius
							trait = quick
							trait = slow
							trait = imbecile
						}
					}

					add_trait = dull
				}

				if = {
					limit = { trait = slow }
					remove_trait = slow
					add_trait = imbecile
				}
				else_if = {
					limit = { trait = quick }
					remove_trait = quick
				}
				else_if = {
					limit = { trait = genius }
					remove_trait = genius
					add_trait = quick
				}
			}

			ds_exposure = {
				if = {
					limit = { has_character_modifier = suspected_witch }
					remove_character_modifier = suspected_witch

					add_character_modifier = {
						name = known_witch
						duration = -1
					}
				}
				else_if = {
					limit = {
						NOT = { has_character_modifier = known_witch }
					}
					add_character_modifier = {
						name = suspected_witch
						duration = -1
					}
				}
			}

			ds_possess = {
				add_trait = possessed

				add_character_modifier = {
					name = voice_of_satan
					duration = -1
				}
			}

			ds_rivalry = {
				if = {
					limit = {
						NOR = {
							is_lover = event_target:demon_summoner
							is_friend = event_target:demon_summoner
						}
					}

					add_rival = event_target:demon_summoner
				}

				if = {
					limit = { is_lover = event_target:demon_summoner }
					remove_lover = event_target:demon_summoner
				}

				if = {
					limit = { is_friend = event_target:demon_summoner }
					remove_friend = event_target:demon_summoner
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20034_KILL_RIVAL_1

		trigger = {
			event_target:rival_1 = { always = yes }
		}

		add_society_currency_minor_effect = yes
		increase_visibility_effect = yes

		event_target:rival_1 = {
			show_scope_change = no

			tooltip = {
				death = {
					death_reason = death_murder_unknown
					killer = ROOT
				}
			}

			character_event = { id = MNM.20035 }
		}
	}

	option = {
		name = EVTOPTA_MNM_20034_KILL_RIVAL_2

		trigger = {
			event_target:rival_2 = { always = yes }
		}

		add_society_currency_minor_effect = yes
		increase_visibility_effect = yes

		event_target:rival_2 = {
			show_scope_change = no

			tooltip = {
				death = {
					death_reason = death_murder_unknown
					killer = ROOT
				}
			}

			character_event = { id = MNM.20035 }
		}
	}

	after = {
		clr_character_flag = ds_disaster
		clr_character_flag = ds_illness
		clr_character_flag = ds_epidemic
		clr_character_flag = ds_eunuch
		clr_character_flag = ds_stupid
		clr_character_flag = ds_exposure
		clr_character_flag = ds_possess
		clr_character_flag = ds_rivalry
		clr_character_flag = ds_INT
		clr_character_flag = ds_STE
		clr_character_flag = ds_MAR
		clr_character_flag = ds_DIP
		clr_character_flag = ds_LEA
	}
}

# Demon Summoning - Rival is killed
character_event = {
	id = MNM.20035
	desc = EVTDESC_MNM_20035
	picture = GFX_evt_magic_ritual
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	immediate = {
		death = {
			death_reason = death_murder_unknown
			killer = FROM
		}
	}

	option = {
		name = EVTOPTA_MNM_20035
	}
}

###########################################
# Impersonating Priests - Hidden start
# Fired from on_society_bi_yearly_pulse
###########################################

# Impersonating Priests - Planning
character_event = {
	id = MNM.20043
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dw_buddy

	desc = {
		text = EVTDESC_MNM_20043
		trigger = {
			event_target:dw_buddy = {
				NOT = { host = { character = ROOT } }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_20043_COURT
		trigger = {
			event_target:dw_buddy = {
				host = { character = ROOT }
			}
		}
	}

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	only_playable = yes
	only_capable = yes
	prisoner = no

	trigger = {
		is_devil_worshiper_trigger = yes
		is_inaccessible_trigger = no
		is_ill = no
		in_command = no

		society = {
			any_society_member = {
				ai = yes
				in_command = no
				is_ill = no
				is_inaccessible_or_incapable_trigger = no
				is_within_diplo_range = ROOT
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.75
			has_focus = focus_theology
		}

		mult_modifier = {
			factor = 1.75
			has_education_learning_trigger = yes
		}

		mult_modifier = {
			factor = 0.25
			has_character_flag = impersonated_priests
		}
	}

	immediate = {
		society = {
			random_society_member = {
				limit = {
					ai = yes
					in_command = no
					is_ill = no
					is_inaccessible_or_incapable_trigger = no
					is_within_diplo_range = ROOT
				}

				preferred_limit = {
					is_opposite_sex = ROOT # One of us can always masquerade as a local priest
					host = { character = ROOT } # First look for someone at court
				}

				preferred_limit = {
					is_opposite_sex = ROOT # One of us can always masquerade as a local priest
					same_realm = ROOT # Then look for someone in the same realm
				}

				preferred_limit = {
					is_opposite_sex = ROOT # One of us can always masquerade as a local priest
				}

				save_event_target_as = dw_buddy
			}
		}

		random_realm_province = {
			limit = {
				held_under_PREV = yes

				any_neighbor_province = {
					has_owner = yes

					owner = {
						NOR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
							character = event_target:dw_buddy
							is_vassal_or_below_of = event_target:dw_buddy
						}
					}
				}
			}

			random_neighbor_province = {
				limit = {
					has_owner = yes

					owner = {
						NOR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
							character = event_target:dw_buddy
							is_vassal_or_below_of = event_target:dw_buddy
						}
					}
				}

				save_event_target_as = target_province
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20043 # Yes

		set_character_flag = impersonated_priests

		character_event = {
			id = MNM.20045
			days = 2
			tooltip = evt_MNM_20044_TT
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 20
				has_focus = focus_theology
			}
			mult_modifier = {
				factor = 10
				has_education_learning_trigger = yes
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_20043 # Bad idea...

		detract_society_currency_minor_effect = yes

		reverse_opinion = {
			name = opinion_coward
			who = event_target:dw_buddy
			years = 5
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 50
				trait = craven
			}
			mult_modifier = {
				factor = 25
				trait = content
			}
		}
	}
}

# Impersonating Priests - The Fun Begins
character_event = {
	id = MNM.20045
	desc = EVTDESC_MNM_20045
	picture = GFX_evt_secluded_in_prayer # GFX_evt_bishop
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dw_buddy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_20045 # Firebrand preaching to the peasants (Agitation)

		character_event = {
			id = MNM.20048
			days = 7
			tooltip = evt_MNM_20046_TT
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 10
				trait = zealous
			}
			mult_modifier = {
				factor = 10
				OR = {
					trait = temperate
					trait = just
					trait = diligent
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_20045 # Depraved feast

		character_event = {
			id = MNM.20049
			days = 3
			tooltip = evt_MNM_20047_TT
		}

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 10
				trait = cynical
			}
			mult_modifier = {
				factor = 10
				OR = {
					trait = gluttonous
					trait = hedonist
					trait = drunkard
					trait = arbitrary
					trait = slothful
				}
			}
		}
	}
}

# Impersonating Priests - Agitation
character_event = {
	id = MNM.20048
	desc = EVTDESC_MNM_20048
	picture = GFX_evt_heretic
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dw_buddy

	is_triggered_only = yes

	prisoner = no
	only_capable = yes

	trigger = {
		event_target:dw_buddy = {
			is_alive = yes
			prisoner = no
			is_incapable = no
		}
	}

	immediate = {
		if = {
			limit = {
				event_target:target_province = {
					has_heresies = yes
					is_heretic = no
				}
			}

			set_character_flag = ip_heresy
		}

		if = {
			limit = { NOT = { trait = deceitful } }

			random = {
				chance = 25
				set_character_flag = ip_deceitful
			}
		}

		if = {
			limit = { NOT = { trait = gregarious } }

			random = {
				chance = 50
				set_character_flag = ip_gregarious
			}
		}

		if = {
			limit = {
				NOR = {
					is_friend = event_target:dw_buddy
					is_lover = event_target:dw_buddy
				}
			}

			random_list = {
				85 = { set_character_flag = ip_friendify }

				15 = {
					trigger = {
						event_target:dw_buddy = {
							NOT = { trait = honest }
						}
					}

					mult_modifier = {
						factor = 2
						event_target:dw_buddy = { trait = deceitful }
					}
					mult_modifier = {
						factor = 2
						event_target:dw_buddy = { trait = cruel }
					}

					character_event = { id = MNM.20052 days = 7 } # Rivalry
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20048

		if = {
			limit = { has_character_flag = ip_heresy }
			clr_character_flag = ip_heresy

			event_target:target_province = {
				show_scope_change = no

				add_province_modifier = {
					name = heretic_stronghold
					years = 3
				}

				become_heretic = yes
				province_event = { id = MNM.20050 } # Notify lieges
			}
		}
		else = {
			event_target:target_province = {
				show_scope_change = no

				add_province_modifier = {
					name = religious_unrest
					years = 5
				}
			}
		}

		if = {
			limit = { has_character_flag = ip_deceitful }
			clr_character_flag = ip_deceitful
			add_trait_partially_silently_deceitful_effect = yes
		}

		if = {
			limit = { has_character_flag = ip_gregarious }
			clr_character_flag = ip_gregarious
			add_trait_partially_silently_gregarious_effect = yes
		}

		# Friend gained / Rivalry lost
		if = {
			limit = { has_character_flag = ip_friendify }
			clr_character_flag = ip_friendify

			if = {
				limit = { is_rival = event_target:dw_buddy }
				remove_rival = event_target:dw_buddy
			}
			else = {
				add_friend = event_target:dw_buddy
			}
		}

		add_society_currency_minor_effect = yes
	}
}

# Impersonating Priests - Depraved Feast
character_event = {
	id = MNM.20049
	desc = EVTDESC_MNM_20049
	picture = GFX_evt_pope_feast
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dw_buddy

	is_triggered_only = yes

	prisoner = no
	only_capable = yes

	trigger = {
		event_target:dw_buddy = {
			is_alive = yes
			prisoner = no
			is_incapable = no
		}
	}

	immediate = {
		if = {
			limit = { NOT = { trait = deceitful } }

			random = {
				chance = 25
				set_character_flag = ip_deceitful
			}
		}

		if = {
			limit = { NOT = { trait = gluttonous } }

			random = {
				chance = 10
				set_character_flag = ip_gluttonous
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20049

		if = {
			limit = { ai = no }

			event_target:target_province = {
				show_scope_change = no

				religion_authority = {
					name = decadent_clergy
					years = 10
				}
			}
		}

		if = {
			limit = { has_character_flag = ip_deceitful }
			clr_character_flag = ip_deceitful
			add_trait_partially_silently_deceitful_effect = yes
		}

		if = {
			limit = { has_character_flag = ip_gluttonous }
			clr_character_flag = ip_gluttonous
			add_trait_partially_silently_gluttonous_effect = yes
		}

		# Friend gained / Rivalry lost
		if = {
			limit = { is_rival = event_target:dw_buddy }
			remove_rival = event_target:dw_buddy
		}
		else_if = {
			limit = {
				NOR = {
					is_lover = event_target:dw_buddy
					is_friend = event_target:dw_buddy
				}
			}

			add_friend = event_target:dw_buddy
		}

		add_society_currency_minor_effect = yes

	}
}

# Province: notify lieges of heresy
# TODO: does the owner also get notified?
province_event = {
	id = MNM.20050

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		owner = {
			any_liege = {
				if = {
					limit = {
						NOR = {
							character = PREV
							character = FROM
						}
					}

					character_event = { id = 39400 days = 2 } # base_religious_events.txt
				}

				any_vassal = {
					limit = {
						NOT = { character = FROM }
						OR = {
							is_parent_religion = ROOT
							religion = ROOT
						}
					}

					character_event = { id = 39400 days = 2 }
				}
			}
		}
	}
}

# Agitation - Rivalry aftermath
character_event = {
	id = MNM.20052
	desc = EVTDESC_MNM_20052
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:dw_buddy

	is_triggered_only = yes

	immediate = {
		event_target:target_province = {
			owner = {
				save_event_target_as = local_ruler
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20052

		hidden_effect = {
			remove_friend = event_target:local_ruler
			remove_lover = event_target:local_ruler
		}

		add_rival = event_target:dw_buddy
		add_rival = event_target:local_ruler

		event_target:local_ruler = {
			character_event = { id = MNM.20053 days = 3 }
		}
	}
}

# Agitation - Rivalry aftermath - local ruler notified
character_event = {
	id = MNM.20053
	desc = EVTDESC_MNM_20053
	picture = GFX_evt_heretic
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_MNM_20053

		tooltip = { add_rival = FROM }
	}
}

###########################################
# Infernal Choir - Hidden start
# Only with rivals
# Fired from on_society_bi_yearly_pulse
###########################################

narrative_event = {
	id = MNM.20061
	title = EVTTITLE_MNM_20061
	desc = EVTDESC_MNM_20061
	picture = GFX_evt_lunatic
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	only_playable = yes
	only_capable = yes
	prisoner = no

	trigger = {
		is_devil_worshiper_trigger = yes
		in_seclusion = no
		is_ill = no
		NOT = { trait = in_hiding }

		society = {
			any_society_member = {
				ai = yes
				in_seclusion = no
				is_incapable = no
				prisoner = no
				is_ill = no

				ROOT = {
					OR = {
						is_rival = PREV
						trait = lunatic
						trait = possessed
					}
				}

				NOR = {
					character = ROOT
					trait = in_hiding

					reverse_has_opinion_modifier = {
						name = opinion_nemesis
						who = ROOT
					}
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.25
			OR = {
				trait = lunatic
				trait = possessed
			}
		}
		mult_modifier = {
			factor = 1.25
			trait = cruel
		}
		mult_modifier = {
			factor = 1.25
			trait = impaler
		}
		mult_modifier = {
			factor = 1.25
			trait = deceitful
		}
	}

	immediate = {
		save_event_target_as = dw_schemer
		society = {
			random_society_member = {
				limit = {
					ai = yes
					in_seclusion = no
					is_incapable = no
					prisoner = no
					is_ill = no

					ROOT = {
						OR = {
							is_rival = PREV
							trait = lunatic
							trait = possessed
						}
					}

					NOR = {
						character = ROOT
						trait = in_hiding

						reverse_has_opinion_modifier = {
							name = opinion_nemesis
							who = ROOT
						}
					}
				}
				save_event_target_as = dw_buddy
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20061 # Do it!

		set_character_flag = had_infernal_choir

		event_target:dw_buddy = {
			show_scope_change = no

			character_event = {
				id = MNM.20062
				days = 3
				tooltip = evt_MNM_20062_TT
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_20061 # Not a good idea

		ai_chance = { factor = 0 }
	}
}

# Infernal Choir - Invitation (looks like MNM.20012 to the rival)
character_event = {
	id = MNM.20062
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_20012
		trigger = {
			NOT = { trait = paranoid }
		}
	}
	desc = {
		text = EVTDESC_MNM_20012_PARANOID
		trigger = { trait = paranoid }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_20012 # Of course

		trigger = {
			NOT = { trait = paranoid }
		}

		event_target:dw_schemer = {
			show_scope_change = no

			narrative_event = {
				id = MNM.20064
				days = 3
				tooltip = evt_MNM_20013_TT
			}
		}

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTC_MNM_20062 # I knew it!
		tooltip_info = paranoid

		trigger = { trait = paranoid }

		set_character_flag = dw_double_cross

		event_target:dw_schemer = {
			show_scope_change = no

			narrative_event = {
				id = MNM.20064
				days = 3
				tooltip = evt_MNM_20064_TT
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_20012 # No way!

		trigger = {
			NOT = { trait = paranoid }
		}

		detract_society_currency_minor_effect = yes

		reverse_opinion = {
			name = opinion_coward
			who = event_target:dw_schemer
			years = 5
		}

		event_target:dw_schemer = {
			character_event = {
				id = MNM.20063
				days = 3
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 20
				trait = temperate
			}
			mult_modifier = {
				factor = 10
				trait = kind
			}
			mult_modifier = {
				factor = 10
				trait = just
			}
		}
	}
}

# Rival declined
character_event = {
	id = MNM.20063
	# title = EVTTITLE_MNM_20061
	desc = EVTDESC_MNM_20063
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_20063

		detract_society_currency_minor_effect = yes
	}
}

# Rival accepts the invitation
narrative_event = {
	id = MNM.20064
	title = EVTTITLE_MNM_20061
	picture = GFX_evt_sacrifice # GFX_evt_witch_burning
	border = GFX_event_narrative_frame_intrigue

	desc = {
		text = EVTDESC_MNM_20064
		sound = boiled_alive_male_01
		trigger = { event_target:dw_buddy = { is_female = no } }
	}
	desc = {
		text = EVTDESC_MNM_20064
		sound = boiled_alive_male_02
		trigger = { event_target:dw_buddy = { is_female = no } }
	}
	desc = {
		text = EVTDESC_MNM_20064
		sound = boiled_alive_female_01
		trigger = { event_target:dw_buddy = { is_female = yes } }
	}
	desc = {
		text = EVTDESC_MNM_20064
		sound = boiled_alive_female_02
		trigger = { event_target:dw_buddy = { is_female = yes } }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				event_target:dw_buddy = { has_character_flag = dw_double_cross }
			}

			event_target:dw_buddy = { clr_character_flag = dw_double_cross }

			random_courtier = {
				limit = {
					ai = yes
					prisoner = no
					age >= 6
				}

				preferred_limit = {
					OR = {
						is_close_relative = ROOT
						is_married = ROOT
						is_consort = ROOT
					}
				}

				save_event_target_as = dw_real_victim
			}
		}

		if = {
			limit = {
				NOT = { event_target:dw_real_victim = { always = yes } }
			}

			event_target:dw_buddy = { narrative_event = { id = MNM.20065 } }
		}

		if = {
			limit = {
				NOT = { trait = poet }
			}

			random = {
				chance = 33
				set_character_flag = dw_gain_poet
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20064

		tooltip = {
			event_target:dw_buddy = {
				show_scope_change = no

				death = {
					death_reason = death_vanished
					killer = ROOT
				}
			}
		}

		add_society_currency_medium_effect = yes

		# Increase Cruelty
		if = {
			limit = {
				trait = cruel
				lifestyle_traits < 1
			}

			add_trait = impaler
		}

		add_trait_partially_silently_cruel_effect = yes

		if = {
			limit = { has_character_flag = dw_gain_poet }
			clr_character_flag = dw_gain_poet
			add_trait = poet
		}

		if = {
			limit = {
				event_target:dw_real_victim = { always = yes }
			}

			event_target:dw_real_victim = {
				character_event = {
					id = MNM.20066
					days = 3
				}
			}
		}
	}
}

# Rival dies horribly
narrative_event = {
	id = MNM.20065
	title = EVTTITLE_MNM_20061
	picture = GFX_evt_sacrifice # GFX_evt_witch_burning
	border = GFX_event_narrative_frame_intrigue

	desc = {
		text = EVTDESC_MNM_20065
		sound = boiled_alive_male_01
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESC_MNM_20065
		sound = boiled_alive_male_02
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESC_MNM_20065
		sound = boiled_alive_female_01
		trigger = { is_female = yes }
	}
	desc = {
		text = EVTDESC_MNM_20065
		sound = boiled_alive_female_02
		trigger = { is_female = yes }
	}

	is_triggered_only = yes

	immediate = {
		death = {
			death_reason = death_vanished
			killer = event_target:dw_schemer
		}
	}

	option = {
		name = EVTOPTA_MNM_20065
	}
}

# Rival replaced with close relative
character_event = {
	id = MNM.20066

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:dw_buddy = { narrative_event = { id = MNM.20067 } }
		event_target:dw_schemer = { character_event = { id = MNM.20068 } }

		death = {
			death_reason = death_vanished
			killer = event_target:dw_schemer
		}
	}
}

# Rival replaced with close relative!
narrative_event = {
	id = MNM.20067
	title = EVTTITLE_MNM_20061
	picture = GFX_evt_sacrifice # GFX_evt_witch_burning
	border = GFX_event_narrative_frame_intrigue
	portrait = event_target:dw_schemer

	desc = {
		text = EVTDESC_MNM_20067
		sound = boiled_alive_male_01
		trigger = { event_target:dw_real_victim = { is_female = no } }
	}
	desc = {
		text = EVTDESC_MNM_20067
		sound = boiled_alive_male_02
		trigger = { event_target:dw_real_victim = { is_female = no } }
	}
	desc = {
		text = EVTDESC_MNM_20067
		sound = boiled_alive_female_01
		trigger = { event_target:dw_real_victim = { is_female = yes } }
	}
	desc = {
		text = EVTDESC_MNM_20067
		sound = boiled_alive_female_02
		trigger = { event_target:dw_real_victim = { is_female = yes } }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_20067

		tooltip = {
			event_target:dw_real_victim = {
				show_scope_change = no

				death = {
					death_reason = death_vanished
					killer = event_target:dw_schemer
				}
			}
		}

		add_society_currency_medium_effect = yes
	}
}

# You realize what your rival has done!
character_event = {
	id = MNM.20068
	desc = EVTDESC_MNM_20068
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { trait = lunatic }
			}

			random = {
				chance = 34
				set_character_flag = gain_lunatic
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_20068

		opinion = {
			name = opinion_nemesis
			who = event_target:dw_buddy
			years = 100
		}

		hidden_effect = {
			reverse_opinion = {
				name = opinion_nemesis
				who = event_target:dw_buddy
				years = 100
			}
		}

		add_trait_partially_silently_paranoid_effect = yes

		if = {
			limit = { has_character_flag = gain_lunatic }
			clr_character_flag = gain_lunatic
			add_trait = lunatic
		}
	}
}

###########################################
# Abduction Decision - Hidden start
# Fired from decision_abduct
# Used by both the assassins and devil worshippers
###########################################

# Abduction Start
character_event = {
	id = MNM.20070
	desc = EVTDESC_MNM_20070
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # decision_abduct, mnm_society_decisions.txt

	option = {
		name = EXCELLENT

		character_event = {
			id = MNM.20080
			days = 20
			random = 20
			tooltip = EVTTOOLTIP_MNM_20080
		}
	}
}

# Hidden 'outcome tombola' event for the "Abduct" decision
character_event = {
	id = MNM.20080

	hide_window = yes
	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		OR = {
			is_devil_worshiper_trigger = yes
			society_member_of = the_assassins
		}

		has_opinion_modifier = {
			who = event_target:abduction_target
			name = opinion_abducting
		}
	}

	fail_trigger_effect = {
		character_event = { id = MNM.20100 } # Clear out any flags, etc
	}

	immediate = {
		if = {
			limit = {
				event_target:abduction_target = {
					is_alive = no
				}
			}

			character_event = { id = MNM.20101 }
		}
		else_if = {
			limit = {
				event_target:abduction_target = {
					prisoner = yes
				}
			}

			character_event = { id = MNM.20102 }
		}
		else_if = {
			limit = {
				event_target:abduction_target = {
					same_society_as = ROOT
				}
			}

			character_event = { id = MNM.20104 }
		}
		else = {
			repeat_event = { # Fire again with no scope changes
				id = MNM.20080
				days = 30
				random = 30
			}

			if = {
				limit = {
					event_target:abduction_target = {
						is_inaccessible_trigger = no
						is_pilgrim = no
					}
				}

				random_list = {
					10000 = { # No luck yet
						mult_modifier = {
							factor = 0.75
							has_character_modifier = wol_schemer_1
						}
						mult_modifier = {
							factor = 0.5
							has_character_modifier = wol_schemer_2
						}
						mult_modifier = {
							factor = 0.2
							trait = master_schemer
						}
						mult_modifier = {
							factor = 0.5
							event_target:abduction_target = { trait = trusting }
						}
						mult_modifier = {
							factor = 1.5
							event_target:abduction_target = { has_character_modifier = wol_schemer_1 }
						}
						mult_modifier = {
							factor = 3.0
							event_target:abduction_target = { has_character_modifier = wol_schemer_2 }
						}
						mult_modifier = {
							factor = 5.0
							event_target:abduction_target = { trait = master_schemer }
						}
						mult_modifier = {
							factor = 3.0
							event_target:abduction_target = { trait = paranoid }
						}
						mult_modifier = {
							factor = 1.5
							event_target:abduction_target = { real_tier = BARON }
						}
						mult_modifier = {
							factor = 2.0
							event_target:abduction_target = { real_tier = COUNT }
						}
						mult_modifier = {
							factor = 3 # Makes sure it's very hard to abduct the same person twice
							OR = {
								reverse_has_opinion_modifier = {
									name = opinion_attempted_abduction
									who = event_target:abduction_target
								}
								reverse_has_opinion_modifier = {
									name = opinion_abducted
									who = event_target:abduction_target
								}
							}
						}
						mult_modifier = {
							factor = 0.25
							event_target:abduction_target = {
								is_ruler = no
								vassal_of = ROOT
							}
						}

						random = {
							chance = 25
							character_event = { id = MNM.20103 } # Time to give up?
						}
					}

					10000 = { # Success!
						character_event = { id = MNM.20081 }
					}
				}
			}
		}
	}
}

# Chance to abduct the target!
character_event = {
	id = MNM.20081
	picture = GFX_evt_bandits
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_20081
		trigger = {
			event_target:abduction_target = { age >= 14 }
		}
	}
	desc = {
		text = EVTDESC_MNM_20081_CHILD
		picture = GFX_evt_child_play
		trigger = {
			event_target:abduction_target = { age < 14 }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_20081

		increase_visibility_effect = yes

		event_target:abduction_target = {
			show_scope_change = no

			character_event = {
				id = MNM.20082
				days = 3
				tooltip = EVTTOOLTIP_MNM_20081
			}
		}

		ai_chance = { factor = 10 }
	}

	option = {
		name = EVTOPTB_MNM_20081
	}
}

# Target gets abducted... or not.
character_event = {
	id = MNM.20082
	picture = GFX_evt_bandits
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_WOL_2121
		picture = GFX_evt_child_play
		trigger = { age >= 14 }
	}
	desc = {
		text = EVTDESC_MNM_20082_CHILD
		picture = GFX_evt_children_talking
		trigger = {
			age < 14
			age >= 4
		}
	}
	desc = {
		text = EVTDESC_MNM_20082_BABY
		picture = GFX_evt_children_talking
		trigger = { age < 4 }
	}

	is_triggered_only = yes

	immediate = {
		random = {
			chance = 75

			mult_modifier = {
				factor = 0.1 # Makes sure it's very hard to abduct the same person twice
				OR = {
					has_opinion_modifier = {
						who = FROM
						name = opinion_attempted_abduction
					}

					has_opinion_modifier = {
						who = FROM
						name = opinion_abducted
					}
				}
			}
			mult_modifier = {
				factor = 0.1
				age >= 14

				OR = {
					has_character_modifier = seduced_loyal_bodyguard
					has_character_modifier = seduced_loyal_spy_maid
				}
			}
			mult_modifier = {
				factor = 2.0
				trait = trusting
			}

			set_character_flag = abduction_success
		}
	}

	option = {
		name = {
			text = EVTOPT_WOL_2121_CAUGHT # CleanSlate: target_snooper doesn't exist, but also players can't be the target of the abduct decision, so all the localisation in this event is probably superfluous anyway.
			trigger = { age >= 14 }
		}
		name = {
			text = EVTOPT_MNM_20082_CHILD_CAUGHT
			trigger = {
				age < 14
				age >= 4
			}
		}
		name = {
			text = EVTOPT_MNM_20082_BABY_CAUGHT
			trigger = { age < 4 }
		}

		trigger = { has_character_flag = abduction_success }

		imprison = FROM

		opinion = {
			name = opinion_abducted
			who = FROM
			years = 50
		}

		FROM = {
			character_event = { id = MNM.20083 }
		}

		clr_character_flag = abduction_success
	}

	option = {
		name = {
			text = EVTOPT_WOL_2121
			trigger = { age >= 14 }
		}
		name = {
			text = EVTOPT_MNM_20082_CHILD
			trigger = {
				age < 14
				age >= 4
			}
		}
		name = {
			text = EVTOPT_MNM_20082_BABY
			trigger = { age < 4 }
		}

		trigger = { NOT = { has_character_flag = abduction_success } }

		if = {
			limit = {
				is_incapable = no
				age >= 4

				OR = {
					trait = paranoid
					random < 50
				}
			}

			custom_tooltip = { text = EVTTOOLTIP_MNM_20082_PERP }

			opinion = {
				name = opinion_attempted_abduction
				who = FROM
				years = 10
			}
		}

		FROM = {
			character_event = { id = MNM.20084 }
		}
	}
}

# Target gets abducted!
character_event = {
	id = MNM.20083
	desc = EVTDESC_MNM_20083
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	immediate = {
		character_event = { id = MNM.20100 }
	}

	option = {
		name = EXCELLENT

		tooltip = {
			reverse_opinion = {
				name = opinion_abducted
				who = event_target:abduction_target
				years = 50
			}
		}
	}
}

# Abduction fails
character_event = {
	id = MNM.20084
	desc = EVTDESC_MNM_20084
	picture = GFX_evt_bandits
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_20084

		tooltip = {
			reverse_opinion = {
				name = opinion_attempted_abduction
				who = event_target:abduction_target
				years = 10
			}
		}
	}
}

# End of "Abduction" events to clear out flags, etc
character_event = {
	id = MNM.20100

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_opinion = {
			name = opinion_abducting
			who = event_target:abduction_target
		}

		clear_delayed_event = { id = MNM.20080 }
	}
}

# My target has died!
character_event = {
	id = MNM.20101
	desc = EVTDESC_MNM_20101
	picture = GFX_evt_death
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:abduction_target

	is_triggered_only = yes

	immediate = {
		character_event = { id = MNM.20100 }
	}

	option = {
		name = EVTOPTA_MNM_20101
	}
}

# My target has been imprisoned!
character_event = {
	id = MNM.20102
	desc = EVTDESC_MNM_20102
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:abduction_target

	is_triggered_only = yes

	immediate = {
		character_event = { id = MNM.20100 }
	}

	option = {
		name = VERY_WELL
	}
}

# My efforts are not bearing fruit. Give up?
character_event = {
	id = MNM.20103
	desc = EVTDESC_MNM_20103
	picture = GFX_evt_eavesdropping
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:abduction_target

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_2065 # Give up

		character_event = { id = MNM.20100 }
	}

	option = {
		name = EVTOPTB_MNM_20103 # Keep at it

		ai_chance = { factor = 10 }
	}
}

# My target has joined my Society
character_event = {
	id = MNM.20104
	desc = EVTDESC_MNM_20104
	picture = GFX_evt_shadowy_cabal
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:abduction_target

	is_triggered_only = yes

	immediate = {
		character_event = { id = MNM.20100 }
	}

	option = {
		name = EVTOPTA_MNM_20101
	}
}

# Demon/Witch-hunters have tracked you down!
character_event = {
	id = MNM.7855
	title = EVTTITLE_MNM_7855
	picture = GFX_evt_catching_heretic
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_7855_A
		picture = GFX_evt_whispers
		trigger = { has_character_flag = DW_was_attacked_by_the_slayer } # The Slayer
	}
	desc = { # To set pictures...
		text = EVTDESC_MNM_7855_B
		picture = GFX_evt_witch_burning
		trigger = { has_character_flag = DW_was_attacked_by_angry_villagers } # Angry Villagers
	}
	desc = {
		text = EVTDESC_MNM_7855_C
		picture = GFX_evt_catching_heretic
		trigger = { has_character_flag = DW_was_attacked_by_demon_hunters } # Winchesters
	}
	desc = {
		text = EVTDESC_MNM_7855_D
		picture = GFX_evt_dark_love
		trigger = { has_character_flag = DW_was_attacked_by_lone_demon_hunter } # Demon Hunter
	}
	desc = {
		text = EVTDESC_MNM_7855_E
		picture = GFX_evt_catching_heretic
		trigger = { has_character_flag = DW_was_attacked_by_righteous_knights } # Holy Knights
	}
	desc = {
		text = EVTDESC_MNM_7855_F
		picture = GFX_evt_illness
		trigger = { has_character_flag = DW_was_attacked_is_incapable } # Incapable ruler attacked in bed
	}
	desc = {
		text = EVTDESC_MNM_7855_A_again
		picture = GFX_evt_whispers
		trigger = { has_character_flag = DW_was_attacked_by_the_slayer_again } # The Slayer II
	}
	desc = {
		text = EVTDESC_MNM_7855_B_again
		picture = GFX_evt_witch_burning
		trigger = { has_character_flag = DW_was_attacked_by_angry_villagers_again } # Angry Villagers II
	}
	desc = {
		text = EVTDESC_MNM_7855_C_again
		picture = GFX_evt_dark_prayer
		trigger = { has_character_flag = DW_was_attacked_by_demon_hunters_again } # Winchesters II
	}
	desc = {
		text = EVTDESC_MNM_7855_D_again
		picture = GFX_evt_shadow
		trigger = { has_character_flag = DW_was_attacked_by_lone_demon_hunter_again } # Demon Hunter II
	}
	desc = {
		text = EVTDESC_MNM_7855_E_again
		picture = GFX_evt_battle
		trigger = { has_character_flag = DW_was_attacked_by_righteous_knights_again } # Holy Knights II
	}

	is_triggered_only = yes
	hide_from = yes

	has_dlc = "Mystics"

	trigger = {
		OR = {
			has_character_modifier = known_satanist
			has_character_flag = was_ratted_out_by_fellow_member
			has_character_flag = has_it_coming
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.5
			society_rank == 3
		}
		mult_modifier = {
			factor = 2
			society_rank == 4
		}
		mult_modifier = {
			factor = 2
			independent = yes
		}
		mult_modifier = {
			factor = 2
			is_devil_worshiper_trigger = yes
		}
	}

	immediate = {
		if = { # Incapable ruler attacked in bed
			limit = { is_incapable = yes }
			set_character_flag = DW_was_attacked_is_incapable
		}
		else = {
			# chooses who attacks you...
			random_list = {
				10 = {
					trigger = { NOT = { has_character_flag = DW_was_attacked_by_the_slayer } }
					set_character_flag = DW_was_attacked_by_the_slayer
				}

				10 = {
					trigger = {
						OR = {
							has_character_modifier = cat_familiar
							has_character_modifier = wolf_familiar
							has_character_modifier = raven_familiar
							has_character_modifier = owl_familiar
						}

						NOT = { has_character_flag = DW_was_attacked_by_angry_villagers }
					}

					set_character_flag = DW_was_attacked_by_angry_villagers
				}

				10 = {
					trigger = { NOT = { has_character_flag = DW_was_attacked_by_demon_hunters } }
					set_character_flag = DW_was_attacked_by_demon_hunters
				}

				10 = {
					trigger = { NOT = { has_character_flag = DW_was_attacked_by_lone_demon_hunter } }
					set_character_flag = DW_was_attacked_by_lone_demon_hunter
				}

				10 = {
					trigger = { NOT = { has_character_flag = DW_was_attacked_by_righteous_knights } }
					set_character_flag = DW_was_attacked_by_righteous_knights
				}

				# if attacked a second time...
				10000 = {
					trigger = { has_character_flag = DW_was_attacked_by_the_slayer }
					clr_character_flag = DW_was_attacked_by_the_slayer
					set_character_flag = DW_was_attacked_by_the_slayer_again
				}

				10000 = {
					trigger = { has_character_flag = DW_was_attacked_by_angry_villagers }
					clr_character_flag = DW_was_attacked_by_angry_villagers
					set_character_flag = DW_was_attacked_by_angry_villagers_again
				}

				10000 = {
					trigger = { has_character_flag = DW_was_attacked_by_demon_hunters }
					clr_character_flag = DW_was_attacked_by_demon_hunters
					set_character_flag = DW_was_attacked_by_demon_hunters_again
				}

				10000 = {
					trigger = { has_character_flag = DW_was_attacked_by_lone_demon_hunter }
					clr_character_flag = DW_was_attacked_by_lone_demon_hunter
					set_character_flag = DW_was_attacked_by_lone_demon_hunter_again
				}

				10000 = {
					trigger = { has_character_flag = DW_was_attacked_by_righteous_knights }
					clr_character_flag = DW_was_attacked_by_righteous_knights
					set_character_flag = DW_was_attacked_by_righteous_knights_again
				}
			}
		}

		# Finds someone else to blame...
		society = {
			random_society_member = {
				limit = {
					is_incapable = no
					prisoner = no
					NOT = { character = ROOT }
				}

				preferred_limit = { # first look for someone you like... # CleanSlate: Why in the world are they first? Before rivals, even?
					OR = {
						is_friend = ROOT
						is_lover = ROOT
					}
				}

				preferred_limit = { # Then look for someone you rival...
					is_rival = ROOT
				}

				preferred_limit = { # Then look for someone of your own dynasty...
					is_blood_relative_of_root_trigger = yes
				}

				preferred_limit = { # find someone at court...
					host = { character = ROOT }
				}

				preferred_limit = { # Then look for someone in the same realm
					same_realm = ROOT
				}

				preferred_limit = { # Then look abroad...
					is_within_diplo_range = ROOT
				}

				save_event_target_as = other_member_to_blame
			}
		}
	}

	option = { # fight them...
		name = {
			text = EVTOPTA_MNM_7855
			trigger = {
				OR = {
					has_character_flag = DW_was_attacked_by_the_slayer
					has_character_flag = DW_was_attacked_by_angry_villagers
					has_character_flag = DW_was_attacked_by_demon_hunters
					has_character_flag = DW_was_attacked_by_lone_demon_hunter
					has_character_flag = DW_was_attacked_by_righteous_knights
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_7855_again
			trigger = {
				OR = {
					has_character_flag = DW_was_attacked_by_the_slayer_again
					has_character_flag = DW_was_attacked_by_angry_villagers_again
					has_character_flag = DW_was_attacked_by_demon_hunters_again
					has_character_flag = DW_was_attacked_by_lone_demon_hunter_again
					has_character_flag = DW_was_attacked_by_righteous_knights_again
				}
			}
		}

		trigger = { NOT = { has_character_flag = DW_was_attacked_is_incapable } }

		custom_tooltip = { text = EVTOPTA_MNM_7855_TT }

		random_list = {
			10 = {
				# Nothing happens
				mult_modifier = {
					factor = 0.9
					has_injury_trigger = yes
				}
				mult_modifier = {
					factor = 0.9
					is_maimed_trigger = yes
				}
				mult_modifier = {
					factor = 0.9
					has_severe_disability_trigger = yes
				}
				mult_modifier = {
					factor = 0.9
					has_medium_disability_trigger = yes
				}
				mult_modifier = {
					factor = 1.1
					is_smart_trigger = yes
				}
				mult_modifier = {
					factor = 1.1
					is_strong_trigger = yes
				}

				custom_tooltip = { text = they_escape_TT }
			}
			30 = { # You are injured
				mult_modifier = {
					factor = 0.9
					combat_rating >= 10
				}
				mult_modifier = {
					factor = 0.9
					combat_rating >= 20
				}
				mult_modifier = {
					factor = 0.9
					combat_rating >= 30
				}
				mult_modifier = {
					factor = 0.9
					combat_rating >= 40
				}
				mult_modifier = {
					factor = 0.9
					combat_rating >= 50
				}

				custom_tooltip = {
					text = you_are_seriously_injured_TT
					add_maimed_trait_effect = yes
				}
			}
			50 = { # You are slain in personal combat
				mult_modifier = {
					factor = 0.9
					combat_rating = 10
				}
				mult_modifier = {
					factor = 0.9
					combat_rating = 20
				}
				mult_modifier = {
					factor = 0.9
					combat_rating = 30
				}
				mult_modifier = {
					factor = 0.9
					combat_rating = 40
				}
				mult_modifier = {
					factor = 0.9
					combat_rating = 50
				}
				mult_modifier = {
					factor = 0.9
					has_lifestyle_martial_trigger = yes
				}
				mult_modifier = {
					factor = 0.9
					OR = {
						has_education_martial_trigger = yes
						has_top_tier_education_trait_trigger = yes
					}
				}
				mult_modifier = {
					factor = 1.1
					has_severe_disability_trigger = yes
				}
				mult_modifier = {
					factor = 1.1
					is_dumb_trigger = yes
				}
				mult_modifier = {
					factor = 1.1
					is_weak_trigger = yes
				}

				custom_tooltip = {
					text = you_are_killed_in_personal_combat_TT
					death = { death_reason = death_duel }
				}
			}
		}
	}

	option = { # attempt to bribe them...
		name = {
			text = EVTOPTC_MNM_7855_A
			trigger = { has_character_flag = DW_was_attacked_by_the_slayer }
		}
		name = {
			text = EVTOPTC_MNM_7855_B
			trigger = { has_character_flag = DW_was_attacked_by_angry_villagers }
		}
		name = {
			text = EVTOPTC_MNM_7855_C
			trigger = { has_character_flag = DW_was_attacked_by_demon_hunters }
		}
		name = {
			text = EVTOPTC_MNM_7855_D
			trigger = { has_character_flag = DW_was_attacked_by_lone_demon_hunter }
		}
		name = {
			text = EVTOPTC_MNM_7855_E
			trigger = { has_character_flag = DW_was_attacked_by_righteous_knights }
		}
		name = {
			text = EVTOPTC_MNM_7855_A_again
			trigger = { has_character_flag = DW_was_attacked_by_the_slayer_again }
		}
		name = {
			text = EVTOPTC_MNM_7855_B_again
			trigger = { has_character_flag = DW_was_attacked_by_angry_villagers_again }
		}
		name = {
			text = EVTOPTC_MNM_7855_C_again
			trigger = { has_character_flag = DW_was_attacked_by_demon_hunters_again }
		}
		name = {
			text = EVTOPTC_MNM_7855_D_again
			trigger = { has_character_flag = DW_was_attacked_by_lone_demon_hunter_again }
		}
		name = {
			text = EVTOPTC_MNM_7855_E_again
			trigger = { has_character_flag = DW_was_attacked_by_righteous_knights_again }
		}

		trigger = { NOT = { has_character_flag = DW_was_attacked_is_incapable } }

		custom_tooltip = { text = EVTOPTC_MNM_7855_TT }

		scaled_wealth = {
			value = -1
			min = -100
		}

		random_list = {
			10 = {
				mult_modifier = {
					factor = 0.9
					has_unattractive_trait_trigger = yes
				}
				mult_modifier = {
					factor = 0.9
					is_unattractive_trigger = yes
				}
				mult_modifier = {
					factor = 1.1
					diplomacy >= 10
				}
				mult_modifier = {
					factor = 1.1
					diplomacy >= 15
				}
				mult_modifier = {
					factor = 1.1
					diplomacy >= 17
				}
				mult_modifier = {
					factor = 1.1
					diplomacy >= 20
				}
				mult_modifier = {
					factor = 1.1
					OR = {
						has_top_tier_education_trait_trigger = yes
						has_education_diplomacy_trigger = yes
					}
				}
				mult_modifier = {
					factor = 1.1
					has_attractive_trait_trigger = yes
				}
				mult_modifier = {
					factor = 1.1
					is_attractive_trigger = yes
				}

				custom_tooltip = { text = they_accept_your_offer_TT }
			}

			20 = { # You are injured
				custom_tooltip = {
					text = you_are_seriously_injured_TT
					add_maimed_trait_effect = yes
				}
			}

			40 = { # You are dragged off and burnt as a witch/warlock
				trigger = {
					OR = {
						has_character_flag = DW_was_attacked_by_angry_villagers
						has_character_flag = DW_was_attacked_by_demon_hunters
						has_character_flag = DW_was_attacked_by_righteous_knights
						has_character_flag = DW_was_attacked_by_angry_villagers_again
						has_character_flag = DW_was_attacked_by_demon_hunters_again
						has_character_flag = DW_was_attacked_by_righteous_knights_again
					}
				}

				custom_tooltip = {
					text = they_drag_you_off_to_burn
					death = { death_reason = death_execution_burning }
				}
			}

			10 = { # You are dragged off and burnt as a witch/warlock
				trigger = {
					OR = {
						has_character_flag = DW_was_attacked_by_lone_demon_hunter
						has_character_flag = DW_was_attacked_by_lone_demon_hunter_again
					}
				}

				custom_tooltip = {
					text = they_saw_you_in_half
					death = { death_reason = death_execution_sawing }
				}
			}

			10 = { # You are dragged off and burnt as a witch/warlock
				trigger = {
					OR = {
						has_character_flag = DW_was_attacked_by_the_slayer
						has_character_flag = DW_was_attacked_by_the_slayer_again
					}
				}

				custom_tooltip = {
					text = they_impale_you
					death = { death_reason = death_execution_impaling }
				}
			}
		}
	}

	option = { # do a spell (sacrifice your child)...
		name = EVTOPTB_MNM_7855

		trigger = {
			NOT = { has_character_flag = DW_was_attacked_is_incapable }
			has_society_currency_major_trigger = yes
			any_child = { ai = yes }
		}

		custom_tooltip = { text = EVTOPTB_MNM_7855_TT }

		if = {
			limit = {
				OR = {
					has_character_flag = DW_was_attacked_by_the_slayer
					has_character_flag = DW_was_attacked_by_lone_demon_hunter
				}
			}

			custom_tooltip = { text = EVTOPTB_MNM_7855_TT_singular }
		}
		else_if = {
			limit = {
				OR = {
					has_character_flag = DW_was_attacked_by_angry_villagers
					has_character_flag = DW_was_attacked_by_demon_hunters
					has_character_flag = DW_was_attacked_by_righteous_knights
				}
			}

			custom_tooltip = { text = EVTOPTB_MNM_7855_TT_plural }
		}

		detract_society_currency_major_effect = yes

		random_child = {
			limit = { ai = yes }
			random_accident_death_effect = yes
		}

	}

	option = { # offer them another member...!
		name = EVTOPTD_MNM_7855

		trigger = {
			NOT = { has_character_flag = DW_was_attacked_is_incapable }
			is_devil_worshiper_trigger = yes
			society_rank < 4
			event_target:other_member_to_blame = { always = yes }
		}

		custom_tooltip = { text = EVTOPTD_MNM_7855_TT }

		if = {
			limit = {
				OR = {
					has_character_flag = DW_was_attacked_by_angry_villagers
					has_character_flag = DW_was_attacked_by_demon_hunters
					has_character_flag = DW_was_attacked_by_righteous_knights
					has_character_flag = DW_was_attacked_by_angry_villagers_again
					has_character_flag = DW_was_attacked_by_demon_hunters_again
					has_character_flag = DW_was_attacked_by_righteous_knights_again
				}
			}

			random = {
				chance = 50

				custom_tooltip = {
					text = they_drag_you_off_to_burn
					death = { death_reason = death_execution_burning }
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_character_flag = DW_was_attacked_by_lone_demon_hunter
					has_character_flag = DW_was_attacked_by_lone_demon_hunter_again
				}
			}

			random = {
				chance = 50

				custom_tooltip = {
					text = they_saw_you_in_half
					death = { death_reason = death_execution_sawing }
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_character_flag = DW_was_attacked_by_the_slayer
					has_character_flag = DW_was_attacked_by_the_slayer_again
				}
			}

			random = {
				chance = 50

				custom_tooltip = {
					text = they_impale_you
					death = { death_reason = death_execution_impaling }
				}
			}
		}

		event_target:other_member_to_blame = {
			set_character_flag = was_ratted_out_by_fellow_member

			if = {
				limit = { ai = yes }
				increase_visibility_minor_effect = yes
			}
		}
	}

	option = {
		name = EVTOPTE_MNM_7855

		trigger = { has_character_flag = DW_was_attacked_is_incapable }

		death = { death_reason = death_execution_burning }
	}

	after = {
		# CLEAR ALL FLAGS
		clr_character_flag = DW_was_attacked_by_the_slayer_again
		clr_character_flag = DW_was_attacked_by_angry_villagers_again
		clr_character_flag = DW_was_attacked_by_demon_hunters_again
		clr_character_flag = DW_was_attacked_by_lone_demon_hunter_again
		clr_character_flag = DW_was_attacked_by_righteous_knights_again
		clr_character_flag = was_ratted_out_by_fellow_member
		clr_character_flag = has_it_coming
	}
}