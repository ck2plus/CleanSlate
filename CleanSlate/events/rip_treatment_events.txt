###########################################
#                                         #
# RIP Treatment Events                    #
# ID RIP.11000-RIP.11050                  #
#                                         #
###########################################

# Written by Markus OlsÃ©n
# Additional writing by Mathilda Bjarnehed & Milla Isaksson

namespace = RIP

# Severely wounded removed
character_event = {
	id = RIP.11000
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCA_RIP_11000
		picture = GFX_evt_recovery
		trigger = { NOT = { has_character_flag = pending_infection } }
	}

	desc = {
		text = EVTDESCB_RIP_11000
		picture = GFX_evt_bloody_tools
		trigger = { has_character_flag = pending_infection }
	}

	is_triggered_only = yes # resolve_severely_injured_effect
	hide_from = yes
	hide_new = yes

	trigger = {
		trait = severely_injured
	}

	option = {
		name = EVTOPTA_RIP_11000

		trigger = {
			NOT = { has_character_flag = pending_infection }
		}

		remove_trait = severely_injured
		add_scarred_tiered_effect = yes
	}

	option = {
		name = EVTOPTB_RIP_11000

		trigger = { has_character_flag = pending_infection }

		remove_trait = severely_injured
		add_trait = infection
		add_scarred_tiered_effect = yes
		clr_character_flag = pending_infection

		character_event = {
			id = RIP.11001
			years = 1
			random = 1095 # 3 years
		}
	}
}

#####################################################
# Symptoms and Diseases removed after given time	#
#####################################################

# RIP.11001 Removing infection
# RIP.11002 Removing cough
# RIP.11003 Removing fever
# RIP.11004 Removing diarrhea
# RIP.11005 Removing vomiting
# RIP.11006 Removing chest pain
# RIP.11007 Removing cramps
# RIP.11008 Removing rash
# RIP.11009 Removing headache
# RIP.11010 Removing abdominal pain
# RIP.11011 Removing fatigue
# RIP.11012 Removing malaise

# Removing infection
character_event = {
	id = RIP.11001
	desc = EVTDESC_RIP_11001
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = infection

		if = {
			limit = { trait = wounded }

			character_event = {
				id = 6081 # wound should heal soon after
				days = 14
				random = 30
			}
		}
	}
}

# Removing cough
character_event = {
	id = RIP.11002
	desc = EVTDESC_RIP_11002
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = cough
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = cough
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing fever
character_event = {
	id = RIP.11003
	desc = EVTDESC_RIP_11003
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = fever
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = fever
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing diarrhea
character_event = {
	id = RIP.11004
	desc = EVTDESC_RIP_11004
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = diarrhea
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = diarrhea
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing vomiting
character_event = {
	id = RIP.11005
	desc = EVTDESC_RIP_11005
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = vomiting
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = vomiting
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing chest pain
character_event = {
	id = RIP.11006
	desc = EVTDESC_RIP_11006
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = chest_pain
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = chest_pain
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing cramps
character_event = {
	id = RIP.11007
	desc = EVTDESC_RIP_11007
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = cramps
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = cramps
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing rash
character_event = {
	id = RIP.11008
	desc = EVTDESC_RIP_11008
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = rash
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = rash
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing headache
character_event = {
	id = RIP.11009
	desc = EVTDESC_RIP_11009
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = headache
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = headache
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing abdominal pain
character_event = {
	id = RIP.11010
	desc = EVTDESC_RIP_11010
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = abdominal_pain
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = abdominal_pain
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing fatigue
character_event = {
	id = RIP.11011
	desc = EVTDESC_RIP_11011
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = fatigue
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = fatigue
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

# Removing malaise
character_event = {
	id = RIP.11012
	desc = EVTDESC_RIP_11012
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trait = malaise
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = malaise
		clr_character_flag = disease_not_serious

		hidden_effect = {
			remove_character_modifier = symptom_treatment_1
			remove_character_modifier = symptom_treatment_2
			remove_character_modifier = symptom_treatment_3
			remove_character_modifier = symptom_treatment_4
		}
	}
}

######################
# Diseases			 #
######################
# RIP.11015 Removing flu
# RIP.11016 Removing dysentery
# RIP.11017 Removing gout
# RIP.11018 Removing food_poisoning
# RIP.11019 Removing rabies
# RIP.11020 Removing cancer

# Removing flu
character_event = {
	id = RIP.11015
	desc = EVTDESC_RIP_11015
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes

	trigger = {
		trait = flu

		trigger_if = {
			limit = { has_character_flag = manifest_flu }

			had_character_flag = {
				flag = manifest_flu
				months >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 6

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = flu
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_flu
		clr_character_flag = manifest_flu
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing dysentery
character_event = {
	id = RIP.11016
	desc = EVTDESC_RIP_11016
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes

	trigger = {
		trait = dysentery

		trigger_if = {
			limit = { has_character_flag = manifest_dysentery }

			had_character_flag = {
				flag = manifest_dysentery
				months >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 6

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = dysentery
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_dysentery
		clr_character_flag = manifest_dysentery
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing gout
character_event = {
	id = RIP.11017
	desc = EVTDESC_RIP_11017
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes

	trigger = {
		trait = gout
		health >= 6

		trigger_if = {
			limit = { has_character_flag = manifest_gout }

			had_character_flag = {
				flag = manifest_gout
				months >= 67
			}
		}
	}

	mean_time_to_happen = {
		years = 100

		mult_modifier = {
			factor = 0.5
			health >= 7
		}

		mult_modifier = {
			factor = 0.5
			health >= 8
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = gout
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_gout
		clr_character_flag = manifest_gout
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing food poisoning
character_event = {
	id = RIP.11018
	desc = EVTDESC_RIP_11018
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes

	trigger = {
		trait = food_poisoning

		trigger_if = {
			limit = { has_character_flag = manifest_food_poisoning }

			had_character_flag = {
				flag = manifest_food_poisoning
				years >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 3

		mult_modifier = {
			factor = 2
			trait = gluttonous
		}

		mult_modifier = {
			factor = 2
			trait = hedonist
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = food_poisoning
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_food_poisoning
		clr_character_flag = manifest_food_poisoning
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing rabies
character_event = {
	id = RIP.11019
	desc = EVTDESC_RIP_11019
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes

	trigger = {
		trait = rabies

		trigger_if = {
			limit = { has_character_flag = manifest_rabies }

			had_character_flag = {
				flag = manifest_rabies
				months >= 67
			}
		}
	}

	mean_time_to_happen = {
		years = 2083 # Good luck!

		mult_modifier = {
			factor = 0.5
			health >= 8
		}

		mult_modifier = {
			factor = 0.5
			health >= 9
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = rabies
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_rabies
		clr_character_flag = manifest_rabies
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing cancer
character_event = {
	id = RIP.11020
	desc = EVTDESC_RIP_11020
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes

	trigger = {
		trait = cancer

		trigger_if = {
			limit = { has_character_flag = manifest_cancer }

			had_character_flag = {
				flag = manifest_cancer
				months >= 67
			}
		}
	}

	mean_time_to_happen = {
		years = 200

		mult_modifier = {
			factor = 0.5
			health >= 7
		}

		mult_modifier = {
			factor = 0.5
			health >= 8
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = cancer
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_cancer
		clr_character_flag = manifest_cancer
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# OLD DISEASES
# Removing pneumonia
character_event = {
	id = RIP.11021
	desc = EVTDESC_RIP_11021
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = pneumonic
		base_health >= 4

		trigger_if = {
			limit = { has_character_flag = manifest_pneumonia }

			had_character_flag = {
				flag = manifest_pneumonia
				years >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 4

		mult_modifier = {
			factor = 2.0
			base_health < 5
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 8
		}

		mult_modifier = {
			factor = 1.5
			trait = depressed
		}

		mult_modifier = {
			factor = 1.5
			trait = stressed
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = pneumonic
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_pneumonia
		clr_character_flag = manifest_pneumonia
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}
# Removing Great Pox
character_event = {
	id = RIP.11022
	desc = EVTDESC_RIP_11022
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = great_pox
		health >= 6

		trigger_if = {
			limit = { has_character_flag = manifest_syphilis }

			had_character_flag = {
				flag = manifest_syphilis
				months >= 67
			}
		}
	}

	mean_time_to_happen = {
		years = 2083

		mult_modifier = {
			factor = 0.5
			health >= 8
		}

		mult_modifier = {
			factor = 0.5
			health >= 9
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = great_pox
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_syphilis
		clr_character_flag = manifest_syphilis
		set_character_flag = immune_syphilis
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing leprosy
# character_event = {
#	id = RIP.11023
#	desc = EVTDESC_RIP_11023
#	picture = GFX_evt_recovery
#	border = GFX_event_normal_frame_religion
#
#	is_sick = yes
#	has_dlc = "Reapers"
#
#	trigger = {
#		trait = leper
#	}
#
#	option = {
#		name = EVTOPTA_RIP_11001
#
#		remove_trait = leper
#		clr_character_flag = developing_illness
#		clr_character_flag = got_leprosy
#	}
# }

# Removing consumption
character_event = {
	id = RIP.11024
	desc = EVTDESC_RIP_11024
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = consumption

		trigger_if = {
			limit = { has_character_flag = manifest_consumption }

			had_character_flag = {
				flag = manifest_consumption
				months >= 2
			}
		}
	}

	mean_time_to_happen = {
		years = 2

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = consumption
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_consumption
		clr_character_flag = manifest_consumption
		set_character_flag = immune_consumption
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing typhoid fever
character_event = {
	id = RIP.11025
	desc = EVTDESC_RIP_11025
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = slow_fever

		trigger_if = {
			limit = { has_character_flag = manifest_slow_fever }

			had_character_flag = {
				flag = manifest_slow_fever
				months >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 4

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = slow_fever
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_slow_fever
		clr_character_flag = manifest_slow_fever
		set_character_flag = immune_slow_fever
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing camp_fever
character_event = {
	id = RIP.11026
	desc = EVTDESC_RIP_11026
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = camp_fever

		trigger_if = {
			limit = { has_character_flag = manifest_camp_fever }

			had_character_flag = {
				flag = manifest_camp_fever
				months >= 2
			}
		}
	}

	mean_time_to_happen = {
		years = 1

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001
		remove_trait = camp_fever
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_camp_fever
		clr_character_flag = manifest_camp_fever
		set_character_flag = immune_camp_fever
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing bubonic plague
character_event = {
	id = RIP.11027
	desc = EVTDESC_RIP_11027
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = bubonic_plague

		trigger_if = {
			limit = { has_character_flag = manifest_bubonic_plague }

			had_character_flag = {
				flag = manifest_bubonic_plague
				months >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 3

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = bubonic_plague
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_bubonic_plague
		clr_character_flag = manifest_bubonic_plague
		set_character_flag = immune_bubonic_plague
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes

			if = {
				limit = {
					ai = no
					is_ironman = yes
				}

				set_character_flag = achievement_i_got_better
			}
		}
	}
}

# Removing measles
character_event = {
	id = RIP.11028
	desc = EVTDESC_RIP_11028
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = measles

		trigger_if = {
			limit = { has_character_flag = manifest_measles }

			had_character_flag = {
				flag = manifest_measles
				months >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 5

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = measles
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_measles
		clr_character_flag = manifest_measles
		set_character_flag = immune_measles
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing smallpox
character_event = {
	id = RIP.11029
	desc = EVTDESC_RIP_11029
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = smallpox

		trigger_if = {
			limit = { has_character_flag = manifest_smallpox }

			had_character_flag = {
				flag = manifest_smallpox
				months >= 1
			}
		}
	}

	mean_time_to_happen = {
		months = 5

		mult_modifier = {
			factor = 0.75
			base_health >= 5.1
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 6.0
		}

		mult_modifier = {
			factor = 0.5
			base_health >= 7.0
		}

		mult_modifier = {
			factor = 1.5
			base_health < 5.0
		}

		mult_modifier = {
			factor = 2.0
			base_health < 4.1
		}

		mult_modifier = {
			factor = 0.66
			practical_age < 20
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 30
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 40
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 50
		}

		mult_modifier = {
			factor = 2.0
			practical_age >= 70
		}

		mult_modifier = {
			factor = 2.0
			is_ill = yes
		}

		mult_modifier = {
			factor = 4.0
			trait = infirm
		}

		mult_modifier = {
			factor = 5.0
			is_incapable = yes
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = smallpox
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_smallpox
		clr_character_flag = manifest_smallpox
		set_character_flag = immune_smallpox
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}

# Removing Aztec disease (Syphilis)
character_event = {
	id = RIP.11030
	desc = EVTDESC_RIP_11030
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_sick = yes
	has_dlc = "Reapers"

	trigger = {
		trait = aztec_disease
		health >= 6

		trigger_if = {
			limit = { has_character_flag = manifest_aztec_disease }

			had_character_flag = {
				flag = manifest_aztec_disease
				months >= 67
			}
		}
	}

	mean_time_to_happen = {
		years = 2083

		mult_modifier = {
			factor = 0.5
			health >= 8
		}

		mult_modifier = {
			factor = 0.5
			health >= 9
		}
	}

	option = {
		name = EVTOPTA_RIP_11001

		remove_trait = aztec_disease
		clear_disease_level_effect = yes
		clr_character_flag = developing_illness
		clr_character_flag = got_aztec_disease
		clr_character_flag = manifest_aztec_disease
		set_character_flag = immune_aztec_disease
		scrying_omen_fulfilled_by_removing_disease_effect = yes

		hidden_effect = {
			remove_treatment_modifiers_effect = yes
		}
	}
}


######################################################################################
# Diagnosis events
######################################################################################
# RIP.11021

# Get treatment
character_event = {
	id = RIP.11031

	is_triggered_only = yes
	hide_window = yes

	prisoner = no

	trigger = {
		trigger_if = {
			limit = { is_playable = yes }
			has_assigned_minor_title = title_court_physician
		}
		trigger_else = {
			OR = {
				host = { has_assigned_minor_title = title_court_physician }
				has_minor_title = title_court_physician # So unlanded court physicians can treat themselves
			}
		}

		OR = {
			character_disease_trigger = yes

			trigger_if = {
				limit = { trait = leper }
				has_character_flag = new_leper_character
			}

			trigger_if = {
				limit = { has_any_symptom = yes }

				trigger_if = {
					limit = { has_character_flag = being_treated }

					had_character_flag = {
						flag = being_treated
						days >= 20
					}
				}

				NOR = {
					has_character_modifier = symptom_treatment_1
					has_character_modifier = symptom_treatment_2
					has_character_modifier = symptom_treatment_3
					has_character_modifier = symptom_treatment_4
				}
			}
		}
	}

	immediate = {
		if = {
			limit = { is_playable = no }

			if = { # random_courtier_or_vassal below excludes ROOT
				limit = { has_minor_title = title_court_physician }
				save_event_target_as = court_physician
			}
			else = {
				host = {
					random_courtier_or_vassal = { # Markus' doing
						limit = {
							has_minor_title = title_court_physician
							vassal_of = PREV
						}

						save_event_target_as = court_physician
					}
				}
			}
		}
		else = {
			random_courtier_or_vassal = { # Markus' doing
				limit = { has_minor_title = title_court_physician }
				save_event_target_as = court_physician
			}
		}

		if = {
			limit = {
				has_epidemic_disease_trigger = yes
				in_seclusion = yes
				NOT = { has_character_flag = seclusion_treatment_approved }

				host = {
					NOT = { character = ROOT }
				}
			}

			save_event_target_as = epidemic_victim

			host = {
				character_event = { id = RIP.12014 } # Ask to approve treatment
			}
		}
		else = {
			set_character_flag = being_treated

			if = {
				limit = { has_any_symptom = yes }

				character_event = {
					id = RIP.11045 # Symptom treatment
					days = 1
					random = 2
				}
			}
			else_if = {
				limit = { character_disease_trigger = yes }

				character_event = {
					id = RIP.11035 # Disease treatment
					days = 2
					random = 4
				}
			}
			else_if = {
				limit = {
					trait = leper
					has_character_flag = new_leper_character
				}

				character_event = {
					id = RIP.11062 # Inform of leprosy
					days = 2
					random = 4
				}
			}
		}
	}
}

character_event = {
	id = RIP.11035
	desc = EVTDESC_RIP_11035
	picture = GFX_evt_court_physician
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		character_disease_trigger = yes
	}

	immediate = {
		remove_character_modifier = symptom_treatment_1
		remove_character_modifier = symptom_treatment_2
		remove_character_modifier = symptom_treatment_3
		remove_character_modifier = symptom_treatment_4
	}

	# Experimental treatment from great doctor
	option = {
		name = EVTOPTA_RIP_11035

		trigger = {
			is_adult = yes

			event_target:court_physician = {
				OR = {
					learning >= 18
					physician_good_trigger = yes
				}
			}

			NOR = {
				trait = craven
				trait = brave
			}
		}

		custom_tooltip = {
			text = EVTOPTA_RIP_11035_TOOLTIP # Explain experimental treatment

			random_list = {
				# Good experimental treatment
				40 = {
					mult_modifier = {
						factor = 1.2
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { trait = physician }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 0.8
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 0.6
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_good_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 75
						}
					}

					random_list = {
						# Regular treatment
						80 = { set_character_flag = good_treatment_outcome }

						# Drastic treatment
						20 = {
							mult_modifier = {
								factor = 4

								event_target:court_physician = {
									OR = {
										learning < 15
										learning >= 25
										trait = wroth
										trait = arbitrary
										trait = brave
										trait = ambitious
										physician_good_trigger = yes
									}
								}
							}

							set_character_flag = amazing_treatment_outcome
						}
					}
				}

				# Bad experimental treatment
				60 = {
					mult_modifier = {
						factor = 0.8
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 1.2
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.4
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -75
						}
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { physician_good_trigger = yes }
					}

					random_list = {
						# Regular treatment
						80 = { set_character_flag = bad_treatment_outcome }

						# Drastic treatment
						20 = {
							mult_modifier = {
								factor = 4

								event_target:court_physician = {
									OR = {
										learning < 15
										learning >= 25
										trait = wroth
										trait = arbitrary
										trait = brave
										trait = ambitious
										physician_good_trigger = yes
									}
								}
							}

							set_character_flag = terrible_treatment_outcome
						}
					}
				}
			}

			character_event = {
				id = RIP.11040 # Experimental treatment outcome
				days = 3
			}
		}

		ai_chance = {
			factor = 15

			trigger = {
				trigger_if = {
					limit = { trait = food_poisoning }
					health < 1.5
				}
				trigger_else = {
					health < 2.5
				}
			}

			mult_modifier = {
				factor = 10

				is_unimportant_trigger = yes

				event_target:court_physician = {
					OR = {
						physician_bad_trigger = yes
						learning < 10
					}
				}
			}

			mult_modifier = {
				factor = 1.5
				trait = wroth
			}

			mult_modifier = {
				factor = 1.5
				trait = arbitrary
			}

			mult_modifier = {
				factor = 0.5
				trait = shy
			}

			mult_modifier = {
				factor = 0.25
				trait = cynical
			}

			mult_modifier = {
				factor = 0.25
				trait = mystic
			}

			mult_modifier = {
				factor = 0.5
				trait = humble
			}
		}
	}

	# Experimental treatment when BRAVE
	option = {
		name = EVTOPTF_RIP_11035
		tooltip_info = brave

		trigger = {
			trait = brave
			is_adult = yes
		}

		custom_tooltip = {
			text = EVTOPTF_RIP_11035_TOOLTIP # Explain experimental treatment when BRAVE

			random_list = {
				# Good "normal" experimental treatment
				40 = {
					mult_modifier = {
						factor = 1.2
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { trait = physician }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 0.8
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 0.6
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_good_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 75
						}
					}

					random_list = {
						# Regular treatment
						80 = { set_character_flag = good_treatment_outcome }

						# Drastic treatment
						20 = {
							mult_modifier = {
								factor = 4

								event_target:court_physician = {
									OR = {
										learning < 15
										learning >= 25
										trait = wroth
										trait = arbitrary
										trait = brave
										trait = ambitious
										physician_good_trigger = yes
									}
								}
							}

							set_character_flag = amazing_treatment_outcome
						}
					}
				}

				# Bad "normal" experimental treatment
				60 = {
					mult_modifier = {
						factor = 0.8
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 1.2
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.4
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -75
						}
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { physician_good_trigger = yes }
					}

					random_list = {
						# Regular treatment
						80 = { set_character_flag = bad_treatment_outcome }

						# Drastic treatment
						20 = {
							mult_modifier = {
								factor = 4

								event_target:court_physician = {
									OR = {
										learning < 15
										trait = wroth
										trait = arbitrary
										trait = brave
										trait = ambitious
										learning >= 25
										physician_good_trigger = yes
									}
								}
							}

							set_character_flag = terrible_treatment_outcome
						}
					}
				}
			}

			character_event = {
				id = RIP.11040 # Experimental treatment outcome
				days = 3
			}
		}

		ai_chance = {
			factor = 50

			trigger = {
				trigger_if = {
					limit = { trait = food_poisoning }
					health < 1.5
				}
				trigger_else = {
					health < 2.5
				}
			}

			mult_modifier = {
				factor = 10

				is_unimportant_trigger = yes

				event_target:court_physician = {
					OR = {
						physician_bad_trigger = yes
						learning < 10
					}
				}
			}

			mult_modifier = {
				factor = 1.5
				trait = wroth
			}

			mult_modifier = {
				factor = 2
				trait = arbitrary
			}

			mult_modifier = {
				factor = 0.5
				trait = shy
			}

			mult_modifier = {
				factor = 0.25
				trait = cynical
			}

			mult_modifier = {
				factor = 0.25
				trait = mystic
			}

			mult_modifier = {
				factor = 0.5
				trait = humble
			}
		}
	}

	# Mystic treatment
	option = {
		name = EVTOPTE_RIP_11035

		trigger = {
			event_target:court_physician = { trait = mystic }
			is_adult = yes

			NOT = {
				has_game_rule = {
					name = supernatural_events
					value = off
				}
			}
		}

		custom_tooltip = {
			text = EVTOPTE_RIP_11035_TOOLTIP # Explain mystic treatment

			random_list = {
				40 = {
					mult_modifier = {
						factor = 1.2
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { trait = physician }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 0.8
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_good_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 75
						}
					}

					random_list = {
						60 = { set_character_flag = MYSTIC_AMAZING_OUTCOME }
						40 = { set_character_flag = MYSTIC_DECENT_OUTCOME }
					}
				}

				60 = {
					mult_modifier = {
						factor = 0.8
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 1.2
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -75
						}
					}

					random_list = {
						50 = { set_character_flag = MYSTIC_POOR_OUTCOME }
						50 = { set_character_flag = MYSTIC_TERRIBLE_OUTCOME }
					}
				}
			}

			character_event = {
				id = RIP.11047 # Mystic treatment outcome
				days = 3
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 3
				trait = mystic
			}

			mult_modifier = {
				factor = 2
				trait = trusting
			}

			mult_modifier = {
				factor = 2
				is_smart_trigger = yes
			}

			mult_modifier = {
				factor = 3.0

				trait = zealous
				trait = mystic
			}

			mult_modifier = {
				factor = 0.25

				trait = zealous
				NOT = { trait = mystic }
			}

			mult_modifier = {
				factor = 0.5

				trait = humble
				NOT = { trait = mystic }
			}
		}
	}

	# Regular treatment
	option = {
		name = EVTOPTB_RIP_11035

		custom_tooltip = {
			text = EVTOPTB_RIP_11035_TOOLTIP # Explain regular treatment

			random_list = {
				60 = {
					mult_modifier = {
						factor = 1.2
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { trait = physician }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 10 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 0.8
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_good_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 75
						}
					}

					set_character_flag = good_treatment_outcome
				}

				40 = {
					mult_modifier = {
						factor = 0.8
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 10 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 1.2
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -75
						}
					}

					set_character_flag = bad_treatment_outcome
				}
			}

			character_event = {
				id = RIP.11041 # Regular treatment outcome
				days = 3
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 2
				trait = temperate
			}

			mult_modifier = {
				factor = 2.0
				trait = cynical
			}

			mult_modifier = {
				factor = 0.5
				trait = zealous
			}
		}
	}

	# Very cautious treatment
	option = {
		name = EVTOPTC_RIP_11035

		trigger = {
			trigger_if = {
				limit = { is_adult = yes }

				OR = {
					trait = craven
					trait = paranoid
				}
			}

			NOT = { trait = brave }
		}

		custom_tooltip = {
			text = EVTOPTC_RIP_11035_TOOLTIP # Explain cautious treatment

			random_list = {
				80 = {
					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { trait = physician }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 10 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_good_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value >= 75
						}
					}

					set_character_flag = good_treatment_outcome
				}

				20 = {
					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 10 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < 0
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -25
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -50
						}
					}

					mult_modifier = {
						factor = 1.2

						reverse_opinion = {
							who = event_target:court_physician
							value < -75
						}
					}

					set_character_flag = bad_treatment_outcome
				}
			}

			character_event = {
				id = RIP.11042 # Cautious treatment outcome
				days = 3
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 5
				trait = paranoid
			}

			mult_modifier = {
				factor = 3
				trait = craven
			}

			mult_modifier = {
				factor = 2.0
				trait = humble
			}

			mult_modifier = {
				factor = 0.5
				trait = trusting
			}
		}
	}

	# Do nothing
	option = {
		name = EVTOPTD_RIP_11035

		custom_tooltip = {
			text = EVTOPTD_RIP_11035_TOOLTIP # Explain you'd rather be left alone

			if = {
				limit = { trait = brave }
				remove_trait = brave
			}
			else_if = {
				limit = { trait = craven }
				prestige = -20
			}
			else_if = {
				limit = {
					NOT = { trait = berserker }
				}

				add_trait = craven
			}
		}

		ai_chance = { factor = 0 }
	}
}

# Experimental treatment outcome
character_event = {
	id = RIP.11040
	picture = GFX_evt_doctor_crazy_treatment
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_11040_1
		trigger = { has_character_flag = EVTDESC_RIP_11040_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_2
		trigger = { has_character_flag = EVTDESC_RIP_11040_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_3
		trigger = { has_character_flag = EVTDESC_RIP_11040_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_5
		trigger = { has_character_flag = EVTDESC_RIP_11040_5_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_6
		trigger = { has_character_flag = EVTDESC_RIP_11040_6_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_8
		trigger = { has_character_flag = EVTDESC_RIP_11040_8_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_9
		trigger = { has_character_flag = EVTDESC_RIP_11040_9_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_10
		trigger = { has_character_flag = EVTDESC_RIP_11040_10_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_11
		trigger = { has_character_flag = EVTDESC_RIP_11040_11_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_12
		trigger = { has_character_flag = EVTDESC_RIP_11040_12_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_13
		trigger = { has_character_flag = EVTDESC_RIP_11040_13_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_14
		trigger = { has_character_flag = EVTDESC_RIP_11040_14_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11040_15
		trigger = { has_character_flag = EVTDESC_RIP_11040_15_FLAG }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					has_character_flag = bad_treatment_outcome
					has_character_flag = good_treatment_outcome
				}
			}

			random_list = {
				10 = { set_character_flag = EVTDESC_RIP_11040_1_FLAG }
				10 = { set_character_flag = EVTDESC_RIP_11040_2_FLAG }
				10 = { set_character_flag = EVTDESC_RIP_11040_3_FLAG }

				10 = {
					trigger = {
						NOT = { trait = one_legged }
					}

					set_character_flag = EVTDESC_RIP_11040_5_FLAG
				}

				10 = { set_character_flag = EVTDESC_RIP_11040_6_FLAG }
				10 = { set_character_flag = EVTDESC_RIP_11040_8_FLAG }
				10 = { set_character_flag = EVTDESC_RIP_11040_9_FLAG }
			}
		}
		else_if = {
			limit = {
				OR = {
					has_character_flag = terrible_treatment_outcome
					has_character_flag = amazing_treatment_outcome
				}
			}

			random_list = {
				10 = {
					trigger = {
						NOR = {
							trait = blinded
							trait = one_eyed
						}
					}

					set_character_flag = EVTDESC_RIP_11040_10_FLAG
				}

				10 = {
					trigger = {
						is_female = no
						NOT = { trait = eunuch }
					}

					set_character_flag = EVTDESC_RIP_11040_11_FLAG
				}

				10 = {
					trigger = {
						NOT = { trait = lunatic }
					}

					set_character_flag = EVTDESC_RIP_11040_12_FLAG
				}

				10 = {
					trigger = {
						NOT = { trait = disfigured }
					}

					set_character_flag = EVTDESC_RIP_11040_13_FLAG
				}

				10 = {
					trigger = {
						NOT = { trait = one_handed }
					}

					set_character_flag = EVTDESC_RIP_11040_14_FLAG
				}

				10 = {
					trigger = {
						NOT = { trait = one_legged }
					}

					set_character_flag = EVTDESC_RIP_11040_15_FLAG
				}
			}
		}
	}

	option = { # Good outcome
		name = EVTOPTA_RIP_11040

		trigger = { has_character_flag = good_treatment_outcome }

		if = {
			limit = {
				OR = {
					trait = cancer
					trait = gout
					trait = great_pox
				}
			}

			add_character_modifier = {
				name = successful_treatment_3
				years = 5
			}
		}
		else = {
			add_character_modifier = {
				name = successful_treatment_3
				years = 2
			}
		}

		host = {
			if = {
				limit = {
					OR = {
						is_married = ROOT
						is_child_of = ROOT
						is_parent_of = ROOT
						is_lover = ROOT
						sibling = ROOT
					}

					NOT = { character = ROOT }
				}

				character_event = { id = RIP.11061 } # Physician cured your close kin

				if = {
					limit = {
						event_target:court_physician = {
							is_ruler = no
							NOT = { trait = physician }
						}
					}

					random = {
						chance = 10
						character_event = { id = RIP.11065 } # Physician becomes renowned
					}
				}
			}
		}

		clr_character_flag = good_treatment_outcome
		clr_character_flag = being_treated
		set_character_flag = recent_treatment
		clr_character_flag = EVTDESC_RIP_11040_1_FLAG
		clr_character_flag = EVTDESC_RIP_11040_2_FLAG
		clr_character_flag = EVTDESC_RIP_11040_3_FLAG
		clr_character_flag = EVTDESC_RIP_11040_5_FLAG
		clr_character_flag = EVTDESC_RIP_11040_6_FLAG
		clr_character_flag = EVTDESC_RIP_11040_8_FLAG
		clr_character_flag = EVTDESC_RIP_11040_9_FLAG
	}

	option = { # Bad outcome
		name = EVTOPTB_RIP_11040

		trigger = { has_character_flag = bad_treatment_outcome }

		add_character_modifier = {
			name = failed_treatment_2
			years = 1
		}

		host = {
			if = {
				limit = {
					OR = {
						is_married = ROOT
						is_child_of = ROOT
						is_parent_of = ROOT
						is_lover = ROOT
						sibling = ROOT
					}

					NOT = { character = ROOT }

					event_target:court_physician = {
						is_ruler = no
						ai = yes
					}
				}

				character_event = { id = RIP.11060 } # Physician hurt your close of kin
			}
		}

		clr_character_flag = bad_treatment_outcome
		clr_character_flag = being_treated
		set_character_flag = recent_treatment
		clr_character_flag = EVTDESC_RIP_11040_1_FLAG
		clr_character_flag = EVTDESC_RIP_11040_2_FLAG
		clr_character_flag = EVTDESC_RIP_11040_3_FLAG
		clr_character_flag = EVTDESC_RIP_11040_5_FLAG
		clr_character_flag = EVTDESC_RIP_11040_6_FLAG
		clr_character_flag = EVTDESC_RIP_11040_8_FLAG
		clr_character_flag = EVTDESC_RIP_11040_9_FLAG
	}

	option = { # Amazing outcome
		name = EVTOPTC_RIP_11040

		trigger = { has_character_flag = amazing_treatment_outcome }

		custom_tooltip = {
			text = CURED_RIP_TOOLTIP

			if = {
				limit = { trait = great_pox }
				set_character_flag = immune_syphilis
			}

			if = {
				limit = { trait = consumption }
				set_character_flag = immune_consumption
			}

			if = {
				limit = { trait = slow_fever }
				set_character_flag = immune_slow_fever
			}

			if = {
				limit = { trait = camp_fever }
				set_character_flag = immune_camp_fever
			}

			if = {
				limit = { trait = bubonic_plague }

				set_character_flag = immune_bubonic_plague

				if = {
					limit = {
						ai = no
						is_ironman = yes
					}

					set_character_flag = achievement_i_got_better
				}
			}

			if = {
				limit = { trait = measles }
				set_character_flag = immune_measles
			}

			if = {
				limit = { trait = smallpox }
				set_character_flag = immune_smallpox
			}

			if = {
				limit = { trait = aztec_disease }
				set_character_flag = immune_aztec_disease
			}

			cure_illness = yes
			remove_treatment_modifiers_effect = yes
			clear_disease_level_effect = yes
			remove_disease_flags_effect = yes
			set_character_flag = seen_the_light_of_modern_medicine
		}

		trigger_switch = {
			on_trigger = has_character_flag

			EVTDESC_RIP_11040_10_FLAG = {
				add_trait = one_eyed
				add_trait = severely_injured
				resolve_severely_injured_effect = yes
			}

			EVTDESC_RIP_11040_11_FLAG = {
				add_trait = eunuch
			}

			EVTDESC_RIP_11040_12_FLAG = {
				add_trait = lunatic
			}

			EVTDESC_RIP_11040_13_FLAG = {
				add_trait = disfigured
				add_trait = severely_injured
				resolve_severely_injured_effect = yes
			}

			EVTDESC_RIP_11040_14_FLAG = {
				add_trait = one_handed
				add_trait = severely_injured
				resolve_severely_injured_effect = yes
			}

			EVTDESC_RIP_11040_15_FLAG = {
				add_trait = one_legged
				add_trait = severely_injured
				resolve_severely_injured_effect = yes
			}
		}

		host = {
			if = {
				limit = {
					OR = {
						is_married = ROOT
						is_child_of = ROOT
						is_parent_of = ROOT
						is_lover = ROOT
						sibling = ROOT
					}

					NOT = { character = ROOT }
				}

				character_event = { id = RIP.11061 } # Physician cured your close kin

				if = {
					limit = {
						event_target:court_physician = {
							NOT = { trait = physician }
						}
					}

					random = {
						chance = 10
						character_event = { id = RIP.11065 } # Physician becomes renowned
					}
				}
			}
		}

		clr_character_flag = amazing_treatment_outcome
		clr_character_flag = being_treated
		set_character_flag = recent_treatment
		clr_character_flag = EVTDESC_RIP_11040_10_FLAG
		clr_character_flag = EVTDESC_RIP_11040_11_FLAG
		clr_character_flag = EVTDESC_RIP_11040_12_FLAG
		clr_character_flag = EVTDESC_RIP_11040_13_FLAG
		clr_character_flag = EVTDESC_RIP_11040_14_FLAG
		clr_character_flag = EVTDESC_RIP_11040_15_FLAG
	}

	option = { # Terrible outcome
		name = EVTOPTD_RIP_11040

		trigger = { has_character_flag = terrible_treatment_outcome }

		trigger_switch = {
			on_trigger = has_character_flag

			EVTDESC_RIP_11040_10_FLAG = {
				add_trait = one_eyed
				add_trait = severely_injured
				resolve_severely_injured_effect = yes
			}

			EVTDESC_RIP_11040_11_FLAG = {
				add_trait = eunuch
			}

			EVTDESC_RIP_11040_12_FLAG = {
				add_trait = lunatic
			}

			EVTDESC_RIP_11040_13_FLAG = {
				add_trait = disfigured
				add_trait = severely_injured
			}

			EVTDESC_RIP_11040_14_FLAG = {
				add_trait = one_handed
				add_trait = severely_injured
				resolve_severely_injured_effect = yes
			}

			EVTDESC_RIP_11040_15_FLAG = {
				add_trait = one_legged
				add_trait = severely_injured
				resolve_severely_injured_effect = yes
			}
		}

		host = {
			if = {
				limit = {
					OR = {
						is_married = ROOT
						is_child_of = ROOT
						is_parent_of = ROOT
						is_lover = ROOT
						sibling = ROOT
					}

					NOT = { character = ROOT }

					event_target:court_physician = {
						ai = yes
					}
				}

				character_event = { id = RIP.11060 } # Physician hurt your close of kin
			}
		}

		clr_character_flag = terrible_treatment_outcome
		clr_character_flag = being_treated
		set_character_flag = recent_treatment
		clr_character_flag = EVTDESC_RIP_11040_10_FLAG
		clr_character_flag = EVTDESC_RIP_11040_11_FLAG
		clr_character_flag = EVTDESC_RIP_11040_12_FLAG
		clr_character_flag = EVTDESC_RIP_11040_13_FLAG
		clr_character_flag = EVTDESC_RIP_11040_14_FLAG
		clr_character_flag = EVTDESC_RIP_11040_15_FLAG

		opinion = {
			name = opinion_traitor
			who = event_target:court_physician
		}
	}
}

# Normal treatment outcome
character_event = {
	id = RIP.11041
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_11041_1
		trigger = { has_character_flag = EVTDESC_RIP_11041_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_2
		trigger = { has_character_flag = EVTDESC_RIP_11041_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_3
		trigger = { has_character_flag = EVTDESC_RIP_11041_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_4
		trigger = { has_character_flag = EVTDESC_RIP_11041_4_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_5
		trigger = { has_character_flag = EVTDESC_RIP_11041_5_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_6
		trigger = { has_character_flag = EVTDESC_RIP_11041_6_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_7
		trigger = { has_character_flag = EVTDESC_RIP_11041_7_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_8
		trigger = { has_character_flag = EVTDESC_RIP_11041_8_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_10
		trigger = { has_character_flag = EVTDESC_RIP_11041_10_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_11
		trigger = { has_character_flag = EVTDESC_RIP_11041_11_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11041_13
		trigger = { has_character_flag = EVTDESC_RIP_11041_13_FLAG }
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			10 = {
				trigger = { is_adult = yes }
				set_character_flag = EVTDESC_RIP_11041_1_FLAG
			}

			10 = {
				trigger = { is_adult = yes }
				set_character_flag = EVTDESC_RIP_11041_2_FLAG
			}

			10 = { set_character_flag = EVTDESC_RIP_11041_3_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11041_4_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11041_5_FLAG }

			10 = {
				trigger = { is_adult = yes }
				set_character_flag = EVTDESC_RIP_11041_6_FLAG
			}

			10 = { set_character_flag = EVTDESC_RIP_11041_7_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11041_8_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11041_10_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11041_11_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11041_13_FLAG }
		}
	}

	option = { # Good outcome
		name = EVTOPTA_RIP_11041

		trigger = { has_character_flag = good_treatment_outcome }

		if = {
			limit = {
				OR = {
					trait = cancer
					trait = gout
					trait = great_pox
				}
			}

			add_character_modifier = {
				name = successful_treatment_2
				years = 5
			}
		}
		else = {
			add_character_modifier = {
				name = successful_treatment_2
				years = 2
			}
		}

		host = {
			if = {
				limit = {
					OR = {
						is_married = ROOT
						is_child_of = ROOT
						is_parent_of = ROOT
						is_lover = ROOT
						sibling = ROOT
					}

					NOT = { character = ROOT }
				}

				character_event = { id = RIP.11061 } # Physician cured your close kin

				if = {
					limit = {
						event_target:court_physician = {
							NOT = { trait = physician }
						}
					}

					random = {
						chance = 10
						character_event = { id = RIP.11065 } # Physician becomes renowned
					}
				}
			}
		}

		clr_character_flag = good_treatment_outcome
		clr_character_flag = being_treated
		set_character_flag = recent_treatment
		clr_character_flag = EVTDESC_RIP_11041_1_FLAG
		clr_character_flag = EVTDESC_RIP_11041_2_FLAG
		clr_character_flag = EVTDESC_RIP_11041_3_FLAG
		clr_character_flag = EVTDESC_RIP_11041_4_FLAG
		clr_character_flag = EVTDESC_RIP_11041_5_FLAG
		clr_character_flag = EVTDESC_RIP_11041_6_FLAG
		clr_character_flag = EVTDESC_RIP_11041_7_FLAG
		clr_character_flag = EVTDESC_RIP_11041_8_FLAG
		clr_character_flag = EVTDESC_RIP_11041_10_FLAG
		clr_character_flag = EVTDESC_RIP_11041_11_FLAG
		clr_character_flag = EVTDESC_RIP_11041_13_FLAG
	}

	option = { # Bad outcome
		name = EVTOPTB_RIP_11041

		trigger = { has_character_flag = bad_treatment_outcome }

		add_character_modifier = {
			name = failed_treatment_1
			years = 1
		}

		host = {
			if = {
				limit = {
					OR = {
						is_married = ROOT
						is_child_of = ROOT
						is_parent_of = ROOT
						is_lover = ROOT
						sibling = ROOT
					}

					NOT = { character = ROOT }

					event_target:court_physician = {
						ai = yes
					}
				}

				character_event = { id = RIP.11060 } # Physician hurt your close of kin
			}
		}

		clr_character_flag = bad_treatment_outcome
		clr_character_flag = being_treated
		set_character_flag = recent_treatment
		clr_character_flag = EVTDESC_RIP_11041_1_FLAG
		clr_character_flag = EVTDESC_RIP_11041_2_FLAG
		clr_character_flag = EVTDESC_RIP_11041_3_FLAG
		clr_character_flag = EVTDESC_RIP_11041_4_FLAG
		clr_character_flag = EVTDESC_RIP_11041_5_FLAG
		clr_character_flag = EVTDESC_RIP_11041_6_FLAG
		clr_character_flag = EVTDESC_RIP_11041_7_FLAG
		clr_character_flag = EVTDESC_RIP_11041_8_FLAG
		clr_character_flag = EVTDESC_RIP_11041_10_FLAG
		clr_character_flag = EVTDESC_RIP_11041_11_FLAG
		clr_character_flag = EVTDESC_RIP_11041_13_FLAG
	}
}

# Cautious treatment outcome
character_event = {
	id = RIP.11042
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_11042_1
		trigger = { has_character_flag = EVTDESC_RIP_11042_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_2
		trigger = { has_character_flag = EVTDESC_RIP_11042_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_3
		trigger = { has_character_flag = EVTDESC_RIP_11042_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_4
		trigger = { has_character_flag = EVTDESC_RIP_11042_4_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_5
		trigger = { has_character_flag = EVTDESC_RIP_11042_5_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_6
		trigger = { has_character_flag = EVTDESC_RIP_11042_6_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_7
		trigger = { has_character_flag = EVTDESC_RIP_11042_7_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_8
		trigger = { has_character_flag = EVTDESC_RIP_11042_8_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_9
		trigger = { has_character_flag = EVTDESC_RIP_11042_9_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11042_10
		trigger = { has_character_flag = EVTDESC_RIP_11042_10_FLAG }
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			10 = { set_character_flag = EVTDESC_RIP_11042_1_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_2_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_3_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_4_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_5_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_6_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_7_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_8_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_9_FLAG }
			10 = { set_character_flag = EVTDESC_RIP_11042_10_FLAG }
		}
	}

	option = { # Ok outcome
		name = EVTOPTA_RIP_11042

		trigger = { has_character_flag = good_treatment_outcome }

		if = {
			limit = {
				OR = {
					trait = cancer
					trait = gout
					trait = great_pox
				}
			}

			add_character_modifier = {
				name = successful_treatment_1
				years = 5
			}
		}
		else = {
			add_character_modifier = {
				name = successful_treatment_1
				years = 2
			}
		}

		clr_character_flag = good_treatment_outcome
		clr_character_flag = being_treated
		set_character_flag = recent_treatment
		clr_character_flag = EVTDESC_RIP_11042_1_FLAG
		clr_character_flag = EVTDESC_RIP_11042_2_FLAG
		clr_character_flag = EVTDESC_RIP_11042_3_FLAG
		clr_character_flag = EVTDESC_RIP_11042_4_FLAG
		clr_character_flag = EVTDESC_RIP_11042_5_FLAG
		clr_character_flag = EVTDESC_RIP_11042_6_FLAG
		clr_character_flag = EVTDESC_RIP_11042_7_FLAG
		clr_character_flag = EVTDESC_RIP_11042_8_FLAG
		clr_character_flag = EVTDESC_RIP_11042_9_FLAG
		clr_character_flag = EVTDESC_RIP_11042_10_FLAG
	}

	option = { # Nothing happens
		name = EVTOPTB_RIP_11042

		trigger = { has_character_flag = bad_treatment_outcome }

		clr_character_flag = bad_treatment_outcome
		clr_character_flag = being_treated
		clr_character_flag = EVTDESC_RIP_11042_1_FLAG
		clr_character_flag = EVTDESC_RIP_11042_2_FLAG
		clr_character_flag = EVTDESC_RIP_11042_3_FLAG
		clr_character_flag = EVTDESC_RIP_11042_4_FLAG
		clr_character_flag = EVTDESC_RIP_11042_5_FLAG
		clr_character_flag = EVTDESC_RIP_11042_6_FLAG
		clr_character_flag = EVTDESC_RIP_11042_7_FLAG
		clr_character_flag = EVTDESC_RIP_11042_8_FLAG
		clr_character_flag = EVTDESC_RIP_11042_9_FLAG
		clr_character_flag = EVTDESC_RIP_11042_10_FLAG
	}
}

# Mystic treatment outcome
character_event = {
	id = RIP.11047
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_11047_1
		trigger = { has_character_flag = EVTDESC_RIP_11047_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_2
		trigger = { has_character_flag = EVTDESC_RIP_11047_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_3
		trigger = { has_character_flag = EVTDESC_RIP_11047_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_4
		trigger = { has_character_flag = EVTDESC_RIP_11047_4_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_5
		trigger = { has_character_flag = EVTDESC_RIP_11047_5_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_6
		trigger = { has_character_flag = EVTDESC_RIP_11047_6_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_7
		trigger = { has_character_flag = EVTDESC_RIP_11047_7_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_8
		trigger = { has_character_flag = EVTDESC_RIP_11047_8_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_9
		trigger = { has_character_flag = EVTDESC_RIP_11047_9_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_10
		trigger = { has_character_flag = EVTDESC_RIP_11047_10_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_11
		trigger = { has_character_flag = EVTDESC_RIP_11047_11_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11047_12
		trigger = { has_character_flag = EVTDESC_RIP_11047_12_FLAG }
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			10 = { # Mirrors and candles
				trigger = {
					NOT = { has_character_flag = MYSTIC_TERRIBLE_OUTCOME }
				}
				set_character_flag = EVTDESC_RIP_11047_1_FLAG
			}

			10 = { # Sacrificed animals, rubbed in ashes
				trigger = {
					NAND = {
						trait = paranoid
						trait = possessed
					}
				}

				set_character_flag = EVTDESC_RIP_11047_2_FLAG
			}

			10 = { # Conjuring, burnt fingers
				trigger = {
					NOT = { trait = one_handed }
				}

				set_character_flag = EVTDESC_RIP_11047_3_FLAG
			}

			10 = { # Improv greatest poem
				trigger = {
					NOT = { trait = poet }
				}

				set_character_flag = EVTDESC_RIP_11047_4_FLAG
			}

			10 = { # Bloodbath
				trigger = {
					NOT = { trait = cruel }
				}

				set_character_flag = EVTDESC_RIP_11047_5_FLAG
			}

			5 = { # "special brew"
				trigger = {
					NOT = { trait = drunkard }
				}

				set_character_flag = EVTDESC_RIP_11047_6_FLAG
			}

			10 = { # walk on fire
				trigger = {
					NOT = { trait = brave }
				}

				set_character_flag = EVTDESC_RIP_11047_7_FLAG
			}

			10 = { # physician tries to drown you
				trigger = {
					event_target:court_physician = {
						OR = {
							trait = zealous
							trait = cruel
						}
					}
				}

				set_character_flag = EVTDESC_RIP_11047_8_FLAG
			}

			5 = { # Physician sacrifices your child
				trigger = {
					event_target:court_physician = {
						OR = {
							trait = zealous
							trait = cruel
							trait = arbitrary
							trait = impaler
						}
					}

					any_courtier = {
						is_child_of = ROOT
						is_ill = no
						is_abroad = no
						NOT = { trait = inbred }
					}
				}

				set_character_flag = EVTDESC_RIP_11047_9_FLAG
			}

			10 = { # Am I the beast?
				trigger = {
					NOR = {
						trait = possessed
						trait = lunatic
					}
				}

				set_character_flag = EVTDESC_RIP_11047_10_FLAG
			}

			10 = { set_character_flag = EVTDESC_RIP_11047_11_FLAG } # The rat will carry your burdens
			10 = { set_character_flag = EVTDESC_RIP_11047_12_FLAG } # Physician suicide
		}
	}

	option = {
		name = {
			text = EVTOPTB_RIP_11047
			trigger = { has_character_flag = EVTDESC_RIP_11047_8_FLAG }
		}
		name = {
			text = EVTOPTC_RIP_11047
			trigger = { has_character_flag = EVTDESC_RIP_11047_9_FLAG }
		}
		name = {
			text = EVTOPTD_RIP_11047
			trigger = { has_character_flag = EVTDESC_RIP_11047_12_FLAG }
		}
		name = {
			text = EVTOPTE_RIP_11047
			trigger = { has_character_flag = EVTDESC_RIP_11047_3_FLAG }
		}
		name = {
			text = EVTOPTA_RIP_11047
			trigger = {
				NOR = {
					has_character_flag = EVTDESC_RIP_11047_8_FLAG
					has_character_flag = EVTDESC_RIP_11047_9_FLAG
					has_character_flag = EVTDESC_RIP_11047_12_FLAG
					has_character_flag = EVTDESC_RIP_11047_3_FLAG
				}
			}
		}

		set_character_flag = recent_treatment

		if = {
			limit = { has_character_flag = MYSTIC_AMAZING_OUTCOME }

			# Chance to remove the disease!
			custom_tooltip = {
				text = CURED_RIP_TOOLTIP

				if = { limit = { trait = flu }                     remove_trait = flu }
				if = { limit = { trait = dysentery }               remove_trait = dysentery }
				if = { limit = { trait = gout }                    remove_trait = gout }
				if = { limit = { trait = food_poisoning }          remove_trait = food_poisoning }
				if = { limit = { trait = rabies }                  remove_trait = rabies }
				if = { limit = { trait = cancer }                  remove_trait = cancer }
				if = { limit = { trait = pneumonic }               remove_trait = pneumonic }
				if = { limit = { trait = great_pox }               remove_trait = great_pox      set_character_flag = immune_syphilis }
				if = { limit = { trait = consumption }             remove_trait = consumption    set_character_flag = immune_consumption }
				if = { limit = { trait = slow_fever }              remove_trait = slow_fever     set_character_flag = immune_slow_fever }
				if = { limit = { trait = camp_fever }              remove_trait = camp_fever     set_character_flag = immune_camp_fever }
				if = { limit = { trait = bubonic_plague ai = no }  remove_trait = bubonic_plague set_character_flag = immune_bubonic_plague set_character_flag = achievement_i_got_better }
				if = { limit = { trait = bubonic_plague ai = yes } remove_trait = bubonic_plague set_character_flag = immune_bubonic_plague }
				if = { limit = { trait = measles }                 remove_trait = measles        set_character_flag = immune_measles }
				if = { limit = { trait = smallpox }                remove_trait = smallpox       set_character_flag = immune_smallpox }
				if = { limit = { trait = aztec_disease }           remove_trait = aztec_disease  set_character_flag = immune_aztec_disease }
				remove_treatment_modifiers_effect = yes
				clear_disease_level_effect = yes
				remove_disease_flags_effect = yes
				set_character_flag = seen_the_light_of_modern_medicine
			}
		}

		trigger_switch = {
			on_trigger = has_character_flag

			MYSTIC_DECENT_OUTCOME = {
				if = {
					limit = {
						OR = {
							trait = cancer
							trait = gout
							trait = great_pox
						}
					}

					add_character_modifier = {
						name = mystic_treatment_decent
						years = 5
					}
				}
				else = {
					add_character_modifier = {
						name = mystic_treatment_decent
						years = 2
					}
				}
			}

			MYSTIC_POOR_OUTCOME = {
				if = {
					limit = {
						OR = {
							trait = cancer
							trait = gout
							trait = great_pox
						}
					}

					add_character_modifier = {
						name = mystic_treatment_poor
						years = 5
					}
				}
				else = {
					add_character_modifier = {
						name = mystic_treatment_poor
						years = 1
					}
				}
			}

			MYSTIC_TERRIBLE_OUTCOME = {
				if = {
					limit = {
						OR = {
							trait = cancer
							trait = gout
							trait = great_pox
						}
					}

					add_character_modifier = {
						name = mystic_treatment_terrible
						years = 5
					}
				}
				else = {
					add_character_modifier = {
						name = mystic_treatment_terrible
						years = 1
					}
				}

				custom_tooltip = {
					text = RIP_11047_TERRIBLE_TOOLTIP

					random = {
						chance = 10
						add_trait_possessed_effect = yes
					}

					random = {
						chance = 10
						add_trait_lunatic_effect = yes
					}

					random = {
						chance = 10
						add_trait_depressed_effect = yes
					}

					random = {
						chance = 25
						add_trait_stressed_effect = yes
					}
				}
			}
		}

		# Specific effects from the chosen event desc
		trigger_switch = {
			on_trigger = has_character_flag

			EVTDESC_RIP_11047_1_FLAG = {
				trigger_switch = {
					on_trigger = trait

					paranoid = { remove_trait = paranoid add_trait = trusting }
					trusting = { remove_trait = trusting add_trait = paranoid }
				}

				trigger_switch = {
					on_trigger = trait

					ambitious = { remove_trait = ambitious add_trait = content }
					content   = { remove_trait = content   add_trait = ambitious }
				}

				trigger_switch = {
					on_trigger = trait

					humble = { remove_trait = humble add_trait = proud }
					proud  = { remove_trait = proud  add_trait = humble }
				}

				trigger_switch = {
					on_trigger = trait

					shy        = { remove_trait = shy        add_trait = gregarious }
					gregarious = { remove_trait = gregarious add_trait = shy }
				}

				trigger_switch = {
					on_trigger = trait

					temperate  = { remove_trait = temperate  add_trait = gluttonous }
					gluttonous = { remove_trait = gluttonous add_trait = temperate }
				}

				trigger_switch = {
					on_trigger = trait

					charitable = { remove_trait = charitable add_trait = greedy }
					greedy     = { remove_trait = greedy     add_trait = charitable }
				}

				trigger_switch = {
					on_trigger = trait

					diligent = { remove_trait = diligent add_trait = slothful }
					slothful = { remove_trait = slothful add_trait = diligent }
				}

				trigger_switch = {
					on_trigger = trait

					envious = { add_trait_fully_silently_kind_effect = yes }
					kind    = { remove_trait = kind add_trait = envious }
				}
			}

			EVTDESC_RIP_11047_2_FLAG = {
				add_trait_fully_silently_paranoid_effect = yes

				random = {
					chance = 25
					add_trait_possessed_effect = yes
				}
			}

			EVTDESC_RIP_11047_3_FLAG = {
				if = {
					limit = {
						NOT = { trait = one_handed }
					}

					add_trait = one_handed
				}

				add_trait_partially_silently_wroth_effect = yes
			}

			EVTDESC_RIP_11047_4_FLAG = {
				add_trait = poet
			}

			EVTDESC_RIP_11047_5_FLAG = {
				add_trait_fully_silently_cruel_effect = yes
			}

			EVTDESC_RIP_11047_6_FLAG = {
				add_trait = drunkard
			}

			EVTDESC_RIP_11047_7_FLAG = {
				add_trait_fully_silently_brave_effect = yes
				add_trait_fully_silently_zealous_effect = yes
			}

			EVTDESC_RIP_11047_8_FLAG = {
				# DROWNING
				opinion = {
					name = opinion_traitor
					who = event_target:court_physician
				}

				add_trait_fully_silently_paranoid_effect = yes
			}

			EVTDESC_RIP_11047_9_FLAG = {
				opinion = {
					name = opinion_traitor
					who = event_target:court_physician
				}

				random_courtier = {
					show_scope_change = no

					limit = {
						is_child_of = ROOT
						is_ill = no
						is_abroad = no
						NOT = { trait = inbred }
					}

					death = {
						death_reason = death_murder_unknown
						killer = event_target:court_physician
					}
				}
			}

			EVTDESC_RIP_11047_10_FLAG = {
				add_trait = possessed

				random = {
					chance = 25
					add_trait_lunatic_effect = yes
				}
			}

			EVTDESC_RIP_11047_11_FLAG = {
				add_trait_partially_silently_content_effect = yes
				add_trait_partially_silently_kind_effect = yes
				add_trait_partially_silently_honest_effect = yes
				add_trait_partially_silently_patient_effect = yes
				add_trait_partially_silently_humble_effect = yes
				add_trait_partially_silently_charitable_effect = yes
				add_trait_partially_silently_temperate_effect = yes
			}

			EVTDESC_RIP_11047_12_FLAG = {
				event_target:court_physician = {
					death = { death_reason = death_suicide }
				}

				add_trait_fully_silently_humble_effect = yes

				random = {
					chance = 25
					add_trait_lunatic_effect = yes
				}
			}
		}

		clr_character_flag = MYSTIC_AMAZING_OUTCOME
		clr_character_flag = MYSTIC_DECENT_OUTCOME
		clr_character_flag = MYSTIC_POOR_OUTCOME
		clr_character_flag = MYSTIC_TERRIBLE_OUTCOME
		clr_character_flag = good_treatment_outcome
		clr_character_flag = bad_treatment_outcome
		clr_character_flag = being_treated
		clr_character_flag = EVTDESC_RIP_11047_1_FLAG
		clr_character_flag = EVTDESC_RIP_11047_2_FLAG
		clr_character_flag = EVTDESC_RIP_11047_3_FLAG
		clr_character_flag = EVTDESC_RIP_11047_4_FLAG
		clr_character_flag = EVTDESC_RIP_11047_5_FLAG
		clr_character_flag = EVTDESC_RIP_11047_6_FLAG
		clr_character_flag = EVTDESC_RIP_11047_7_FLAG
		clr_character_flag = EVTDESC_RIP_11047_8_FLAG
		clr_character_flag = EVTDESC_RIP_11047_9_FLAG
		clr_character_flag = EVTDESC_RIP_11047_10_FLAG
		clr_character_flag = EVTDESC_RIP_11047_11_FLAG
		clr_character_flag = EVTDESC_RIP_11047_12_FLAG
	}
}

# Symptom treatment
character_event = {
	id = RIP.11045
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_11045_consumption
		trigger = { has_character_flag = EVTDESC_RIP_11045_consumption_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_consumption_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_consumption_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_consumption_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_consumption_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_consumption_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_consumption_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_consumption_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_consumption_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_slow_fever
		trigger = { has_character_flag = EVTDESC_RIP_11045_slow_fever_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_slow_fever_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_slow_fever_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_slow_fever_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_slow_fever_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_slow_fever_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_slow_fever_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_slow_fever_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_slow_fever_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_camp_fever
		trigger = { has_character_flag = EVTDESC_RIP_11045_camp_fever_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_camp_fever_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_camp_fever_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_camp_fever_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_camp_fever_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_camp_fever_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_camp_fever_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_camp_fever_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_camp_fever_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_bubonic_plague
		trigger = { has_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_bubonic_plague_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_bubonic_plague_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_bubonic_plague_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_bubonic_plague_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_measles
		trigger = { has_character_flag = EVTDESC_RIP_11045_measles_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_measles_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_measles_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_measles_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_measles_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_measles_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_measles_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_measles_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_measles_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_smallpox
		trigger = { has_character_flag = EVTDESC_RIP_11045_smallpox_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_smallpox_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_smallpox_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_smallpox_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_smallpox_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_smallpox_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_smallpox_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_smallpox_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_smallpox_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_aztec_disease
		trigger = { has_character_flag = EVTDESC_RIP_11045_aztec_disease_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_aztec_disease_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_aztec_disease_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_aztec_disease_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_aztec_disease_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_flu
		trigger = { has_character_flag = EVTDESC_RIP_11045_flu_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_flu_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_flu_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_flu_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_flu_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_flu_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_flu_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_flu_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_flu_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_dysentery
		trigger = { has_character_flag = EVTDESC_RIP_11045_dysentery_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_dysentery_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_dysentery_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_dysentery_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_dysentery_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_dysentery_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_dysentery_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_dysentery_uncertain
		trigger = {	has_character_flag = EVTDESC_RIP_11045_dysentery_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_gout
		trigger = { has_character_flag = EVTDESC_RIP_11045_gout_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_gout_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_gout_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_gout_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_gout_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_gout_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_gout_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_gout_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_gout_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_food_poisoning
		trigger = { has_character_flag = EVTDESC_RIP_11045_food_poisoning_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_food_poisoning_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_food_poisoning_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_food_poisoning_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_food_poisoning_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_rabies
		trigger = { has_character_flag = EVTDESC_RIP_11045_rabies_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_rabies_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_rabies_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_rabies_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_rabies_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_rabies_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_rabies_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_rabies_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_rabies_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_cancer
		trigger = { has_character_flag = EVTDESC_RIP_11045_cancer_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_cancer_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_cancer_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_cancer_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_cancer_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_cancer_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_cancer_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_cancer_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_cancer_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_pneumonia
		trigger = { has_character_flag = EVTDESC_RIP_11045_pneumonia_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_pneumonia_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_pneumonia_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_pneumonia_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_pneumonia_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_pneumonia_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_pneumonia_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_pneumonia_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_pneumonia_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_great_pox
		trigger = { has_character_flag = EVTDESC_RIP_11045_syphilis_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_great_pox_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_syphilis_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_great_pox_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_syphilis_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_great_pox_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_syphilis_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_great_pox_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_syphilis_flag_uncertain }
	}

	desc = {
		text = EVTDESC_RIP_11045_not_serious
		trigger = { has_character_flag = EVTDESC_RIP_11045_not_serious_flag }
	}
	desc = {
		text = EVTDESC_RIP_11045_not_serious_horse
		trigger = { has_character_flag = EVTDESC_RIP_11045_not_serious_flag_horse }
	}
	desc = {
		text = EVTDESC_RIP_11045_not_serious_certain
		trigger = { has_character_flag = EVTDESC_RIP_11045_not_serious_flag_certain }
	}
	desc = {
		text = EVTDESC_RIP_11045_not_serious_sure
		trigger = { has_character_flag = EVTDESC_RIP_11045_not_serious_flag_sure }
	}
	desc = {
		text = EVTDESC_RIP_11045_not_serious_uncertain
		trigger = { has_character_flag = EVTDESC_RIP_11045_not_serious_flag_uncertain }
	}

	is_triggered_only = yes

	trigger = {
		has_any_symptom = yes
	}

	immediate = {
		random_list = {
			40 = {
				mult_modifier = {
					factor = 2
					num_of_symptoms >= 2
				}

				mult_modifier = {
					factor = 2
					num_of_symptoms >= 3
				}

				mult_modifier = {
					factor = 1.5

					event_target:court_physician = {
						OR = {
							trait = scholar
							trait = mutazilite
						}
					}
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { is_smart_trigger = yes }
				}

				mult_modifier = {
					factor = 5

					# Horse physicians are always right in regular starts
					event_target:court_physician = {
						culture = horse

						NOR = {
							has_alternate_start_parameter = {
								key = special_culture
								value = animal_kingdoms
							}

							has_alternate_start_parameter = {
								key = special_culture
								value = animal_world
							}
						}
					}
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { physician_good_trigger = yes }
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { learning >= 25 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { learning >= 20 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { learning >= 15 }
				}

				mult_modifier = {
					factor = 0.8
					event_target:court_physician = { learning < 15 }
				}

				mult_modifier = {
					factor = 0.8
					event_target:court_physician = { learning < 10 }
				}

				set_character_flag = correct_diagnosis
			}

			60 = {
				trigger = {
					# Horse physicians are always right in regular starts
					event_target:court_physician = {
						culture = horse

						NOR = {
							has_alternate_start_parameter = {
								key = special_culture
								value = animal_kingdoms
							}

							has_alternate_start_parameter = {
								key = special_culture
								value = animal_world
							}
						}
					}
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { is_dumb_trigger = yes }
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { physician_bad_trigger = yes }
				}

				mult_modifier = {
					factor = 1.2

					reverse_opinion = {
						who = event_target:court_physician
						value < 0
					}
				}

				mult_modifier = {
					factor = 1.2

					reverse_opinion = {
						who = event_target:court_physician
						value < -25
					}
				}

				mult_modifier = {
					factor = 1.2

					reverse_opinion = {
						who = event_target:court_physician
						value < -50
					}
				}

				mult_modifier = {
					factor = 1.2

					reverse_opinion = {
						who = event_target:court_physician
						value < -75
					}
				}

				mult_modifier = {
					factor = 0.8
					event_target:court_physician = { learning >= 25 }
				}

				mult_modifier = {
					factor = 0.8
					event_target:court_physician = { learning >= 20 }
				}

				mult_modifier = {
					factor = 0.8
					event_target:court_physician = { learning >= 15 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { learning < 15 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:court_physician = { learning < 10 }
				}

				set_character_flag = faulty_diagnosis
			}
		}

		# Now we check to see what disease the character has
		random_list = {
			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_consumption
					}
					trigger_else = {
						NOT = { has_character_flag = got_consumption }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_consumption_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_consumption_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_consumption_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_consumption_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_consumption_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_slow_fever
					}
					trigger_else = {
						NOT = { has_character_flag = got_slow_fever }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_slow_fever_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_slow_fever_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_slow_fever_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_slow_fever_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_slow_fever_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_camp_fever
					}
					trigger_else = {
						NOT = { has_character_flag = got_camp_fever }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_camp_fever_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_camp_fever_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_camp_fever_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_camp_fever_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_camp_fever_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_bubonic_plague
					}
					trigger_else = {
						NOT = { has_character_flag = got_bubonic_plague }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_measles
					}
					trigger_else = {
						NOT = { has_character_flag = got_measles }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_measles_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_measles_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_measles_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_measles_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_measles_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_smallpox
					}
					trigger_else = {
						NOT = { has_character_flag = got_smallpox }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_smallpox_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_smallpox_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_smallpox_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_smallpox_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_smallpox_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_aztec_disease
					}
					trigger_else = {
						OR = {
							year >= 1350
							has_global_flag = aztec_arrival
						}

						NOT = { has_character_flag = got_aztec_disease }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_aztec_disease_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_flu
					}
					trigger_else = {
						NOT = { has_character_flag = got_flu }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_flu_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_flu_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_flu_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_flu_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_flu_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_dysentery
					}
					trigger_else = {
						NOT = { has_character_flag = got_dysentery }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_dysentery_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_dysentery_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_dysentery_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_dysentery_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_dysentery_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_gout
					}
					trigger_else = {
						NOT = { has_character_flag = got_gout }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_gout_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_gout_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_gout_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_gout_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_gout_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_food_poisoning
					}
					trigger_else = {
						NOT = { has_character_flag = got_food_poisoning }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_food_poisoning_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_rabies
					}
					trigger_else = {
						NOT = { has_character_flag = got_rabies }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_rabies_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_rabies_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_rabies_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_rabies_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_rabies_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_cancer
					}
					trigger_else = {
						NOT = { has_character_flag = got_cancer }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_cancer_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_cancer_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_cancer_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_cancer_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_cancer_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_pneumonia
					}
					trigger_else = {
						NOT = { has_character_flag = got_pneumonia }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_pneumonia_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_pneumonia_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_pneumonia_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_pneumonia_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_pneumonia_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = got_syphilis
					}
					trigger_else = {
						NOT = { has_character_flag = got_syphilis }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_syphilis_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_syphilis_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_syphilis_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_syphilis_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_syphilis_flag
				}
			}

			10 = {
				trigger = {
					trigger_if = {
						limit = { has_character_flag = correct_diagnosis }
						has_character_flag = disease_not_serious
					}
					trigger_else = {
						NOT = { has_character_flag = disease_not_serious }
					}
				}

				if = { # Horse physicians are always right in regular starts
					limit = {
						event_target:court_physician = {
							culture = horse

							NOR = {
								has_alternate_start_parameter = {
									key = special_culture
									value = animal_kingdoms
								}

								has_alternate_start_parameter = {
									key = special_culture
									value = animal_world
								}
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_not_serious_flag_horse
				}
				else_if = { # Really good doctors know for sure
					limit = {
						has_character_flag = correct_diagnosis

						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 20
							}
							trigger_else = {
								learning >= 25
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_not_serious_flag_certain
				}
				else_if = { # Good doctors are pretty sure
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_good_trigger = yes }
								learning >= 15
							}
							trigger_else = {
								learning >= 20
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_not_serious_flag_sure
				}
				else_if = { # Awful doctors are uncertain
					limit = {
						event_target:court_physician = {
							trigger_if = {
								limit = { physician_bad_trigger = yes }
								learning < 15
							}
							trigger_else = {
								learning < 10
							}
						}
					}

					set_character_flag = EVTDESC_RIP_11045_not_serious_flag_uncertain
				}
				else = { # Otherwise, doctors are fairly sure
					set_character_flag = EVTDESC_RIP_11045_not_serious_flag
				}
			}
		}
	}

	option = {
		name = EVTOPTA_RIP_11045

		custom_tooltip = {
			text = EVTOPTA_RIP_11045_TOOLTIP # symptom treatment notification

			random_list = {
				50 = {
					mult_modifier = {
						factor = 1.2
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { trait = physician }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 0.8
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.5
						has_character_flag = correct_diagnosis
					}

					set_character_flag = good_treatment_outcome
				}

				50 = {
					mult_modifier = {
						factor = 0.8
						is_strong_trigger = yes
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 10 }
					}

					mult_modifier = {
						factor = 1.2
						is_weak_trigger = yes
					}

					mult_modifier = {
						factor = 1.5
						has_character_flag = faulty_diagnosis
					}

					set_character_flag = bad_treatment_outcome
				}
			}

			if = { # If good treatment, check for quality
				limit = { has_character_flag = good_treatment_outcome }

				random_list = {
					100 = {
						mult_modifier = {
							factor = 1.5
							event_target:court_physician = { learning >= 25 }
						}

						mult_modifier = {
							factor = 1.2
							event_target:court_physician = { learning >= 20 }
						}

						mult_modifier = {
							factor = 1.2
							event_target:court_physician = { learning >= 15 }
						}

						mult_modifier = {
							factor = 0.8
							event_target:court_physician = { learning < 15 }
						}

						mult_modifier = {
							factor = 0.8
							event_target:court_physician = { learning < 10 }
						}

						set_character_flag = best_symptom_treatment
					}

					100 = {
						mult_modifier = {
							factor = 1.2
							event_target:court_physician = { learning >= 25 }
						}

						mult_modifier = {
							factor = 1.2
							event_target:court_physician = { learning >= 20 }
						}

						mult_modifier = {
							factor = 1.2
							event_target:court_physician = { learning >= 15 }
						}

						mult_modifier = {
							factor = 0.8
							event_target:court_physician = { learning < 15 }
						}

						mult_modifier = {
							factor = 0.8
							event_target:court_physician = { learning < 10 }
						}

						set_character_flag = good_symptom_treatment
					}

					100 = {
						set_character_flag = ok_symptom_treatment
					}

					100 = {
						mult_modifier = {
							factor = 0.8
							event_target:court_physician = { learning >= 25 }
						}

						mult_modifier = {
							factor = 0.8
							event_target:court_physician = { learning >= 20 }
						}

						mult_modifier = {
							factor = 0.8
							event_target:court_physician = { learning >= 15 }
						}

						mult_modifier = {
							factor = 1.5
							event_target:court_physician = { learning < 15 }
						}

						mult_modifier = {
							factor = 1.5
							event_target:court_physician = { learning < 10 }
						}

						set_character_flag = poor_symptom_treatment
					}
				}
			}

			character_event = {
				id = RIP.11046
				days = 3
			}

			# Clear all flags
			clr_character_flag = faulty_diagnosis
			clr_character_flag = correct_diagnosis
			clr_character_flag = EVTDESC_RIP_11045_consumption_flag
			clr_character_flag = EVTDESC_RIP_11045_consumption_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_consumption_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_consumption_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_consumption_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_slow_fever_flag
			clr_character_flag = EVTDESC_RIP_11045_slow_fever_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_slow_fever_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_slow_fever_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_slow_fever_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_camp_fever_flag
			clr_character_flag = EVTDESC_RIP_11045_camp_fever_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_camp_fever_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_camp_fever_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_camp_fever_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag
			clr_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_bubonic_plague_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_measles_flag
			clr_character_flag = EVTDESC_RIP_11045_measles_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_measles_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_measles_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_measles_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_smallpox_flag
			clr_character_flag = EVTDESC_RIP_11045_smallpox_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_smallpox_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_smallpox_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_smallpox_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_aztec_disease_flag
			clr_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_aztec_disease_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_flu_flag
			clr_character_flag = EVTDESC_RIP_11045_flu_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_flu_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_flu_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_flu_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_dysentery_flag
			clr_character_flag = EVTDESC_RIP_11045_dysentery_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_dysentery_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_dysentery_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_dysentery_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_gout_flag
			clr_character_flag = EVTDESC_RIP_11045_gout_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_gout_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_gout_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_gout_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_food_poisoning_flag
			clr_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_food_poisoning_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_rabies_flag
			clr_character_flag = EVTDESC_RIP_11045_rabies_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_rabies_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_rabies_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_rabies_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_cancer_flag
			clr_character_flag = EVTDESC_RIP_11045_cancer_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_cancer_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_cancer_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_cancer_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_pneumonia_flag
			clr_character_flag = EVTDESC_RIP_11045_pneumonia_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_pneumonia_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_pneumonia_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_pneumonia_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_syphilis_flag
			clr_character_flag = EVTDESC_RIP_11045_syphilis_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_syphilis_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_syphilis_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_syphilis_flag_uncertain
			clr_character_flag = EVTDESC_RIP_11045_not_serious_flag
			clr_character_flag = EVTDESC_RIP_11045_not_serious_flag_horse
			clr_character_flag = EVTDESC_RIP_11045_not_serious_flag_certain
			clr_character_flag = EVTDESC_RIP_11045_not_serious_flag_sure
			clr_character_flag = EVTDESC_RIP_11045_not_serious_flag_uncertain
		}
	}
}

# Symptom treatment outcome
character_event = {
	id = RIP.11046
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_11046_COUGH_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_COUGH_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_COUGH_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_COUGH_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_COUGH_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_COUGH_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_FEVER_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_FEVER_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_FEVER_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_FEVER_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_FEVER_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_FEVER_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_DIARRHEA_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_DIARRHEA_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_DIARRHEA_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_DIARRHEA_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_DIARRHEA_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_DIARRHEA_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_VOMITING_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_VOMITING_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_VOMITING_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_VOMITING_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_VOMITING_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_VOMITING_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HEADACHE_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_HEADACHE_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HEADACHE_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_HEADACHE_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HEADACHE_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_HEADACHE_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_CHESTPAIN_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_CHESTPAIN_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_CHESTPAIN_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_CHESTPAIN_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_CHESTPAIN_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_CHESTPAIN_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_CRAMPS_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_CRAMPS_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_CRAMPS_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_CRAMPS_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_CRAMPS_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_CRAMPS_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_RASH_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_RASH_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_RASH_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_RASH_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_RASH_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_RASH_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_ABDOMINALPAIN_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_ABDOMINALPAIN_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_ABDOMINALPAIN_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_MALAISE_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_MALAISE_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_MALAISE_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_MALAISE_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_MALAISE_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_MALAISE_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_FATIGUE_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_FATIGUE_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_FATIGUE_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_FATIGUE_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_FATIGUE_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_FATIGUE_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_4
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_4_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_5
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_5_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_6
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_6_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_7
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_7_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_8
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_8_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_9
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_9_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_10
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_10_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_11
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_11_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_12
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_12_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_13
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_13_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_14
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_14_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_15
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_15_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_GENERAL_16
		trigger = { has_character_flag = EVTDESC_RIP_11046_GENERAL_16_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HORSE_1
		trigger = { has_character_flag = EVTDESC_RIP_11046_HORSE_1_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HORSE_2
		trigger = { has_character_flag = EVTDESC_RIP_11046_HORSE_2_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HORSE_3
		trigger = { has_character_flag = EVTDESC_RIP_11046_HORSE_3_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HORSE_4
		trigger = { has_character_flag = EVTDESC_RIP_11046_HORSE_4_FLAG }
	}
	desc = {
		text = EVTDESC_RIP_11046_HORSE_5
		trigger = { has_character_flag = EVTDESC_RIP_11046_HORSE_5_FLAG }
	}

	is_triggered_only = yes

	immediate = {

		random_list = {
			10 = {
				trigger = { trait = cough }
				set_character_flag = EVTDESC_RIP_11046_COUGH_1_FLAG
			}

			10 = {
				trigger = { trait = cough }
				set_character_flag = EVTDESC_RIP_11046_COUGH_2_FLAG
			}

			10 = {
				trigger = { trait = cough }
				set_character_flag = EVTDESC_RIP_11046_COUGH_3_FLAG
			}

			10 = {
				trigger = { trait = fever }
				set_character_flag = EVTDESC_RIP_11046_FEVER_1_FLAG
			}

			10 = {
				trigger = { trait = fever }
				set_character_flag = EVTDESC_RIP_11046_FEVER_2_FLAG
			}

			10 = {
				trigger = { trait = fever }
				set_character_flag = EVTDESC_RIP_11046_FEVER_3_FLAG
			}

			10 = {
				trigger = { trait = diarrhea }
				set_character_flag = EVTDESC_RIP_11046_DIARRHEA_1_FLAG
			}

			10 = {
				trigger = { trait = diarrhea }
				set_character_flag = EVTDESC_RIP_11046_DIARRHEA_2_FLAG
			}

			10 = {
				trigger = { trait = diarrhea }
				set_character_flag = EVTDESC_RIP_11046_DIARRHEA_3_FLAG
			}

			10 = {
				trigger = { trait = vomiting }
				set_character_flag = EVTDESC_RIP_11046_VOMITING_1_FLAG
			}

			10 = {
				trigger = { trait = vomiting }
				set_character_flag = EVTDESC_RIP_11046_VOMITING_2_FLAG
			}

			10 = {
				trigger = { trait = vomiting }
				set_character_flag = EVTDESC_RIP_11046_VOMITING_3_FLAG
			}

			10 = {
				trigger = { trait = headache }
				set_character_flag = EVTDESC_RIP_11046_HEADACHE_1_FLAG
			}

			10 = {
				trigger = { trait = headache }
				set_character_flag = EVTDESC_RIP_11046_HEADACHE_2_FLAG
			}

			10 = {
				trigger = { trait = headache }
				set_character_flag = EVTDESC_RIP_11046_HEADACHE_3_FLAG
			}

			10 = {
				trigger = { trait = chest_pain }
				set_character_flag = EVTDESC_RIP_11046_CHESTPAIN_1_FLAG
			}

			10 = {
				trigger = { trait = chest_pain }
				set_character_flag = EVTDESC_RIP_11046_CHESTPAIN_2_FLAG
			}

			10 = {
				trigger = { trait = chest_pain }
				set_character_flag = EVTDESC_RIP_11046_CHESTPAIN_3_FLAG
			}

			10 = {
				trigger = { trait = cramps }
				set_character_flag = EVTDESC_RIP_11046_CRAMPS_1_FLAG
			}

			10 = {
				trigger = { trait = cramps }
				set_character_flag = EVTDESC_RIP_11046_CRAMPS_2_FLAG
			}

			10 = {
				trigger = { trait = cramps }
				set_character_flag = EVTDESC_RIP_11046_CRAMPS_3_FLAG
			}

			10 = {
				trigger = { trait = rash }
				set_character_flag = EVTDESC_RIP_11046_RASH_1_FLAG
			}

			10 = {
				trigger = { trait = rash }
				set_character_flag = EVTDESC_RIP_11046_RASH_2_FLAG
			}

			10 = {
				trigger = { trait = rash }
				set_character_flag = EVTDESC_RIP_11046_RASH_3_FLAG
			}

			10 = {
				trigger = { trait = abdominal_pain }
				set_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_1_FLAG
			}

			10 = {
				trigger = { trait = abdominal_pain }
				set_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_2_FLAG
			}

			10 = {
				trigger = { trait = abdominal_pain }
				set_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_3_FLAG
			}

			10 = {
				trigger = { trait = malaise }
				set_character_flag = EVTDESC_RIP_11046_MALAISE_1_FLAG
			}

			10 = {
				trigger = { trait = malaise }
				set_character_flag = EVTDESC_RIP_11046_MALAISE_2_FLAG
			}

			10 = {
				trigger = { trait = malaise }
				set_character_flag = EVTDESC_RIP_11046_MALAISE_3_FLAG
			}

			10 = {
				trigger = { trait = fatigue }
				set_character_flag = EVTDESC_RIP_11046_FATIGUE_1_FLAG
			}

			10 = {
				trigger = { trait = fatigue }
				set_character_flag = EVTDESC_RIP_11046_FATIGUE_2_FLAG
			}

			10 = {
				trigger = { trait = fatigue }
				set_character_flag = EVTDESC_RIP_11046_FATIGUE_3_FLAG
			}

			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_1_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_2_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_3_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_4_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_5_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_6_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_7_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_8_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_9_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_10_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_11_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_12_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_13_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_14_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_15_FLAG }
			5 = { set_character_flag = EVTDESC_RIP_11046_GENERAL_16_FLAG }

			1000 = {
				trigger = {
					event_target:court_physician = {
						culture = horse

						NOR = {
							has_alternate_start_parameter = {
								key = special_culture
								value = animal_kingdoms
							}

							has_alternate_start_parameter = {
								key = special_culture
								value = animal_world
							}
						}
					}
				}

				set_character_flag = EVTDESC_RIP_11046_HORSE_1_FLAG
			}

			1000 = {
				trigger = {
					event_target:court_physician = {
						culture = horse

						NOR = {
							has_alternate_start_parameter = {
								key = special_culture
								value = animal_kingdoms
							}

							has_alternate_start_parameter = {
								key = special_culture
								value = animal_world
							}
						}
					}
				}

				set_character_flag = EVTDESC_RIP_11046_HORSE_2_FLAG
			}

			1000 = {
				trigger = {
					event_target:court_physician = {
						culture = horse

						NOR = {
							has_alternate_start_parameter = {
								key = special_culture
								value = animal_kingdoms
							}

							has_alternate_start_parameter = {
								key = special_culture
								value = animal_world
							}
						}
					}
				}

				set_character_flag = EVTDESC_RIP_11046_HORSE_3_FLAG
			}

			1000 = {
				trigger = {
					event_target:court_physician = {
						culture = horse

						NOR = {
							has_alternate_start_parameter = {
								key = special_culture
								value = animal_kingdoms
							}

							has_alternate_start_parameter = {
								key = special_culture
								value = animal_world
							}
						}
					}
				}

				set_character_flag = EVTDESC_RIP_11046_HORSE_4_FLAG
			}

			1000 = {
				trigger = {
					event_target:court_physician = {
						culture = horse

						NOR = {
							has_alternate_start_parameter = {
								key = special_culture
								value = animal_kingdoms
							}

							has_alternate_start_parameter = {
								key = special_culture
								value = animal_world
							}
						}
					}
				}

				set_character_flag = EVTDESC_RIP_11046_HORSE_5_FLAG
			}
		}
	}

	option = { # Ok outcome
		name = EVTOPTA_RIP_11046

		trigger = { has_character_flag = good_treatment_outcome }

		trigger_switch = {
			on_trigger = has_character_flag

			best_symptom_treatment = {
				if = {
					limit = {
						OR = {
							trait = cancer
							trait = gout
							trait = great_pox
						}
					}

					add_character_modifier = {
						name = symptom_treatment_4
						years = 5
					}
				}
				else = {
					add_character_modifier = {
						name = symptom_treatment_4
						years = 2
					}
				}
			}

			good_symptom_treatment = {
				if = {
					limit = {
						OR = {
							trait = cancer
							trait = gout
							trait = great_pox
						}
					}

					add_character_modifier = {
						name = symptom_treatment_3
						years = 5
					}
				}
				else = {
					add_character_modifier = {
						name = symptom_treatment_3
						years = 2
					}
				}
			}

			ok_symptom_treatment = {
				if = {
					limit = {
						OR = {
							trait = cancer
							trait = gout
							trait = great_pox
						}
					}

					add_character_modifier = {
						name = symptom_treatment_2
						years = 5
					}
				}
				else = {
					add_character_modifier = {
						name = symptom_treatment_2
						years = 2
					}
				}
			}

			poor_symptom_treatment = {
				if = {
					limit = {
						OR = {
							trait = cancer
							trait = gout
							trait = great_pox
						}
					}

					add_character_modifier = {
						name = symptom_treatment_1
						years = 5
					}
				}
				else = {
					add_character_modifier = {
						name = symptom_treatment_1
						years = 2
					}
				}
			}
		}

		set_character_flag = recent_treatment
		clr_character_flag = best_symptom_treatment
		clr_character_flag = good_symptom_treatment
		clr_character_flag = ok_symptom_treatment
		clr_character_flag = poor_symptom_treatment
		clr_character_flag = good_treatment_outcome
		clr_character_flag = being_treated
		clr_character_flag = EVTDESC_RIP_11046_COUGH_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_COUGH_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_COUGH_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FEVER_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FEVER_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FEVER_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_DIARRHEA_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_DIARRHEA_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_DIARRHEA_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_VOMITING_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_VOMITING_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_VOMITING_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HEADACHE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HEADACHE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HEADACHE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CHESTPAIN_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CHESTPAIN_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CHESTPAIN_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CRAMPS_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CRAMPS_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CRAMPS_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_RASH_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_RASH_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_RASH_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_MALAISE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_MALAISE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_MALAISE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FATIGUE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FATIGUE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FATIGUE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_4_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_5_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_6_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_7_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_8_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_9_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_10_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_11_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_12_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_13_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_14_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_15_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_16_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_4_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_5_FLAG
	}

	option = { # Nothing happens
		name = EVTOPTB_RIP_11046

		trigger = { has_character_flag = bad_treatment_outcome }

		set_character_flag = recent_treatment
		clr_character_flag = bad_treatment_outcome
		clr_character_flag = being_treated
		clr_character_flag = EVTDESC_RIP_11046_COUGH_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_COUGH_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_COUGH_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FEVER_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FEVER_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FEVER_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_DIARRHEA_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_DIARRHEA_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_DIARRHEA_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_VOMITING_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_VOMITING_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_VOMITING_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HEADACHE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HEADACHE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HEADACHE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CHESTPAIN_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CHESTPAIN_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CHESTPAIN_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CRAMPS_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CRAMPS_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_CRAMPS_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_RASH_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_RASH_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_RASH_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_ABDOMINALPAIN_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_MALAISE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_MALAISE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_MALAISE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FATIGUE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FATIGUE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_FATIGUE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_4_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_5_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_6_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_7_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_8_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_9_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_10_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_11_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_12_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_13_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_14_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_15_FLAG
		clr_character_flag = EVTDESC_RIP_11046_GENERAL_16_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_1_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_2_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_3_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_4_FLAG
		clr_character_flag = EVTDESC_RIP_11046_HORSE_5_FLAG
	}
}

# Physician hurt your close of kin
character_event = {
	id = RIP.11060
	desc = EVTDESC_RIP_11060
	picture = GFX_evt_bloody_tools
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trigger_if = {
			limit = { ai = no }

			multiplayer = no
			war = no
			random < 25 # 25% chance
		}

		NOT = { has_character_modifier = relative_treatment_reaction_timer }

		event_target:court_physician = {
			NOT = { character = FROM }
		}
	}

	immediate = {
		add_character_modifier = {
			name = relative_treatment_reaction_timer
			months = 1
			hidden = yes
		}
	}

	# throw them in prison
	option = {
		name = EVTOPTD_RIP_11060

		trigger = {
			NOT = { trait = wroth }
		}

		reverse_imprison = event_target:court_physician

		reverse_opinion = {
			name = opinion_grateful
			who = FROM
			years = 10
		}

		ai_chance = { factor = 5 }
	}

	# Have their head
	option = {
		name = EVTOPTA_RIP_11060
		tooltip_info = wroth

		trigger = { trait = wroth }

		event_target:court_physician = {
			show_scope_change = no

			death = {
				death_reason = death_execution_beheading
				killer = ROOT
			}
		}

		reverse_opinion = {
			name = opinion_grateful
			who = FROM
			years = 10
		}

		ai_chance = { factor = 5 }
	}

	# formal complaint
	option = {
		name = EVTOPTB_RIP_11060

		reverse_opinion = {
			name = opinion_did_not_trust_me
			who = event_target:court_physician
			years = 5
		}

		reverse_opinion = {
			name = opinion_grateful
			who = FROM
			years = 5
		}

		ai_chance = { factor = 60 }
	}

	# Do nothing
	option = {
		name = EVTOPTC_RIP_11060

		FROM = {
			show_scope_change = no

			opinion = {
				name = insulted
				who = ROOT
				years = 5
			}

			if = {
				limit = {
					NOT = { is_rival = ROOT }
				}

				random = {
					chance = 10
					add_rival = ROOT
				}
			}
		}

		ai_chance = { factor = 35 }
	}
}

# Physician cured your close kin
character_event = {
	id = RIP.11061
	picture = GFX_evt_recovery
	desc = EVTDESC_RIP_11061
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		trigger_if = {
			limit = { ai = no }

			multiplayer = no
			war = no
			random < 25 # 25% chance
		}

		NOT = { has_character_modifier = relative_treatment_reaction_timer }
	}

	immediate = {
		add_character_modifier = {
			name = relative_treatment_reaction_timer
			months = 1
			hidden = yes
		}
	}

	# Praise them to the court
	option = {
		name = EVTOPTC_RIP_11061
		tooltip_info = gregarious

		trigger = { trait = gregarious }

		reverse_opinion = {
			name = opinion_was_praised
			who = event_target:court_physician
			years = 5
		}

		random = {
			chance = 20
			add_friend = event_target:court_physician
		}

		any_courtier = {
			show_scope_change = no

			limit = {
				is_adult = yes
				prisoner = no
				NOT = { character = ROOT }
				is_incapable = no
			}

			opinion = {
				name = opinion_good_work
				who = event_target:court_physician
				years = 5
			}
		}

		ai_chance = { factor = 100 }
	}

	# Commend them
	option = {
		name = EVTOPTA_RIP_11061

		reverse_opinion = {
			name = opinion_was_praised
			who = event_target:court_physician
			years = 5
		}

		opinion = {
			name = opinion_good_work
			who = event_target:court_physician
			years = 5
		}

		transfer_scaled_wealth = {
			to = event_target:court_physician
			value = 0.02
		}

		ai_chance = { factor = 20 }
	}

	# It's their job
	option = {
		name = EVTOPTB_RIP_11061

		prestige = 10

		ai_chance = {
			factor = 80

			trigger = {
				NOT = { trait = gregarious }
			}
		}
	}
}

# Physician tells you you have leprosy
character_event = {
	id = RIP.11062
	desc = RIP.11062.d
	picture = GFX_evt_court_physician
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = ALAS

		clr_character_flag = new_leper_character
	}
}

# Leprosy cleanup
character_event = {
	id = RIP.11063

	is_triggered_only = yes # 6010, base_health_events.txt
	hide_window = yes

	trigger = {
		has_character_flag = new_leper_character
	}

	immediate = {
		clr_character_flag = new_leper_character
		clr_character_flag = being_treated
	}
}

# Babies born in seclusion gain seclusion
character_event = {
	id = RIP.11064

	is_triggered_only = yes # on_birth
	hide_window = yes

	trigger = {
		host = {
			in_seclusion = yes
		}
	}

	immediate = {
		add_character_modifier = {
			name = in_seclusion
			duration = -1
		}
	}
}

# Court Physician becomes renowned
character_event = {
	id = RIP.11065
	desc = RIP.11065.d
	picture = GFX_evt_court_physician
	border = GFX_event_normal_frame_religion
	portrait = event_target:court_physician

	is_triggered_only = yes

	immediate = {
		event_target:court_physician = {
			add_trait = physician
		}
	}

	option = {
		name = EXCELLENT

		tooltip = {
			event_target:court_physician = {
				show_scope_change = no

				add_trait = physician
			}
		}
	}
}

# Court physician examines sickly child
character_event = {
	id = RIP.11067
	desc = EVTDSC_RIP_11067
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		event_target:sickly_infant = {
			is_alive = yes
		}
	}

	# Treat them!
	option = {
		name = EVTOPTA_RIP_11067

		custom_tooltip = {
			text = EVTOPTA_RIP_11067_TOOLTIP

			random_list = {
				# Perfect treatment
				15 = {
					mult_modifier = {
						factor = 1.5
						event_target:court_physician = { is_smart_trigger = yes }
					}

					mult_modifier = {
						factor = 1.5
						event_target:court_physician = { physician_good_trigger = yes }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					character_event = {
						id = RIP.11069 # Sickly is removed
						days = 20
					}
				}

				# A bit of a treatment
				35 = {
					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning < 10 }
					}

					character_event = {
						id = RIP.11070 # Nice little treatment
						days = 20
					}
				}

				# Bad treatment
				50 = {
					mult_modifier = {
						factor = 1.5
						event_target:court_physician = { is_dumb_trigger = yes }
					}

					mult_modifier = {
						factor = 1.5
						event_target:court_physician = { physician_bad_trigger = yes }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 25 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 20 }
					}

					mult_modifier = {
						factor = 0.8
						event_target:court_physician = { learning >= 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 15 }
					}

					mult_modifier = {
						factor = 1.2
						event_target:court_physician = { learning < 10 }
					}

					character_event = {
						id = RIP.11071 # Nothing happens
						days = 20
					}
				}
			}
		}

		show_portrait = event_target:sickly_infant

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 5
				trait = kind
			}

			mult_modifier = {
				factor = 10

				player_heir = {
					character = event_target:sickly_infant
				}
			}
		}
	}

	# Don't do anything
	option = {
		name = EVTOPTB_RIP_11067

		custom_tooltip = {
			text = EVTOPTB_RIP_11067_TOOLTIP

			random = {
				chance = 20

				mult_modifier = {
					factor = 4
					event_target:sickly_infant = { is_unimportant_trigger = yes }
				}

				character_event = {
					id = RIP.11073 # Child dies
					days = 30
					random = 100
				}
			}
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 50
				event_target:sickly_infant = { is_unimportant_trigger = yes }
			}

			mult_modifier = {
				factor = 20

				OR = {
					trait = cruel
					trait = arbitrary
				}
			}

			mult_modifier = {
				factor = 20

				liege = {
					OR = {
						is_tribal = yes
						is_nomadic = yes
					}
				}
			}
		}
	}
}

# Sickly is removed
character_event = {
	id = RIP.11069
	desc = EVTDSC_RIP_11069
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		event_target:sickly_infant = {
			trait = sickly
		}
	}

	immediate = {
		event_target:sickly_infant = {
			remove_trait = sickly
		}
	}

	option = {
		name = EVTOPTA_RIP_11069

		tooltip = {
			event_target:sickly_infant = {
				show_scope_change = no

				remove_trait = sickly
			}
		}
	}
}

# Nice little treatment
character_event = {
	id = RIP.11070
	desc = EVTDSC_RIP_11070
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		event_target:sickly_infant = {
			trait = sickly
		}
	}

	option = {
		name = EVTOPTA_RIP_11070

		event_target:sickly_infant = {
			show_scope_change = no

			add_character_modifier = {
				name = successful_treatment
				years = 3
			}
		}
	}
}

# Nothing happens
character_event = {
	id = RIP.11071
	desc = EVTDSC_RIP_11071
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		event_target:sickly_infant = {
			trait = sickly
		}
	}

	ai = no

	option = {
		name = EVTOPTA_RIP_11071

		custom_tooltip = { text = EVTOPTA_RIP_11071_TOOLTIP }
	}
}

# Child dies
character_event = {
	id = RIP.11073
	desc = EVTDSC_RIP_11073
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		event_target:sickly_infant = {
			trait = sickly
		}
	}

	option = {
		name = EVTOPTA_RIP_11073

		event_target:sickly_infant = {
			show_scope_change = no

			death = { death_reason = death_trait }
		}
	}
}