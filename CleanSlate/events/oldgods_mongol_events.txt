###################################
#
# THE OLD GODS
# - Mongol Events
#
###################################

# Written by Henrik Eklund

namespace = TOG

#######################
# Mongols sack cities #
#######################

# Replaced by events in base_mongol_events.txt

# Mongols sack Kiev
# narrative_event = {
#	id = TOG.1
#	title = EVTNAME_TOG_001
#	desc = EVTDESC_TOG_001
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Novgorod
# narrative_event = {
#	id = TOG.2
#	title = EVTNAME_TOG_002
#	desc = EVTDESC_TOG_002
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Krakow
# narrative_event = {
#	id = TOG.3
#	title = EVTNAME_TOG_003
#	desc = EVTDESC_TOG_003
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Aachen
# narrative_event = {
#	id = TOG.4
#	title = EVTNAME_TOG_004
#	desc = EVTDESC_TOG_004
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Paris
# narrative_event = {
#	id = TOG.5
#	title = EVTNAME_TOG_005
#	desc = EVTDESC_TOG_005
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack London
# narrative_event = {
#	id = TOG.6
#	title = EVTNAME_TOG_006
#	desc = EVTDESC_TOG_006
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Rome
# narrative_event = {
#	id = TOG.7
#	title = EVTNAME_TOG_007
#	desc = EVTDESC_TOG_007
#	picture = GFX_evt_rome_falls
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Venice
# narrative_event = {
#	id = TOG.8
#	title = EVTNAME_TOG_008
#	desc = EVTDESC_TOG_008
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Constantinople
# narrative_event = {
#	id = TOG.9
#	title = EVTNAME_TOG_009
#	desc = EVTDESC_TOG_009
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Lisbon
# narrative_event = {
#	id = TOG.10
#	title = EVTNAME_TOG_010
#	desc = EVTDESC_TOG_010
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Smolensk
# narrative_event = {
#	id = TOG.11
#	title = EVTNAME_TOG_011
#	desc = EVTDESC_TOG_011
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Prague
# narrative_event = {
#	id = TOG.12
#	title = EVTNAME_TOG_012
#	desc = EVTDESC_TOG_012
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Vienna
# narrative_event = {
#	id = TOG.13
#	title = EVTNAME_TOG_013
#	desc = EVTDESC_TOG_013
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Esztergom
# narrative_event = {
#	id = TOG.14
#	title = EVTNAME_TOG_014
#	desc = EVTDESC_TOG_014
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Athens
# narrative_event = {
#	id = TOG.15
#	title = EVTNAME_TOG_015
#	desc = EVTDESC_TOG_015
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Belgrade
# narrative_event = {
#	id = TOG.16
#	title = EVTNAME_TOG_016
#	desc = EVTDESC_TOG_016
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Baghdad
# narrative_event = {
#	id = TOG.17
#	title = EVTNAME_TOG_017
#	desc = EVTDESC_TOG_017
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Damascus
# narrative_event = {
#	id = TOG.18
#	title = EVTNAME_TOG_018
#	desc = EVTDESC_TOG_018
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Jerusalem
# narrative_event = {
#	id = TOG.19
#	title = EVTNAME_TOG_019
#	desc = EVTDESC_TOG_019
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Alexandria
# narrative_event = {
#	id = TOG.20
#	title = EVTNAME_TOG_020
#	desc = EVTDESC_TOG_020
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Cairo
# narrative_event = {
#	id = TOG.21
#	title = EVTNAME_TOG_021
#	desc = EVTDESC_TOG_021
#	picture = GFX_evt_mongols_pillage_oldgods
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

# Mongols sack Mecca
# narrative_event = {
#	id = TOG.22
#	title = EVTNAME_TOG_022
#	desc = EVTDESC_TOG_022
#	picture = GFX_evt_mecca_falls_soa
#	border = GFX_event_narrative_frame_war
#
#	is_triggered_only = yes
#	hide_from = yes
#
#	option = {
#		name = EVTOPTA_TOG_001
#
#		prestige = 100
#	}
# }

##################
# The Great Hunt #
##################

### Starting Phase

# Organize the Hunt
character_event = {
	id = TOG.100
	desc = EVTDESC_TOG_100
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes # hold_nerge, minor_decisions.txt
	hide_from = yes

	option = {
		name = EVTOPTA_TOG_100

		custom_tooltip = { text = EVTTOOLTIP_TOG_101 }

		any_vassal = {
			show_scope_change = no

			limit = {
				is_playable = yes
				practical_age < 55
				is_female = no
				block_general_event_trigger = no
				war = no
				is_maimed_trigger = no

				NOR = {
					trait = wounded
					trait = infirm
				}
			}

			set_character_flag = do_not_disturb

			character_event = { id = TOG.101 }

			character_event = {
				id = TOG.299 # Safety catch flag clearing
				days = 100
			}

			character_event = {
				id = TOG.103 # Hunt begins
				days = 10
			}
		}

		character_event = {
			id = TOG.102 # Hunt begins
			days = 10
		}
	}
}

# Invitation (Attendance is Mandatory)
character_event = {
	id = TOG.101
	desc = EVTDESC_TOG_101
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_101

		custom_tooltip = { text = nerge_assemble }
	}
}

# Khagan informed Hunt Begins!
character_event = {
	id = TOG.102
	desc = EVTDESC_TOG_102
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		set_character_flag = khagan_holding_nerge
	}

	option = {
		name = EVTOPTA_TOG_102

		custom_tooltip = {
			text = nerge_starts

			character_event = {
				id = TOG.150 # Hunt Ends, Animals corralled, Khagan takes first shot
				days = 60
				random = 10
			}

			character_event = {
				id = TOG.158 # Exceptional Soldier brought to Khagan's attention
				days = 1
				random = 479
			}

			character_event = {
				id = TOG.159 # Exceptional Bear Captured
				days = 1
				random = 479
			}

			character_event = {
				id = TOG.109 # Nerge Hunt Event Tombola
				days = 14
			}
		}

		if = {
			limit = { ai = no }

			chronicle = {
				entry = CHRONICLE_HELD_NERGE
				picture = GFX_evt_tengri_throneroom_oldgods
			}
		}
	}
}

# Vassal informed Hunt Begins!
character_event = {
	id = TOG.103
	desc = EVTDESC_TOG_103
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		set_character_flag = vassal_holding_nerge
	}

	option = {
		name = EVTOPTA_TOG_102

		custom_tooltip = { text = nerge_starts }
	}
}

### During Hunt

# Nerge Hunt Event Tombola
character_event = {
	id = TOG.109

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = khagan_holding_nerge

	immediate = {
		random_list = {
			100 = { } # No event

			25 = { # Vassal is injured
				any_vassal = {
					limit = {
						has_character_flag = vassal_holding_nerge
						is_incapable = no
						prisoner = no
					}

					score_value = {
						value = 100

						mult_modifier = {
							factor = 1.25
							martial < 8
						}

						mult_modifier = {
							factor = 1.25
							martial < 4
						}

						mult_modifier = {
							factor = 1.25
							trait = imbecile
						}

						mult_modifier = {
							factor = 0.8
							martial >= 10
						}

						mult_modifier = {
							factor = 0.67
							martial >= 14
						}
					}

					character_event = { id = TOG.110 }
				}
			}

			25 = { # Vassal comes to blow with another vassal
				trigger = {
					any_vassal = {
						count >= 2

						has_character_flag = vassal_holding_nerge
						is_incapable = no
						prisoner = no
					}
				}

				any_vassal = {
					limit = {
						has_character_flag = vassal_holding_nerge
						is_incapable = no
						prisoner = no
					}

					score_value = {
						value = 100

						mult_modifier = {
							factor = 1.67
							trait = wroth
						}

						mult_modifier = {
							factor = 0.7
							trait = kind
						}
					}

					save_event_target_as = quarreling_vassal
				}

				random_vassal = {
					limit = {
						has_character_flag = vassal_holding_nerge
						is_incapable = no
						prisoner = no
						NOT = { character = event_target:quarreling_vassal }
					}

					character_event = { id = TOG.112 }
				}
			}

			25 = { # Vassal's forces let wild game escape
				any_vassal = {
					limit = {
						has_character_flag = vassal_holding_nerge
						is_incapable = no
						prisoner = no
					}

					score_value = {
						value = 100

						mult_modifier = {
							factor = 1.25
							trait = slothful
						}

						mult_modifier = {
							factor = 1.25
							trait = imbecile
						}

						mult_modifier = {
							factor = 0.7
							trait = diligent
						}

						mult_modifier = {
							factor = 1.25
							martial < 8
						}

						mult_modifier = {
							factor = 1.25
							martial < 4
						}

						mult_modifier = {
							factor = 0.8
							martial >= 10
						}

						mult_modifier = {
							factor = 0.8
							martial >= 14
						}
					}

					character_event = { id = TOG.114 }
				}
			}

			25 = { # Vassal killed animal without permission
				any_vassal = {
					limit = {
						has_character_flag = vassal_holding_nerge
						is_incapable = no
						prisoner = no
					}

					score_value = {
						value = 100

						mult_modifier = {
							factor = 0.67
							trait = patient
						}

						mult_modifier = {
							factor = 1.25
							trait = greedy
						}

						mult_modifier = {
							factor = 1.25
							trait = arbitrary
						}

						mult_modifier = {
							factor = 1.25
							trait = imbecile
						}
					}

					character_event = { id = TOG.117 }
				}
			}
		}

		repeat_event = {
			id = TOG.109
			days = 14
		}
	}
}

# Vassal is injured
character_event = {
	id = TOG.110
	desc = EVTDESC_TOG_110
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_110

		add_trait = wounded

		liege = {
			character_event = { id = TOG.111 }
		}
	}
}

# Vassal is injured (Liege informed)
character_event = {
	id = TOG.111
	desc = EVTDESC_TOG_111
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_111

		tooltip = {
			FROM = {
				show_scope_change = no

				add_trait = wounded
			}
		}
	}
}

# Vassal comes to blow with another vassal
character_event = {
	id = TOG.112
	desc = EVTDESC_TOG_112
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy
	portrait = event_target:quarreling_vassal

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_112

		liege = { character_event = { id = TOG.113 } }
		event_target:quarreling_vassal = { character_event = { id = TOG.120 } }

		opinion = {
			name = opinion_nerge_rival
			who = event_target:quarreling_vassal
		}
	}
}

# Vassal comes to blow with another vassal 2
character_event = {
	id = TOG.120
	desc = EVTDESC_TOG_112
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		FROM = { save_event_target_as = quarreling_vassal } # For loc
	}

	option = {
		name = EVTOPTA_TOG_112

		opinion = {
			name = opinion_nerge_rival
			who = FROM
		}
	}
}

# Vassal comes to blow with another vassal (Liege informed)
character_event = {
	id = TOG.113
	desc = EVTDESC_TOG_113
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_113

		tooltip = {
			FROM = {
				show_scope_change = no

				opinion = {
					name = opinion_nerge_rival
					who = event_target:quarreling_vassal
				}

				reverse_opinion = {
					name = opinion_nerge_rival
					who = event_target:quarreling_vassal
				}
			}
		}
	}
}

# Vassal's forces let wild game escape
character_event = {
	id = TOG.114
	desc = EVTDESC_TOG_114
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_114

		liege = {
			character_event = { id = TOG.115 }
		}
	}
}

# Vassal's forces let wild game escape (Liege informed)
character_event = {
	id = TOG.115
	desc = EVTDESC_TOG_115
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = { # Punish
		name = EVTOPTA_TOG_115

		FROM = {
			show_scope_change = no

			character_event = {
				id = TOG.116
				tooltip = EVTTOOLTIP_TOG_116
			}

			opinion = {
				name = opinion_punished_nerge
				who = ROOT
			}

			tooltip = {
				add_trait = wounded
			}
		}
	}

	option = { # Do not punish
		name = EVTOPTB_TOG_115

		reverse_opinion = {
			name = opinion_grateful
			who = FROM
		}

		any_vassal = {
			show_scope_change = no

			limit = {
				has_character_flag = vassal_holding_nerge

				NOR = {
					character = FROM

					has_opinion_modifier = {
						name = opinion_disappointed
						who = ROOT
					}
				}
			}

			count = 2

			opinion = {
				name = opinion_disappointed
				who = ROOT
				years = 1
			}
		}
	}
}

# Vassal is punished
character_event = {
	id = TOG.116
	desc = EVTDESC_TOG_116
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_116

		add_trait_silently_wounded_effect = yes
	}
}

# Vassal killed animal without permission
character_event = {
	id = TOG.117
	desc = EVTDESC_TOG_117
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_117

		liege = {
			character_event = { id = TOG.118 }
		}
	}
}

# Vassal killed animal without permission (Liege informed)
character_event = {
	id = TOG.118
	desc = EVTDESC_TOG_118
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = { # Punish
		name = EVTOPTA_TOG_118

		FROM = {
			show_scope_change = no

			character_event = {
				id = TOG.116
				tooltip = EVTTOOLTIP_TOG_116
			}

			opinion = {
				name = opinion_punished_nerge
				who = ROOT
			}

			tooltip = {
				add_trait = wounded
			}
		}
	}

	option = { # Do not punish
		name = EVTOPTB_TOG_118

		reverse_opinion = {
			name = opinion_grateful
			who = FROM
		}

		any_vassal = {
			show_scope_change = no

			limit = {
				has_character_flag = vassal_holding_nerge

				NOR = {
					character = FROM

					has_opinion_modifier = {
						name = opinion_disappointed
						who = ROOT
					}
				}
			}

			count = 2

			opinion = {
				name = opinion_disappointed
				who = ROOT
				years = 1
			}
		}
	}
}

### Hunt Ends

# Animals corralled, Khagan takes first shot
character_event = {
	id = TOG.150
	desc = EVTDESC_TOG_150
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	hide_from = yes

	has_dlc = "The Old Gods"
	has_character_flag = khagan_holding_nerge

	immediate = {
		clear_delayed_event = { id = TOG.158 }
		clear_delayed_event = { id = TOG.159 }
		clr_character_flag = khagan_holding_nerge
		set_character_flag = khagan_finishing_nerge

		any_vassal = {
			limit = { has_character_flag = vassal_holding_nerge }

			clr_character_flag = vassal_holding_nerge
			set_character_flag = vassal_finishing_nerge
		}
	}

	option = {
		name = EVTOPTA_TOG_150

		custom_tooltip = {
			text = hunt_animals

			any_vassal = {
				limit = { has_character_flag = vassal_finishing_nerge }
				character_event = { id = TOG.151 }
			}

			if = {
				limit = { trait = hunter }

				character_event = {
					id = TOG.152
					days = 2
				}
			}
			else_if = {
				limit = { lifestyle_traits < 1 }

				random = {
					chance = 25

					character_event = {
						id = TOG.152
						days = 2
					}
				}
			}

			character_event = {
				id = TOG.169
				days = 10
			}
		}
	}
}

# Animals corralled, Vassals get their turn
character_event = {
	id = TOG.151
	desc = EVTDESC_TOG_151
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_151

		custom_tooltip = {
			text = hunt_animals

			if = {
				limit = { trait = hunter }

				character_event = {
					id = TOG.152
					days = 2
				}
			}
			else_if = {
				limit = { lifestyle_traits < 1 }

				random = {
					chance = 25

					character_event = {
						id = TOG.152
						days = 2
					}
				}
			}
		}
	}
}

# Hunt Over, Character did well
character_event = {
	id = TOG.152
	desc = EVTDESC_TOG_152
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_152

		if = {
			limit = {
				lifestyle_traits < 1
				NOT = { has_dlc = "Way of Life" }
			}

			add_trait = hunter
		}

		prestige = 100
	}
}

# Hunt Over, Exceptional Soldier brought to Khagan's attention
character_event = {
	id = TOG.158
	desc = EVTDESC_TOG_158
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	has_character_flag = khagan_holding_nerge
	only_capable = yes
	prisoner = no

	option = { # Bring to court
		name = EVTOPTA_TOG_158

		create_character = {
			random_traits = no
			dynasty = none
			female = no
			age = 26
			religion = ROOT
			culture = ROOT
			add_trait = diligent
			add_trait = quick
			add_trait = brave
			add_trait = brilliant_strategist

			attributes = {
				martial = 10
			}
		}
	}

	option = { # Leave as soldier
		name = EVTOPTB_TOG_158
	}
}

# Hunt Over, Exceptional Bear Captured
character_event = {
	id = TOG.159
	desc = EVTDESC_TOG_159
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	has_character_flag = khagan_holding_nerge
	only_capable = yes
	prisoner = no

	trigger = {
		NOT = { has_character_flag = pet_bear }
	}

	option = { # Keep as pet
		name = EVTOPTA_TOG_159

		custom_tooltip = {
			text = pet_bear
			set_character_flag = pet_bear
		}
	}

	option = { # Kill
		name = EVTOPTB_TOG_159

		custom_tooltip = { text = dead_bear }
	}
}

# Bear attacks courtier
character_event = {
	id = TOG.160
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	desc = {
		text = EVTDESC_TOG_160
		trigger = { has_character_flag = bear_attack_wounds }
	}
	desc = {
		text = EVTDESC_TOG_161
		trigger = { has_character_flag = bear_attack_maims }
	}
	desc = {
		text = EVTDESC_TOG_162
		trigger = { has_character_flag = bear_attack_kills }
	}

	is_triggered_only = yes # on_bi_yearly_pulse, random_events, pet_bear_events

	only_playable = yes
	has_character_flag = pet_bear
	culture = mongol
	has_dlc = "The Old Gods"
	only_capable = yes
	prisoner = no

	trigger = {
		any_courtier = {
			is_ruler = no
			is_adult = yes
			host = { character = ROOT }
			prisoner = no
			is_incapable = no
			is_primary_heir = no
			is_pretender = no
			in_command = no

			NOR = {
				is_married = ROOT
				is_close_relative = ROOT
				has_character_flag = pet_bear
			}
		}
	}

	immediate = {
		random_courtier = {
			limit = {
				is_ruler = no
				is_adult = yes
				host = { character = ROOT }
				prisoner = no
				is_incapable = no
				is_primary_heir = no
				is_pretender = no
				in_command = no

				NOR = {
					is_married = ROOT
					is_close_relative = ROOT
					has_character_flag = pet_bear
				}
			}

			save_event_target_as = bear_victim
		}

		random_list = {
			33 = { set_character_flag = bear_attack_wounds }
			33 = { set_character_flag = bear_attack_maims }
			33 = { set_character_flag = bear_attack_kills }
		}
	}

	option = {
		name = EVTOPTA_TOG_160

		trigger = { has_character_flag = bear_attack_wounds }

		event_target:bear_victim = {
			show_scope_change = no

			add_trait_silently_wounded_effect = yes
		}
	}

	option = {
		name = EVTOPTA_TOG_160

		trigger = { has_character_flag = bear_attack_maims }

		event_target:bear_victim = {
			show_scope_change = no

			add_maimed_trait_effect = yes
		}
	}

	option = {
		name = EVTOPTA_TOG_160

		trigger = { has_character_flag = bear_attack_kills }

		event_target:bear_victim = {
			show_scope_change = no

			death = { death_reason = death_accident_bear }
		}
	}

	after = {
		clear_flags_with_prefix = bear_attack_
	}
}

# Visiting dignitaries impressed by bear
character_event = {
	id = TOG.163
	desc = EVTDESC_TOG_163
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes # on_bi_yearly_pulse, random_events, pet_bear_events

	only_playable = yes
	has_character_flag = pet_bear
	culture = mongol
	has_dlc = "The Old Gods"
	only_capable = yes
	prisoner = no

	option = {
		name = EVTOPTA_TOG_163

		prestige = 200
	}
}

# Bear taught to dance
character_event = {
	id = TOG.164
	desc = EVTDESC_TOG_164
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes # on_bi_yearly_pulse, random_events, pet_bear_events

	only_playable = yes
	has_character_flag = pet_bear
	culture = mongol
	has_dlc = "The Old Gods"
	only_capable = yes
	prisoner = no

	trigger = {
		capital_scope = {
			NOR = {
				region = world_india
				region = world_persia
			}
		}

		location = {
			county = {
				NOT = { region = world_india }
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_164

		prestige = 200
	}
}

# Bear depressed
character_event = {
	id = TOG.165
	desc = EVTDESC_TOG_165
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes # on_bi_yearly_pulse, random_events, pet_bear_events

	only_playable = yes
	has_character_flag = pet_bear
	culture = mongol
	has_dlc = "The Old Gods"
	only_capable = yes
	prisoner = no

	option = { # Release
		name = EVTOPTA_TOG_165

		custom_tooltip = {
			text = bear_released
			clr_character_flag = pet_bear
		}

		prestige = -50
		add_trait_partially_silently_kind_effect = yes
	}

	option = { # Keep
		name = EVTOPTB_TOG_165

		custom_tooltip = {
			text = keep_bear
			set_character_flag = pet_bear_depressed
		}

		random = {
			chance = 33
			add_trait_fully_cruel_effect = yes
		}
	}
}

# Bear dies
character_event = {
	id = TOG.166
	desc = EVTDESC_TOG_166
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes # on_bi_yearly_pulse, random_events, pet_bear_events

	only_playable = yes
	has_character_flag = pet_bear
	culture = mongol
	has_dlc = "The Old Gods"
	only_capable = yes
	prisoner = no

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 2
			has_character_flag = pet_bear_depressed
		}
	}

	option = {
		name = EVTOPTA_TOG_166

		custom_tooltip = {
			text = bear_passes_away

			clr_character_flag = pet_bear
			clr_character_flag = pet_bear_depressed
		}

		random = {
			chance = 20
			add_trait_depressed_effect = yes
		}
	}
}

# Per tradition, Khagan asked to spare remaining animals
character_event = {
	id = TOG.169
	desc = EVTDESC_TOG_169
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	hide_from = yes

	option = { # Yes
		name = EVTOPTA_TOG_169

		random = {
			chance = 33
			add_trait_partially_kind_effect = yes
		}

		prestige = 25
	}

	option = { # No
		name = EVTOPTB_TOG_169

		add_trait_partially_silently_cruel_effect = yes
		prestige = -25
	}

	after = {
		character_event = {
			id = TOG.170
			days = 5
		}
	}
}

# Hunt over! Feast can commence! (Liege)
character_event = {
	id = TOG.170
	desc = EVTDESC_TOG_170
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_TOG_170

		custom_tooltip = {
			text = feast_begins

			set_variable = {
				which = local_nerge_feast_events
				value = 0
			}

			character_event = {
				id = TOG.172 # Feast events tombola
				days = 3
			}

			any_vassal = {
				limit = { has_character_flag = vassal_finishing_nerge }

				set_character_flag = nerge_feast_vassal
				character_event = { id = TOG.171 }

				opinion = {
					name = opinion_held_nerge
					who = ROOT
				}
			}
		}
	}
}

# Hunt over! Feast can commence! (Vassals)
character_event = {
	id = TOG.171
	desc = EVTDESC_TOG_170
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_170
	}
}

# Feast over! The Nerge is completed (Liege)
character_event = {
	id = TOG.180
	desc = EVTDESC_TOG_180
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		clr_character_flag = khagan_finishing_nerge
		clr_character_flag = holding_nerge
		clr_character_flag = do_not_disturb

		add_character_modifier = {
			name = held_nerge_timer
			years = 4
			hidden = yes
		}

		hidden_effect = {
			any_vassal = {
				limit = { has_character_flag = vassal_finishing_nerge }

				character_event = { id = TOG.179 }
				clr_character_flag = vassal_finishing_nerge
				clr_character_flag = nerge_feast_vassal
				clr_character_flag = do_not_disturb
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_180

		add_character_modifier = {
			name = morale_from_nerge
			years = 2
		}
	}
}

# Feast over! The Nerge is completed (Vassal)
character_event = {
	id = TOG.179
	desc = EVTDESC_TOG_180
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_180
	}
}

# Nerge abandoned due to war
character_event = {
	id = TOG.183

	is_triggered_only = yes # on_war_started
	hide_window = yes

	immediate = {
		ROOT = {
			if = {
				limit = {
					OR = {
						has_character_flag = khagan_holding_nerge
						has_character_flag = khagan_finishing_nerge
					}
				}

				character_event = { id = TOG.181 }
			}
		}

		FROM = {
			if = {
				limit = {
					OR = {
						has_character_flag = khagan_holding_nerge
						has_character_flag = khagan_finishing_nerge
					}
				}

				character_event = { id = TOG.181 }
			}
		}
	}
}

character_event = {
	id = TOG.181
	desc = EVTDESC_TOG_181
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		clear_delayed_event = { id = TOG.109 }
		clear_delayed_event = { id = TOG.158 }
		clear_delayed_event = { id = TOG.159 }
		clr_character_flag = khagan_holding_nerge
		clr_character_flag = khagan_finishing_nerge
		clr_character_flag = holding_nerge
		clr_character_flag = do_not_disturb

		hidden_effect = {
			any_vassal = {
				limit = {
					OR = {
						has_character_flag = vassal_holding_nerge
						has_character_flag = vassal_finishing_nerge
					}
				}

				character_event = { id = TOG.182 }
				clr_character_flag = vassal_holding_nerge
				clr_character_flag = vassal_finishing_nerge
				clr_character_flag = nerge_feast_vassal
				clr_character_flag = do_not_disturb
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_181
	}
}

# Nerge abandoned due to war (for vassals)
character_event = {
	id = TOG.182
	desc = EVTDESC_TOG_181
	picture = GFX_evt_tengri_throneroom_oldgods
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_181
	}
}

### Nerge Feast Events

character_event = {
	id = TOG.172

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		check_variable = {
			which = local_nerge_feast_events
			value < 4
		}
	}

	immediate = {
		change_variable = {
			which = local_nerge_feast_events
			value = 1
		}

		random_list = {
			10 = {
				trigger = {
					any_vassal = {
						trait = drunkard
						has_character_flag = nerge_feast_vassal
					}

					NOT = { has_character_flag = feast_drunkard }
				}

				random_vassal = {
					limit = {
						trait = drunkard
						has_character_flag = nerge_feast_vassal
					}

					character_event = { id = TOG.200 }
				}
			}

			10 = {
				trigger = {
					any_vassal = {
						trait = gluttonous
						has_character_flag = nerge_feast_vassal
					}

					num_of_vassals >= 2
					NOT = { has_character_flag = feast_gluttonous }
				}

				random_vassal = {
					limit = {
						trait = gluttonous
						has_character_flag = nerge_feast_vassal
					}

					character_event = { id = TOG.203 }
				}
			}

			10 = {
				trigger = {
					any_vassal = {
						trait = lunatic
						has_character_flag = nerge_feast_vassal
					}

					NOT = { has_character_flag = feast_lunatic }
				}

				random_vassal = {
					limit = {
						trait = lunatic
						has_character_flag = nerge_feast_vassal
					}

					character_event = { id = TOG.206 }
				}
			}

			10 = {
				trigger = {
					any_vassal = {
						trait = lustful
						is_female = no
						has_character_flag = nerge_feast_vassal
					}

					NOT = { has_character_flag = feast_lustful }
				}

				random_vassal = {
					limit = {
						trait = lustful
						is_female = no
						has_character_flag = nerge_feast_vassal
					}

					character_event = { id = TOG.208 }
				}
			}

			10 = {
				trigger = {
					any_vassal = {
						has_character_flag = nerge_feast_vassal

						liege = {
							any_vassal = {
								has_character_flag = nerge_feast_vassal

								opinion = {
									who = PREVPREV
									value >= 20
								}

								NOT = { character = PREVPREV }
							}
						}
					}

					NOT = { has_character_flag = feast_friendship }
				}

				random_vassal = {
					limit = {
						liege = {
							any_vassal = {
								opinion = {
									who = PREVPREV
									value >= 20
								}

								NOT = { character = PREVPREV }
							}
						}
					}

					character_event = { id = TOG.211 }
				}
			}

			10 = {
				trigger = {
					NOT = { has_character_flag = feast_homosexual }

					any_vassal = {
						trait = homosexual
						has_lover = no
						has_character_flag = nerge_feast_vassal

						liege = {
							any_vassal = {
								trait = homosexual
								same_sex = PREVPREV
								has_lover = no
								has_character_flag = nerge_feast_vassal

								opinion = {
									who = PREVPREV
									value >= 0
								}

								NOT = { character = PREVPREV }
							}
						}
					}
				}

				random_vassal = {
					limit = {
						trait = homosexual
						has_lover = no
						has_character_flag = nerge_feast_vassal

						liege = {
							any_vassal = {
								trait = homosexual
								same_sex = PREVPREV
								has_lover = no
								has_character_flag = nerge_feast_vassal

								opinion = {
									who = PREVPREV
									value >= 0
								}

								NOT = { character = PREVPREV }
							}
						}
					}

					character_event = { id = TOG.214 }
				}
			}
		}

		repeat_event = {
			id = TOG.172
			days = 5
		}
	}

	fail_trigger_effect = {
		character_event = {
			id = TOG.180 # Feast ends
			days = 7
		}
	}
}

# Drunkard (Guest)
character_event = {
	id = TOG.200
	desc = EVTDESC_TOG_650
	picture = GFX_evt_drunk
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_TOG_650
		tooltip_info = drunkard

		liege = {
			show_scope_change = no

			if = {
				limit = { trait = drunkard }

				opinion = {
					name = opinion_drinking_buddy
					who = ROOT
				}
			}
			else = {
				opinion = {
					name = opinion_feast_scandal
					who = ROOT
				}
			}

			set_character_flag = feast_drunkard
			character_event = { id = TOG.201 }

			any_vassal = {
				show_scope_change = no

				limit = {
					has_character_flag = nerge_feast_vassal
					NOT = { character = ROOT }
				}

				if = {
					limit = { trait = drunkard }

					opinion = {
						name = opinion_drinking_buddy
						who = ROOT
					}
				}
				else = {
					opinion = {
						name = opinion_feast_scandal
						who = ROOT
					}
				}

				character_event = { id = TOG.201 }
			}
		}
	}
}

# Drunkard (Host and Other Guests)
character_event = {
	id = TOG.201
	desc = EVTDESC_TOG_651
	picture = GFX_evt_drunk
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_651

		trigger = {
			NOT = { trait = drunkard }
		}

		tooltip = {
			opinion = {
				name = opinion_feast_scandal
				who = FROM
			}
		}
	}

	option = {
		name = EVTOPTB_TOG_651
		tooltip_info = drunkard

		trigger = { trait = drunkard }

		tooltip = {
			opinion = {
				name = opinion_drinking_buddy
				who = FROM
			}
		}
	}
}

# Gluttonous (Guest)
character_event = {
	id = TOG.203
	desc = EVTDESC_TOG_653
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		liege = {
			set_character_flag = feast_gluttonous

			random_vassal = {
				limit = {
					NOT = { character = ROOT }
				}

				save_event_target_as = glutton_victim
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_653
		tooltip_info = gluttonous

		event_target:glutton_victim = {
			show_scope_change = no

			opinion = {
				name = opinion_vomit
				who = ROOT
			}

			character_event = {
				id = TOG.204
				tooltip = EVTTOOLTIP_TOG_654
			}
		}

		liege = {
			show_scope_change = no

			opinion = {
				name = opinion_feast_scandal
				who = ROOT
			}

			character_event = { id = TOG.205 }

			any_vassal = {
				show_scope_change = no

				limit = {
					has_character_flag = nerge_feast_vassal

					NOR = {
						character = ROOT
						character = event_target:glutton_victim
					}
				}

				opinion = {
					name = opinion_feast_scandal
					who = ROOT
				}

				character_event = { id = TOG.205 }
			}
		}
	}
}

# Gluttonous (Victim)
character_event = {
	id = TOG.204
	desc = EVTDESC_TOG_654
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_654

		tooltip = {
			opinion = {
				name = opinion_vomit
				who = FROM
			}
		}
	}
}

# Gluttonous (Host and Other Guests)
character_event = {
	id = TOG.205
	desc = EVTDESC_TOG_655
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_655

		tooltip = {
			opinion = {
				name = opinion_feast_scandal
				who = FROM
			}
		}
	}
}

# Lunatic (Guest)
character_event = {
	id = TOG.206
	desc = EVTDESC_TOG_656
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_diplomacy

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_656
		tooltip_info = lunatic

		liege = {
			show_scope_change = no

			if = {
				limit = { trait = lunatic }

				opinion = {
					name = opinion_feast_friend
					who = ROOT
				}
			}
			else = {
				opinion = {
					name = opinion_feast_scandal
					who = ROOT
				}
			}

			set_character_flag = feast_lunatic
			character_event = { id = TOG.207 }

			any_vassal = {
				show_scope_change = no

				limit = {
					has_character_flag = nerge_feast_vassal
					NOT = { character = ROOT }
				}

				if = {
					limit = { trait = lunatic }

					opinion = {
						name = opinion_feast_friend
						who = ROOT
					}
				}
				else = {
					opinion = {
						name = opinion_feast_scandal
						who = ROOT
					}
				}

				character_event = { id = TOG.207 }
			}
		}
	}
}

# Lunatic (Host and Other Guests)
character_event = {
	id = TOG.207
	desc = EVTDESC_TOG_657
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_657

		trigger = {
			NOT = { trait = lunatic }
		}

		tooltip = {
			opinion = {
				name = opinion_feast_scandal
				who = ROOT
			}
		}
	}

	option = {
		name = EVTOPTB_TOG_657
		tooltip_info = lunatic

		trigger = { trait = lunatic }

		tooltip = {
			opinion = {
				name = opinion_feast_friend
				who = ROOT
			}
		}
	}
}

# Lustful (Guest)
character_event = {
	id = TOG.208
	desc = EVTDESC_TOG_658
	picture = GFX_evt_brothel
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = {
			text = EVTOPTA_TOG_658
			trigger = { is_married = no }
		}
		name = {
			text = EVTOPTB_TOG_658
			trigger = { is_married = yes }
		}

		tooltip_info = lustful

		liege = {
			show_scope_change = no

			if = {
				limit = { trait = lustful }

				opinion = {
					name = opinion_lustful_buddy
					who = ROOT
				}
			}
			else = {
				opinion = {
					name = opinion_feast_scandal
					who = ROOT
				}
			}

			set_character_flag = feast_lustful
			character_event = { id = TOG.209 }

			any_vassal = {
				show_scope_change = no

				limit = {
					has_character_flag = nerge_feast_vassal
					NOT = { character = ROOT }
				}

				if = {
					limit = { trait = lustful }

					opinion = {
						name = opinion_lustful_buddy
						who = ROOT
					}
				}
				else = {
					opinion = {
						name = opinion_feast_scandal
						who = ROOT
					}
				}

				character_event = { id = TOG.209 }
			}
		}

		any_spouse = {
			show_scope_change = no

			opinion = {
				name = opinion_mad_as_hell
				who = ROOT
				years = 1
			}

			character_event = { id = TOG.209 }
		}
	}
}

# Lustful (Host and Other Guests)
character_event = {
	id = TOG.209
	desc = EVTDESC_TOG_659
	picture = GFX_evt_brothel
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_659

		trigger = {
			NOR = {
				trait = lustful
				is_married = FROM
			}
		}

		tooltip = {
			opinion = {
				name = opinion_feast_scandal
				who = FROM
			}
		}
	}

	option = {
		name = EVTOPTB_TOG_659
		tooltip_info = lustful

		trigger = {
			trait = lustful
			NOT = { is_married = FROM }
		}

		tooltip = {
			opinion = {
				name = opinion_lustful_buddy
				who = FROM
			}
		}
	}

	option = {
		name = EVTOPTC_TOG_659

		trigger = { is_married = FROM }

		tooltip = {
			opinion = {
				name = opinion_mad_as_hell
				who = FROM
				years = 1
			}
		}
	}
}

# Friendship Formed (Guest 1)
character_event = {
	id = TOG.211
	desc = EVTDESC_TOG_661
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			liege = {
				set_character_flag = feast_friendship

				random_vassal = {
					limit = {
						has_character_flag = nerge_feast_vassal

						opinion = {
							who = ROOT
							value >= 20
						}

						NOT = { character = ROOT }
					}

					save_event_target_as = other_vassal_guest
					character_event = { id = TOG.212 }
				}
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_661

		reverse_opinion = {
			name = opinion_feast_friend
			who = event_target:other_vassal_guest
		}

		opinion = {
			name = opinion_feast_friend
			who = event_target:other_vassal_guest
		}
	}
}

# Friendship Formed (Guest 2)
character_event = {
	id = TOG.212
	desc = EVTDESC_TOG_661
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	immediate = {
		# For localisation in event description
		FROM = {
			save_event_target_as = other_vassal_guest
		}
	}

	option = {
		name = EVTOPTA_TOG_661

		tooltip = {
			reverse_opinion = {
				name = opinion_feast_friend
				who = FROM
			}

			opinion = {
				name = opinion_feast_friend
				who = FROM
			}
		}
	}
}

# Homosexual lovers (Guest 1)
character_event = {
	id = TOG.214
	desc = EVTDESC_TOG_664
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy
	portrait = event_target:second_homosexual_guest

	is_triggered_only = yes

	immediate = {
		save_event_target_as = first_homosexual_guest

		hidden_effect = {
			liege = {
				set_character_flag = feast_homosexual

				random_vassal = {
					limit = {
						trait = homosexual
						same_sex = ROOT
						has_character_flag = nerge_feast_vassal

						opinion = {
							who = ROOT
							value >= 0
						}

						NOT = { character = ROOT }
					}

					save_event_target_as = second_homosexual_guest
					save_event_target_as = other_homosexual_guest # For loc
				}
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_664
		tooltip_info = homosexual

		event_target:second_homosexual_guest = {
			character_event = { id = TOG.215 }
		}

		add_lover = event_target:second_homosexual_guest

		random = {
			chance = 50

			custom_tooltip = { text = EVTTOOLTIP_TOG_669 }
		}
	}
}

# Homosexual lovers (Guest 2)
character_event = {
	id = TOG.215
	desc = EVTDESC_TOG_664
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy
	portrait = event_target:first_homosexual_guest

	is_triggered_only = yes

	immediate = {
		FROM = {
			save_event_target_as = other_homosexual_guest # For loc
		}
	}

	option = {
		name = EVTOPTA_TOG_664
		tooltip_info = homosexual

		random = {
			chance = 50

			custom_tooltip = {
				text = EVTTOOLTIP_TOG_669

				character_event = { id = TOG.219 }
				FROM = { character_event = { id = TOG.219 } }

				liege = {
					character_event = { id = TOG.220 }

					any_vassal = {
						limit = {
							has_character_flag = nerge_feast_vassal

							NOR = {
								character = event_target:first_homosexual_guest
								character = event_target:second_homosexual_guest
							}
						}

						character_event = { id = TOG.220 }
					}
				}
			}
		}

		tooltip = {
			add_lover = FROM
		}
	}
}

# Homosexual Caught
character_event = {
	id = TOG.219
	desc = EVTDESC_TOG_669
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_669

		tooltip = {
			liege = {
				show_scope_change = no

				if = {
					limit = { trait = homosexual }

					opinion = {
						name = opinion_homosexual_sympathy
						who = ROOT
					}
				}

				else = {
					opinion = {
						name = opinion_feast_scandal
						who = ROOT
					}
				}

				any_vassal = {
					show_scope_change = no

					limit = {
						has_character_flag = nerge_feast_vassal
						NOT = { character = ROOT }
					}

					if = {
						limit = { trait = homosexual }

						opinion = {
							name = opinion_homosexual_sympathy
							who = ROOT
						}
					}
					else = {
						opinion = {
							name = opinion_feast_scandal
							who = ROOT
						}
					}
				}
			}
		}
	}
}

# Homosexuals Caught (Host and Other Guests)
character_event = {
	id = TOG.220
	desc = EVTDESC_TOG_670
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_670

		trigger = {
			NOT = { trait = homosexual }
		}

		opinion = {
			name = opinion_feast_scandal
			who = event_target:first_homosexual_guest
		}

		opinion = {
			name = opinion_feast_scandal
			who = event_target:second_homosexual_guest
		}
	}

	option = {
		name = EVTOPTB_TOG_670
		tooltip_info = homosexual

		trigger = { trait = homosexual }

		opinion = {
			name = opinion_homosexual_sympathy
			who = event_target:first_homosexual_guest
		}

		opinion = {
			name = opinion_homosexual_sympathy
			who = event_target:second_homosexual_guest
		}
	}
}

###########################################
# Flag management						#
###########################################

# Safety catch - clears character flags and modifiers
character_event = {
	id = TOG.299

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		clr_character_flag = do_not_disturb
		clr_character_flag = khagan_holding_nerge
		clr_character_flag = vassal_holding_nerge
		clr_character_flag = khagan_finishing_nerge
		clr_character_flag = vassal_finishing_nerge
		clr_character_flag = feast_drunkard
		clr_character_flag = feast_gluttonous
		clr_character_flag = feast_friendship
		clr_character_flag = feast_lunatic
		clr_character_flag = feast_lustful
		clr_character_flag = feast_homosexual
	}
}