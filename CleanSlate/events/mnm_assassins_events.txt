###########################################
#                                         #
# M&M Assassins Society Events            #
#                                         #
# ID MNM.6000-MNM.6990                    #
#                                         #
###########################################

namespace = MNM

### BORROWING/DONATING MONEY###

# Borrowing money
letter_event = {
	id = MNM.6000
	desc = EVTDESC_MNM_6001
	border = GFX_event_letter_frame_religion
	portrait = event_target:grand_master

	is_triggered_only = yes # assassins_borrow_money, mnm_assassins_decisions.txt

	immediate = {
		set_variable = {
			which = assassins_debt
			value = 0
		}

		# Used for ai_will_do in payback decision
		set_variable = {
			which = twice_assassins_debt
			value = 2
		}

		add_character_modifier = {
			name = assassins_debt_modifier
			duration = -1
		}
		set_character_flag = block_payback

		society = {
			leader = { save_event_target_as = grand_master }
		}
	}

	# 50
	option = {
		name = EVTOPTA_MNM_6001

		trigger = {
			event_target:grand_master = {
				trigger_if = {
					limit = {
						ai = yes
						primary_title = { title = d_fedayeen }
					}
					wealth >= 50
				}
			}
		}

		wealth = 50

		hidden_effect = {
			change_variable = {
				which = assassins_debt
				value = 50
			}

			letter_event = {
				id = MNM.6006
				days = 1000
				random = 1000
			}

			event_target:grand_master = {
				if = {
					limit = {
						ai = yes
						primary_title = { title = d_fedayeen }
					}

					wealth = -50
				}
			}
		}

		ai_chance = {
			factor = 1

			trigger = {
				trigger_if = {
					limit = { has_society_currency_minor_trigger = yes }
					monthly_income < 10
				}
			}
		}
	}

	# 250
	option = {
		name = EVTOPTB_MNM_6001

		trigger = {
			event_target:grand_master = {
				trigger_if = {
					limit = {
						ai = yes
						primary_title = { title = d_fedayeen }
					}
					wealth >= 250
				}
			}

			has_society_currency_minor_trigger = yes
		}

		wealth = 250
		detract_society_currency_minor_effect = yes

		hidden_effect = {
			change_variable = {
				which = assassins_debt
				value = 250
			}

			letter_event = {
				id = MNM.6006
				days = 1000
				random = 1000
			}

			event_target:grand_master = {
				if = {
					limit = {
						ai = yes
						primary_title = { title = d_fedayeen }
					}
					wealth = -250
				}
			}
		}

		ai_chance = {
			factor = 1

			trigger = {
				monthly_income >= 10

				trigger_if = {
					limit = { has_society_currency_medium_trigger = yes }
					monthly_income < 20
				}
			}
		}
	}

	# 500
	option = {
		name = EVTOPTC_MNM_6001

		trigger = {
			event_target:grand_master = {
				trigger_if = {
					limit = {
						ai = yes
						primary_title = { title = d_fedayeen }
					}

					wealth >= 500
				}
			}

			has_society_currency_medium_trigger = yes
		}

		wealth = 500
		detract_society_currency_medium_effect = yes

		hidden_effect = {
			change_variable = {
				which = assassins_debt
				value = 500
			}

			letter_event = {
				id = MNM.6006
				days = 1000
				random = 1000
			}

			event_target:grand_master = {
				if = {
					limit = {
						ai = yes
						primary_title = { title = d_fedayeen }
					}
					wealth = -500
				}
			}
		}

		ai_chance = {
			factor = 1

			trigger = {
				monthly_income >= 20
			}
		}
	}

	# Opt out
	option = {
		name = EVTOPTD_MNM_6001

		hidden_effect = {
			remove_character_modifier = assassins_debt_modifier
		}

		ai_chance = { factor = 0 }
	}

	after = {
		clr_character_flag = block_payback

		if = {
			limit = { has_character_modifier = assassins_debt_modifier }

			multiply_variable = {
				which = twice_assassins_debt
				which = assassins_debt
			}
		}
		else = {
			set_variable = {
				which = assassins_debt
				value = 0
			}

			set_variable = {
				which = twice_assassins_debt
				value = 0
			}
		}
	}
}

# Transfer debt to heir
character_event = {
	id = MNM.6012

	hide_window = yes
	is_triggered_only = yes # on_death

	trigger = {
		has_character_modifier = assassins_debt_modifier
	}

	immediate = {
		current_heir = {
			add_character_modifier = {
				name = assassins_debt_modifier
				duration = -1
			}

			set_variable = {
				which = assassins_debt
				which = ROOT
			}

			set_variable = {
				which = twice_assassins_debt
				which = ROOT
			}

			letter_event = { id = MNM.6006 days = 50 }
		}
	}
}

# Donating
letter_event = {
	id = MNM.6005
	desc = EVTDESC_MNM_6005
	border = GFX_event_letter_frame_religion
	portrait = event_target:grand_master

	is_triggered_only = yes # assassins_donate, mnm_assassins_decisions.txt

	immediate = {
		society = {
			leader = { save_event_target_as = grand_master }
		}
	}

	option = {
		name = EXCELLENT

		wealth = -200
		add_society_currency_minor_effect = yes

		hidden_effect = {
			event_target:grand_master = {
				if = {
					limit = {
						ai = yes
						has_landed_title = d_fedayeen
					}

					wealth = 100
				}
			}
		}
	}
}

# Events for demands to pay back loan
letter_event = {
	id = MNM.6006
	border = GFX_event_letter_frame_religion
	portrait = event_target:grand_master

	desc = {
		text = EVTDESC_MNM_6006_A # Just gold
		trigger = {
			OR = {
				check_variable = { which = assassins_debt value == 50 }

				trigger_if = {
					limit = {
						check_variable = { which = assassins_debt value == 250 }
					}

					NAND = {
						event_target:child_offer = { always = yes }
						event_target:d_hashshashin_holder = { always = yes }
					}
				}
				trigger_else_if = {
					limit = {
						check_variable = { which = assassins_debt value == 500 }
					}

					NAND = {
						event_target:castle_offer = { always = yes }
						event_target:d_hashshashin_holder = { always = yes }
					}
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6006_B # Gold or child
		trigger = {
			check_variable = { which = assassins_debt value == 250 }
			event_target:child_offer = { always = yes }
			event_target:d_hashshashin_holder = { always = yes }
		}
	}
	desc = {
		text = EVTDESC_MNM_6006_C # Gold or castle
		trigger = {
			check_variable = { which = assassins_debt value == 500 }
			event_target:castle_offer = { always = yes }
			event_target:d_hashshashin_holder = { always = yes }
		}
	}

	is_triggered_only = yes

	trigger = {
		has_character_modifier = assassins_debt_modifier
		check_variable = { which = assassins_debt value >= 50 }
	}

	immediate = {
		random_child = {
			limit = {
				is_primary_heir = no
				is_adult = yes
				useless_character_trigger = no

				trigger_if = {
					limit = { is_female = yes }
					ROOT = { gender_equality_trigger = yes }
				}
			}
			save_event_target_as = child_offer
		}

		random_demesne_province = {
			limit = {
				is_capital = no
				has_empty_holding = yes
				owned_by = PREV
			}
			save_event_target_as = castle_offer
		}

		the_assassins = {
			leader = { save_event_target_as = grand_master }
		}

		d_fedayeen = {
			holder_scope = {
				if = {
					limit = { society_member_of = the_assassins }
					save_event_target_as = d_hashshashin_holder
				}
			}
		}
	}

	# Pay back
	option = {
		name = EVTOPTA_MNM_6006

		pay_back_assassins_effect = yes
		remove_assassins_debt_effect = yes
	}

	# Child
	option = {
		name = EVTOPTB_MNM_6006

		trigger = {
			check_variable = { which = assassins_debt value == 250 }
			event_target:child_offer = { always = yes }
			event_target:d_hashshashin_holder = { always = yes }
		}

		custom_tooltip = { text = EVTOPTB_MNM_6006_TOOLTIP }

		event_target:child_offer = {
			show_scope_change = no

			move_character = event_target:d_hashshashin_holder
			join_society = the_assassins

			hidden_effect = {
				clear_wealth = yes
				end_inaccessibility_effect = yes
				add_trait = disinherited
			}
		}

		remove_assassins_debt_effect = yes
	}

	# Castle
	option = {
		name = EVTOPTC_MNM_6006

		trigger = {
			check_variable = { which = assassins_debt value == 500 }
			event_target:castle_offer = { always = yes }
			event_target:d_hashshashin_holder = { always = yes }
		}

		wealth = -100

		event_target:castle_offer = {
			show_scope_change = no

			build_holding = {
				type = castle
				holder = event_target:d_hashshashin_holder
			}
		}

		remove_assassins_debt_effect = yes
	}

	# Nope
	option = {
		name = EVTOPTD_MNM_6006

		custom_tooltip = { text = EVTOPTD_MNM_6006_TOOLTIP }

		set_character_flag = assassins_refused_to_pay_debt
	}
}


### JOINING & RECRUITMENT EVENTS###

# Recruit: Does recruit approve of shia? For non-shia characters
character_event = {
	id = MNM.6020
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy

	desc = {
		text = EVTDESC_MNM_6020_A
		trigger = { NOT = { religion_group = muslim } }
	}
	desc = {
		text = EVTDESC_MNM_6020_B
		trigger = { religion_group = muslim }
	}

	is_triggered_only = yes # mnm_assassins_decisions.txt, MNM.10012

	immediate = {
		save_event_target_as = assassins_recruitee
		set_character_flag = ongoing_recruitment
	}

	# Acccepting of Shia
	option = {
		name = {
			text = EVTOPTA_MNM_6020_NOTMUSLIM
			trigger = { NOT = { religion_group = muslim } }
		}
		name = {
			text = EVTOPTA_MNM_6020_MUSLIM
			trigger = { religion_group = muslim }
		}

		reverse_opinion = {
			name = opinion_agreed_with_opinion
			who = event_target:assassins_recruiter
			years = 5
		}

		set_character_flag = approves_of_shia

		event_target:assassins_recruiter = {
			character_event = { id = MNM.6021 days = 3 }
		}

		ai_chance = {
			factor = 20

			trigger = {
				trigger_if = {
					limit = {
						NOT = { true_religion = shiite }
					}

					NOR = {
						trait = zealous
						controls_religion = yes
						capital_holding = { holding_type = temple }
					}
				}
			}

			mult_modifier = {
				factor = 1.5
				trait = cynical
			}
			mult_modifier = {
				factor = 1.5
				trait = trusting
			}
			mult_modifier = {
				factor = 1.5
				is_dumb_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				true_religion_group = muslim
			}
			mult_modifier = {
				factor = 100
				has_character_flag = was_trained_as_assassin_protege
			}
		}
	}

	# Disapproving of shia
	option = {
		name = {
			text = EVTOPTB_MNM_6020_NOTMUSLIM
			trigger = { NOT = { religion_group = muslim } }
		}
		name = {
			text = EVTOPTB_MNM_6020_MUSLIM
			trigger = { religion_group = muslim }
		}

		trigger = { NOT = { true_religion = shiite } }

		reverse_opinion = {
			name = opinion_disagreed_with_opinion
			who = event_target:assassins_recruiter
			years = 5
		}

		set_character_flag = disapproves_of_shia

		event_target:assassins_recruiter = {
			character_event = { id = MNM.6021 days = 3 }
		}

		ai_chance = {
			factor = 80

			mult_modifier = {
				factor = 1.5
				has_pious_trait_trigger = yes
			}
			mult_modifier = {
				factor = 2
				has_crusade_trait_trigger = yes
				NOT = { trait = mujahid }
			}
		}
	}
}

# Recruiter: True religion, or sympathetic?
character_event = {
	id = MNM.6021
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6021_A
		trigger = { event_target:assassins_recruitee = { has_character_flag = approves_of_shia } }
	}
	desc = {
		text = EVTDESC_MNM_6021_B
		trigger = {
			event_target:assassins_recruitee = { has_character_flag = disapproves_of_shia }

			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6021_c
		trigger = {
			event_target:assassins_recruitee = { has_character_flag = disapproves_of_shia }

			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}

	is_triggered_only = yes

	# Go ahead
	option = {
		name = EVTOPTA_MNM_6021

		trigger = { event_target:assassins_recruitee = { has_character_flag = approves_of_shia } }

		custom_tooltip = { text = EVTOPTA_MNM_6021_TOOLTIP }

		hidden_effect = {
			event_target:assassins_recruitee = {
				character_event = { id = MNM.6022 days = 14 }
				clr_character_flag = approves_of_shia
			}
		}
	}

	# Too risky, end
	option = {
		name = EVTOPTB_MNM_6021

		trigger = { event_target:assassins_recruitee = { has_character_flag = approves_of_shia } }

		custom_tooltip = { text = EVTOPTB_MNM_6021_TOOLTIP }

		hidden_effect = {
			event_target:assassins_recruitee = {
				clr_character_flag = approves_of_shia
				clr_character_flag = ongoing_recruitment
			}
		}

		ai_chance = { factor = 0 }
	}

	# Dislikes shia, end
	option = {
		name = EVTOPTC_MNM_6021

		trigger = { event_target:assassins_recruitee = { has_character_flag = disapproves_of_shia } }

		custom_tooltip = { text = EVTOPTB_MNM_6021_TOOLTIP }

		hidden_effect = {
			event_target:assassins_recruitee = {
				clr_character_flag = disapproves_of_shia
				clr_character_flag = ongoing_recruitment
			}
		}
	}
}

# Recruit: Talking about fighting for the faith, reaction
character_event = {
	id = MNM.6022
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_diplomacy

	desc = {
		text = EVTDESC_MNM_6022_A
		trigger = { event_target:assassins_recruiter = { NOT = { religion = shiite } } }
	}
	desc = {
		text = EVTDESC_MNM_6022_B
		trigger = { event_target:assassins_recruiter = { religion = shiite } }
	}

	is_triggered_only = yes # mnm_assassins_decisions.txt, MNM.10012, or event chain

	immediate = {
		save_event_target_as = assassins_recruitee
	}

	# Willing to join
	option = {
		name = EVTOPTA_MNM_6022

		reverse_opinion = {
			name = opinion_honorable
			who = event_target:assassins_recruiter
			years = 5
		}

		set_character_flag = willing_to_join

		event_target:assassins_recruiter = {
			character_event = { id = MNM.6023 days = 1 }
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 3
				trait = zealous
			}
			mult_modifier = {
				factor = 1.5
				trait = ambitious
			}
			mult_modifier = {
				factor = 1.5
				has_education_intrigue_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				has_lifestyle_intrigue_trigger = yes
			}
			mult_modifier = {
				factor = 1.5
				event_target:assassins_recruiter = { diplomacy >= 12 }
			}
			mult_modifier = {
				factor = 1.5
				event_target:assassins_recruiter = { intrigue >= 12 }
			}
			mult_modifier = {
				factor = 10
				has_character_flag = was_trained_as_assassin_protege
			}
		}
	}

	# Not willing to join
	option = {
		name = EVTOPTB_MNM_6022

		reverse_opinion = {
			name = opinion_lacks_conviction
			who = event_target:assassins_recruiter
			years = 5
		}

		set_character_flag = unwilling_to_join

		event_target:assassins_recruiter = {
			character_event = { id = MNM.6023 days = 1 }
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 0.5
				true_religion = shiite
			}
			mult_modifier = {
				factor = 2
				trait = craven
			}
			mult_modifier = {
				factor = 2
				trait = content
			}
			mult_modifier = {
				factor = 2
				trait = cynical
			}
			mult_modifier = {
				factor = 1.5
				event_target:assassins_recruiter = { diplomacy < 8 }
			}
			mult_modifier = {
				factor = 1.5
				event_target:assassins_recruiter = { intrigue < 8 }
			}
		}
	}
}

# Recruiter: Wants to join? Make the offer
character_event = {
	id = MNM.6023
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6023_A
		trigger = { event_target:assassins_recruitee = { has_character_flag = willing_to_join } }
	}
	desc = {
		text = EVTDESC_MNM_6023_B
		trigger = { event_target:assassins_recruitee = { has_character_flag = unwilling_to_join } }
	}

	is_triggered_only = yes

	# Pose the question
	option = {
		name = EVTOPTA_MNM_6023

		trigger = { event_target:assassins_recruitee = { has_character_flag = willing_to_join } }

		custom_tooltip = { text = EVTOPTA_MNM_6023_TOOLTIP }

		hidden_effect = {
			event_target:assassins_recruitee = {
				character_event = { id = MNM.6024 days = 1 }
				clr_character_flag = willing_to_join
			}
		}
	}

	# Too risky, end
	option = {
		name = EVTOPTB_MNM_6023

		trigger = { event_target:assassins_recruitee = { has_character_flag = willing_to_join } }

		custom_tooltip = { text = EVTOPTB_MNM_6021_TOOLTIP }

		hidden_effect = {
			event_target:assassins_recruitee = {
				clr_character_flag = willing_to_join
				clr_character_flag = ongoing_recruitment
			}
		}

		ai_chance = { factor = 0 }
	}

	# Not interested, end
	option = {
		name = EVTOPTC_MNM_6023

		trigger = { event_target:assassins_recruitee = { has_character_flag = unwilling_to_join } }

		custom_tooltip = { text = EVTOPTB_MNM_6021_TOOLTIP }

		hidden_effect = {
			event_target:assassins_recruitee = {
				clr_character_flag = unwilling_to_join
				clr_character_flag = ongoing_recruitment
			}
		}
	}
}

# Recruit: Offer to join, yes or no?
character_event = {
	id = MNM.6024
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6024_A
		trigger = {
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6024_B
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}

	is_triggered_only = yes

	# Yes
	option = {
		name = EVTOPTA_MNM_6024

		custom_tooltip = { text = EVTOPTA_MNM_6024_TOOLTIP }

		event_target:assassins_recruiter = {
			character_event = { id = MNM.6026 days = 1 }
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 100
				has_character_flag = was_trained_as_assassin_protege
			}
		}
	}

	# No
	option = {
		name = EVTOPTB_MNM_6024

		custom_tooltip = { text = EVTOPTB_MNM_6024_TOOLTIP }

		clr_character_flag = ongoing_recruitment

		event_target:assassins_recruiter = {
			character_event = { id = MNM.6025 days = 1 }
		}
	}
}

# Recruiter: Recruit said no
character_event = {
	id = MNM.6025
	desc = EVTDESC_MNM_6025
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_MNM_6025

		custom_tooltip = { text = EVTOPTB_MNM_6021_TOOLTIP }
	}
}

# Recruiter: Recruit said yes
character_event = {
	id = MNM.6026
	desc = EVTDESC_MNM_6026
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6026

		custom_tooltip = { text = EVTOPTA_MNM_6026_TOOLTIP }

		event_target:assassins_recruitee = {
			character_event = { id = MNM.6027 days = 1 }
		}
	}
}

# Recruit: Confirmation for recruit
character_event = {
	id = MNM.6027
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6027_A
		trigger = {
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6027_B
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6027

		custom_tooltip = { text = EVTOPTA_MNM_6027_TOOLTIP }

		character_event = {
			id = MNM.6028
			days = 14
			random = 7
		}
	}
}

# Recruit: Joining begins
character_event = {
	id = MNM.6028
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6028
		trigger = {
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6028_ALT
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}

	hide_from = yes
	is_triggered_only = yes

	immediate = {
		set_character_flag = assassins_attempted_recruitment
		shiite = { save_event_target_as = target_religion }

		the_assassins = {
			leader = { save_event_target_as = grand_master }
		}
	}

	# Allahu akbar!
	option = {
		name = {
			text = EVTOPTA_MNM_6028_B
			trigger = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_6028_ALT
			trigger = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}

		trigger = { true_religion = shiite }

		if = {
			limit = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}

			custom_tooltip = { text = EVTOPTA_MNM_6028_TOOLTIP }
		}

		character_event = { id = MNM.6029 days = 1 }
	}

	# I will convert
	option = {
		name = {
			text = EVTOPTB_MNM_6028
			trigger = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}
		}
		name = {
			text = EVTOPTB_MNM_6028_ALT
			trigger = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}

		trigger = { NOT = { true_religion = shiite } }

		if = {
			limit = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}

			custom_tooltip = { text = EVTOPTB_MNM_6028_TOOLTIP }
		}

		# Workaround for automatic usurpation of theocratic characters
		convert_religion_failsafe_effect = yes

		character_event = { id = MNM.6029 days = 1 }

		ai_chance = {
			factor = 20

			mult_modifier = {
				true_religion_group = muslim
				factor = 2
			}
			mult_modifier = {
				independent = yes
				factor = 2
			}
			mult_modifier = {
				trait = brave
				factor = 2
			}
			mult_modifier = {
				trait = honest
				factor = 2
			}
		}
	}

	# I will convert, secretly
	option = {
		name = {
			text = EVTOPTC_MNM_6028
			trigger = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}
		}
		name = {
			text = EVTOPTC_MNM_6028_ALT
			trigger = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}

		trigger = { NOT = { true_religion = shiite } }

		if = {
			limit = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}

			custom_tooltip = { text = EVTOPTC_MNM_6028_TOOLTIP }
		}

		hidden_effect = { clear_secret_religion = yes } # To hide spammy tooltips...
		set_secret_religion = shiite

		character_event = { id = MNM.6029 days = 1 }

		ai_chance = {
			factor = 80

			mult_modifier = {
				trait = craven
				factor = 2
			}
			mult_modifier = {
				trait = deceitful
				factor = 2
			}
		}
	}

	# Nope!
	option = {
		name = EVTOPTD_MNM_6028

		custom_tooltip = { text = EVTOPTD_MNM_6028_TOOLTIP }

		character_event = { id = MNM.6039 days = 3 } # Fail

		hidden_effect = {
			if = {
				limit = { event_target:assassins_recruiter = { always = yes } }

				event_target:assassins_recruiter = {
					set_character_flag = recruitment_fail
					letter_event = { id = MNM.6041 days = 5 }
				}
			}
		}

		ai_chance = { factor = 0 }
	}
}

# Recruit: Sign written declaration of loyalty to grand master
character_event = {
	id = MNM.6029
	desc = EVTDESC_MNM_6029
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	hide_from = yes
	is_triggered_only = yes

	# Yes
	option = {
		name = EVTOPTA_MNM_6029

		custom_tooltip = { text = EVTOPTA_MNM_6029_TOOLTIP }

		character_event = { id = MNM.6030 days = 1 }
	}

	# No
	option = {
		name = EVTOPTB_MNM_6029

		custom_tooltip = { text = EVTOPTB_MNM_6029_TOOLTIP }

		character_event = { id = MNM.6039 days = 3 } # Fail

		hidden_effect = {
			if = {
				limit = { event_target:assassins_recruiter = { always = yes } }

				event_target:assassins_recruiter = {
					set_character_flag = recruitment_fail
					letter_event = { id = MNM.6041 days = 5 }
				}
			}
		}

		ai_chance = { factor = 0 }
	}
}

# Recruit: Inductor will get in contact with you
character_event = {
	id = MNM.6030
	picture = GFX_evt_shadow
	desc = EVTDESC_MNM_6030
	border = GFX_event_normal_frame_intrigue

	hide_from = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6030

		custom_tooltip = { text = EVTOPTA_MNM_6030_TOOLTIP }

		letter_event = {
			id = MNM.6033
			months = 1
			random = 6
		}
	}
}


# Recruit: Invitation to stronghold
letter_event = {
	id = MNM.6033
	desc = EVTDESC_MNM_6033
	border = GFX_event_letter_frame_intrigue
	portrait = event_target:assassins_inductor

	is_triggered_only = yes

	immediate = {
		the_assassins = {
			if = {
				limit = {
					NOT = {
						any_society_member = { society_rank == 3 }
					}
				}

				leader = {
					create_character = {
						age = 30
						female = no
						random_traits = no
						dynasty = random
						trait = elusive_shadow
						trait = patient
						trait = zealous
						trait = scholar
						trait = chaste
						trait = temperate
					}

					new_character = {
						join_society = the_assassins

						society_rank_up = {
							rank = 2
							society = the_assassins
						}

						if = {
							limit = {
								NOT = { religion = shiite }
							}

							set_secret_religion = shiite
						}
					}
				}
			}

			random_society_member = {
				limit = { society_rank == 3 }
				save_event_target_as = assassins_inductor
			}
		}

		if = {
			limit = {
				d_fedayeen = {
					holder_scope = { society_member_of = the_assassins }
				}
			}

			d_fedayeen = {
				holder_scope = {
					capital_holding = { save_event_target_as = inductor_rendezvous }
				}
			}
		}
		else = {
			event_target:assassins_inductor = {
				host = {
					capital_holding = { save_event_target_as = inductor_rendezvous }
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_6033

		custom_tooltip = { text = EVTOPTA_MNM_6033_TOOLTIP }

		character_event = { id = MNM.6034 days = 14 }
	}
}

# Recruit: Welcome by GM
character_event = {
	id = MNM.6034
	desc = EVTDESC_MNM_6034
	picture = GFX_evt_magnificent_castle
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassins_inductor

	is_triggered_only = yes

	trigger = {
		event_target:assassins_inductor = { is_alive = yes }
	}

	fail_trigger_effect = {
		letter_event = { id = MNM.7030 days = 10 }
	}

	option = {
		name = EVTOPTA_MNM_6034

		character_event = { id = MNM.6035 days = 3 }
	}
}

# Recruit: Secret ritual
character_event = {
	id = MNM.6035
	desc = EVTDESC_MNM_6035
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassins_inductor

	is_triggered_only = yes

	trigger = {
		event_target:assassins_inductor = { is_alive = yes }
	}

	fail_trigger_effect = {
		letter_event = { id = MNM.7030 days = 10 }
	}

	option = {
		name = EVTOPTA_MNM_6035

		character_event = { id = MNM.6036 days = 5 }
	}
}

# Recruit: Kill to prove
character_event = {
	id = MNM.6036
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassins_inductor

	desc = {
		text = EVTDESC_MNM_6036_A
		trigger = { event_target:assassins_sacrifice = { always = yes } }
	}
	desc = {
		text = EVTDESC_MNM_6036_B
		trigger = { NOT = { event_target:assassins_sacrifice = { always = yes } } }
	}

	is_triggered_only = yes

	trigger = {
		event_target:assassins_inductor = { is_alive = yes }
	}

	fail_trigger_effect = {
		letter_event = { id = MNM.7030 days = 10 }
	}

	immediate = {
		random_courtier_or_vassal = {
			limit = {
				NOT = { society_member_of = the_assassins }
				is_adult = yes
				ai = yes
			}

			preferred_limit = {
				is_primary_heir = no

				OR = {
					is_lover = ROOT
					is_friend = ROOT
					is_close_relative = ROOT
				}

				trigger_if = {
					limit = { true_religion = shiite }
					trait = cynical
				}
			}

			preferred_limit = {
				NOT = { true_religion = shiite }
				trait = zealous
			}

			preferred_limit = {
				NOT = { true_religion = shiite }
			}

			preferred_limit = {
				religion = shiite
				trait = cynical
			}

			save_event_target_as = assassins_sacrifice
		}
	}

	# Do it
	option = {
		name = EVTOPTA_MNM_6036

		if = {
			limit = { event_target:assassins_sacrifice = { always = yes } }

			event_target:assassins_sacrifice = {
				show_scope_change = no

				death = {
					death_reason = death_murder_unknown
					killer = ROOT
				}
			}
		}
		else = {
			custom_tooltip = { text = EVTOPTA_MNM_6036_TOOLTIP }
		}

		character_event = { id = MNM.6037 days = 1 }
	}

	# Don't do it, fight your way out
	option = {
		name = EVTOPTB_MNM_6036
		custom_tooltip = { text = EVTOPTB_MNM_6036_TOOLTIP }

		hidden_effect = {
			random_list = {
				33 = { # Getaway
					set_character_flag = escape_successful

					if = { # Saves root for loc nouns
						limit = {
							NOT = { event_target:assassins_sacrifice = { always = yes } }
						}

						save_event_target_as = assassins_sacrifice
					}

					mult_modifier = {
						factor = 1.4
						attribute_diff = {
							character = event_target:assassins_inductor
							attribute = intrigue
							value >= 2
						}
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = {
							character = event_target:assassins_inductor
							attribute = intrigue
							value >= 4
						}
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = {
							character = event_target:assassins_inductor
							attribute = intrigue
							value >= 6
						}
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = {
							character = event_target:assassins_inductor
							value >= 10
						}
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = {
							character = event_target:assassins_inductor
							value >= 20
						}
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = {
							character = event_target:assassins_inductor
							value >= 30
						}
					}
				}

				33 = { set_character_flag = escape_injured } # Injured

				33 = { # Death
					set_character_flag = escape_death
					mult_modifier = {
						factor = 1.4
						attribute_diff = {
							character = event_target:assassins_inductor
							attribute = intrigue
							value <= -2
						}
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = {
							character = event_target:assassins_inductor
							attribute = intrigue
							value <= -4
						}
					}
					mult_modifier = {
						factor = 1.4
						attribute_diff = {
							character = event_target:assassins_inductor
							attribute = intrigue
							value <= -6
						}
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = {
							character = event_target:assassins_inductor
							value <= -10
						}
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = {
							character = event_target:assassins_inductor
							value <= -20
						}
					}
					mult_modifier = {
						factor = 1.4
						combat_rating_diff = {
							character = event_target:assassins_inductor
							value <= -30
						}
					}
				}
			}

			character_event = { id = MNM.6038 days = 1 }
		}

		ai_chance = { factor = 0 }
	}

	# Bribe
	option = {
		name = EVTOPTC_MNM_6036
		tooltip_info = diplomacy

		trigger = { diplomacy >= 12 }

		custom_tooltip = { text = EVTOPTC_MNM_6036_TOOLTIP }

		scaled_wealth = { value = -0.5 min = -100 }
		set_character_flag = escape_bribe
		character_event = { id = MNM.6038 days = 1 }

		ai_chance = { factor = 0 }
	}
}

# Recruit: You are a member!
character_event = {
	id = MNM.6037
	picture = GFX_evt_society_joining
	desc = EVTDESC_MNM_6037
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassins_inductor

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6037

		join_society = the_assassins

		hidden_effect = {
			if = {
				limit = { event_target:assassins_recruiter = { always = yes } }

				event_target:assassins_recruiter = {
					set_character_flag = recruitment_success
					letter_event = { id = MNM.6041 days = 5 }
				}
			}
		}
	}
}

# Recruit: You flee
character_event = {
	id = MNM.6038
	picture = GFX_evt_assassination
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassins_inductor

	desc = {
		text = EVTDESC_MNM_6038_A
		picture = GFX_evt_assassination
		trigger = { has_character_flag = escape_successful }
	}
	desc = {
		text = EVTDESC_MNM_6038_B
		picture = GFX_evt_bloody_man
		trigger = { has_character_flag = escape_injured }
	}
	desc = {
		text = EVTDESC_MNM_6038_C
		picture = GFX_evt_assassination
		trigger = { has_character_flag = escape_death }
	}
	desc = {
		text = EVTDESC_MNM_6038_D
		picture = GFX_evt_whispers
		trigger = { has_character_flag = escape_bribe }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { event_target:assassins_recruiter = { always = yes } }

			event_target:assassins_recruiter = {
				set_character_flag = recruitment_fail
				letter_event = { id = MNM.6041 days = 5 }
			}
		}

		clr_character_flag = ongoing_recruitment
	}

	# Escape successfully
	option = {
		name = EVTOPTA_MNM_6038

		trigger = { has_character_flag = escape_successful }

		custom_tooltip = { text = EVTOPTA_MNM_6038_TOOLTIP }

		clr_character_flag = escape_successful

		if = {
			limit = {
				NOT = { character = event_target:assassins_sacrifice }
			}

			add_friend = event_target:assassins_sacrifice
		}

		hidden_effect = {
			random_list = {
				33 = {
					event_target:assassins_inductor = {
						add_trait = wounded
					}

					set_character_flag = assassins_target_assaulted_member
				}

				33 = {
					event_target:assassins_inductor = {
						add_maimed_trait_effect = yes
					}

					set_character_flag = assassins_target_assaulted_member
				}

				33 = {
					event_target:assassins_inductor = {
						death = {
							death_reason = death_murder_unknown
							killer = ROOT
						}
					}

					set_character_flag = assassins_target_killed_member
				}
			}
		}
	}

	# Escaped but got injured
	option = {
		name = EVTOPTB_MNM_6038

		trigger = { has_character_flag = escape_injured }

		custom_tooltip = { text = EVTOPTA_MNM_6038_TOOLTIP }

		clr_character_flag = escape_injured
		add_maimed_trait_effect = yes

		if = {
			limit = { event_target:assassins_sacrifice = { always = yes } }

			event_target:assassins_sacrifice = {
				show_scope_change = no

				death = {
					death_reason = death_murder_unknown
					killer = event_target:assassins_inductor
				}
			}
		}

		hidden_effect = {
			random_list = {
				33 = {
					event_target:assassins_inductor = {
						add_trait = wounded
					}

					set_character_flag = assassins_target_assaulted_member
				}

				33 = {
					event_target:assassins_inductor = {
						add_maimed_trait_effect = yes
					}

					set_character_flag = assassins_target_assaulted_member
				}

				33 = {
					event_target:assassins_inductor = {
						death = {
							death_reason = death_murder_unknown
							killer = ROOT
						}
					}

					set_character_flag = assassins_target_killed_member
				}
			}
		}
	}

	# Escaped but died
	option = {
		name = EVTOPTC_MNM_6038

		trigger = { has_character_flag = escape_death }

		death = {
			death_reason = death_murder_unknown
			killer = event_target:assassins_inductor
		}

		if = {
			limit = { event_target:assassins_sacrifice = { always = yes } }

			event_target:assassins_sacrifice = {
				show_scope_change = no

				death = {
					death_reason = death_murder_unknown
					killer = event_target:assassins_inductor
				}
			}
		}
	}

	# Bribe
	option = {
		name = EVTOPTD_MNM_6038

		trigger = { has_character_flag = escape_bribe }

		custom_tooltip = { text = EVTOPTA_MNM_6038_TOOLTIP }

		clr_character_flag = escape_bribe
	}
}

# Recruit: Opt out failstate
character_event = {
	id = MNM.6039
	picture = GFX_evt_shadow
	desc = EVTDESC_MNM_6039
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_MNM_6039

		clr_character_flag = ongoing_recruitment
	}
}

# Recruiter: Outcome of recruitment for recruiter (if there is one)
letter_event = {
	id = MNM.6041
	border = GFX_event_letter_frame_religion
	portrait = event_target:grand_master

	desc = {
		text = EVTDESC_MNM_6041_A
		trigger = { has_character_flag = recruitment_success }
	}
	desc = {
		text = EVTDESC_MNM_6041_B
		trigger = { has_character_flag = recruitment_fail }
	}

	is_triggered_only = yes

	option = {
		name = EXCELLENT

		trigger = { has_character_flag = recruitment_success }

		clr_character_flag = recruitment_success
		add_society_currency_minor_effect = yes
	}

	option = {
		name = CURSES

		trigger = { has_character_flag = recruitment_fail }

		clr_character_flag = recruitment_fail
	}
}

### MURDER PLOT EVENTS (start on 6100)

# Plotter sees an opportunity - assassinate
character_event = {
	id = MNM.6100
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6100_A
		picture = GFX_evt_market_byzantine
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6100_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6100_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6100_D
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6100_E
		picture = GFX_evt_magnificent_castle
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6100_F
		picture = GFX_evt_state_diplomacy
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6100_E
		picture = GFX_evt_magnificent_castle
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_part_of_plot = yes
	is_in_society = yes
	only_capable = yes
	prisoner = no

	trigger = {
		society_member_of = the_assassins

		OR = {
			has_plot = plot_kill_character
			has_plot = plot_kill_spouse
		}

		plot_target_char = {
			is_murder_quest_target_of_root_trigger = yes

			OR = {
				at_location = ROOT
				ROOT = { is_inaccessible_trigger = no }
			}
		}

		is_plot_active = no
	}

	mean_time_to_happen = {
		months = 4000

		mult_modifier = {
			factor = 2
			ai = yes
		}
		mult_modifier = {
			factor = 0.3
			society_rank = {
				society = the_assassins
				rank == 3
			}
		}
		mult_modifier = {
			factor = 0.6
			society_rank = {
				society = the_assassins
				rank == 2
			}
		}
		mult_modifier = {
			factor = 1.5
			plot_target_char = { is_inaccessible_trigger = yes }
		}
		mult_modifier = {
			factor = 1.5
			plot_target_char = { prisoner = yes }
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.1
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.2
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.3
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.4
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.5
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.6
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.7
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.8
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.9
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 1
		}
		mult_modifier = {
			factor = 0.3
			plot_power >= 1.5
		}
		mult_modifier = {
			factor = 0.3
			plot_power >= 2
		}
	}

	immediate = {
		plot_target_char = { save_event_target_as = plot_target }
		save_event_target_as = assassin_plot_owner

		# Set the assassination method
		event_target:plot_target = {
			if = {
				limit = { prisoner = yes }
				set_character_flag = assassination_in_prison
			}
			else_if = {
				limit = { trait = in_hiding }
				set_character_flag = assassination_in_hiding
			}
			else_if = {
				limit = { in_seclusion = yes }
				set_character_flag = assassination_in_seclusion
			}
			else_if = {
				limit = { is_incapable = yes }
				set_character_flag = assassination_incapable
			}
			else = {
				random_list = {
					40 = { set_character_flag = assassination_after_temple }
					30 = { set_character_flag = assassination_during_feast }
					30 = { set_character_flag = assassination_while_asleep }
				}
			}
		}

		the_assassins = {
			leader = {
				save_event_target_as = grand_master # for loc # TODO: is this actually used?
			}
		}
	}

	# Do it
	option = {
		name = EVTOPTA_MNM_6100

		custom_tooltip = { text = EVTOPTA_MNM_6100_TOOLTIP }

		event_target:plot_target = {
			character_event = { id = MNM.6104 days = 7 }
		}

		activate_plot = yes
	}

	# Wait
	option = {
		name = EVTOPTB_MNM_6100

		custom_tooltip = { text = EVTOPTB_MNM_6100_TOOLTIP }

		event_target:plot_target = {
			character_event = { id = MNM.6120 } # Clears flags
		}

		ai_chance = { factor = 0 }
	}
}

# Plot backer sees an opportunity - assassinate
character_event = {
	id = MNM.6101
	picture = GFX_evt_market_byzantine
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6100_A
		picture = GFX_evt_market_byzantine
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6100_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6100_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6100_D
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6100_E
		picture = GFX_evt_magnificent_castle
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6100_F
		picture = GFX_evt_state_diplomacy
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6100_E
		picture = GFX_evt_magnificent_castle
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_part_of_plot = yes
	only_capable = yes
	prisoner = no

	trigger = {
		society_member_of = the_assassins

		any_backed_character = {
			plot_target_char = { is_murder_quest_target_of_prev_trigger = yes }

			society_rank = {
				rank == 2
				society = the_assassins
			}

			OR = {
				has_plot = plot_kill_character
				has_plot = plot_kill_spouse
			}

			is_plot_active = no
		}
	}

	mean_time_to_happen = {
		months = 4000

		mult_modifier = {
			factor = 0.3

			society_rank = {
				society = the_assassins
				rank == 3
			}
		}

		mult_modifier = {
			factor = 0.6

			society_rank = {
				society = the_assassins
				rank == 2
			}
		}

		mult_modifier = {
			factor = 1.5

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
					is_inaccessible_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 1.5

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
					prisoner = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.1
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.2
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.3
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.4
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.5
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.6
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.7
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.8
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 0.9
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.6

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 1
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.3

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 1.5
				is_plot_active = no
			}
		}

		mult_modifier = {
			factor = 0.3

			any_backed_character = {
				plot_target_char = {
					is_murder_quest_target_of_prev_trigger = yes
				}

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				plot_power >= 2
				is_plot_active = no
			}
		}
	}

	immediate = {
		any_backed_character = {
			limit = {
				plot_target_char = { is_murder_quest_target_of_prev_trigger = yes }

				society_rank = {
					rank == 2
					society = the_assassins
				}

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}

				is_plot_active = no
			}

			save_event_target_as = assassin_plot_owner
			plot_target_char = { save_event_target_as = plot_target }
		}

		# Set the assassination method
		event_target:plot_target = {
			if = {
				limit = { prisoner = yes }
				set_character_flag = assassination_in_prison
			}
			else_if = {
				limit = { trait = in_hiding }
				set_character_flag = assassination_in_hiding
			}
			else_if = {
				limit = { in_seclusion = yes }
				set_character_flag = assassination_in_seclusion
			}
			else_if = {
				limit = { is_incapable = yes }
				set_character_flag = assassination_incapable
			}
			else = {
				random_list = {
					40 = { set_character_flag = assassination_after_temple }
					30 = { set_character_flag = assassination_during_feast }
					30 = { set_character_flag = assassination_while_asleep }
				}
			}
		}

		the_assassins = {
			leader = {
				save_event_target_as = grand_master # for loc # CleanSlate: is this actually used?
			}
		}
	}

	# Do it
	option = {
		name = EVTOPTA_MNM_6101

		custom_tooltip = { text = EVTOPTA_MNM_6100_TOOLTIP }

		activate_plot = yes

		event_target:plot_target = {
			character_event = { id = MNM.6104 days = 7 }
		}

		event_target:assassin_plot_owner = {
			letter_event = { id = MNM.6102 }
		}
	}
}

# Plot owner recieves a letter informing them about the coming attempt
letter_event = {
	id = MNM.6102
	border = GFX_event_letter_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6102_A
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6102_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6102_C
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6102_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6102_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6102_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6102_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes

	ai = no

	option = {
		name = EXCELLENT

		custom_tooltip = { text = EVTOPTA_MNM_6102_TOOLTIP }
	}
}


# Assassination attempt
character_event = {
	id = MNM.6104
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes

	desc = {
		text = EVTDESC_MNM_6104_A
		picture = GFX_evt_market_byzantine
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6104_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6104_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6104_D
		picture = GFX_evt_state_diplomacy
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6104_E
		picture = GFX_evt_magnificent_castle
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6104_F
		picture = GFX_evt_state_diplomacy
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6104_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	immediate = {
		FROM = { save_event_target_as = assassin }

		random_courtier = {
			limit = {
				at_location = ROOT
				prisoner = no
				is_adult = yes
			}
			save_event_target_as = conversationalist
		}

		if = {
			limit = {
				NOT = { event_target:conversationalist = { always = yes } }
			}

			random_realm_character = {
				limit = { is_lowborn = yes }
				save_event_target_as = conversationalist
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_6104

		hidden_effect = {
			random_list = {
				60 = { # Die
					random_list = {
						75 = { # Not discovered
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue >= 12 }
							}
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue >= 15 }
							}

							character_event = { id = MNM.6105 days = 3 }
						}
						25 = { # Discovered
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue < 8 }
							}
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue < 5 }
							}

							character_event = { id = MNM.6108 days = 3 }

							event_target:assassin_plot_owner = { character_event = { id = 10 } }

							if = {
								limit = {
									NOT = { event_target:assassin = { character = event_target:assassin_plot_owner } }
								}

								event_target:assassin = { character_event = { id = 10 } }
							}
						}
					}

					mult_modifier = {
						factor = 1.75
						event_target:assassin = {
							society_rank = {
								society = the_assassins
								rank == 2
							}
						}
					}
					mult_modifier = {
						factor = 3
						event_target:assassin = {
							society_rank = {
								society = the_assassins
								rank == 3
							}
						}
					}
					mult_modifier = {
						factor = 5
						event_target:assassin = {
							society_rank = {
								society = the_assassins
								rank == 4
							}
						}
					}
					mult_modifier = {
						factor = 3
						is_incapable = yes
					}
					mult_modifier = {
						factor = 2
						prisoner = yes
					}
					mult_modifier = {
						factor = 1.3
						attribute_diff = {
							character = event_target:assassin
							attribute = intrigue
							value <= -2
						}
					}
					mult_modifier = {
						factor = 1.3
						attribute_diff = {
							character = event_target:assassin
							attribute = intrigue
							value <= -4
						}
					}
					mult_modifier = {
						factor = 1.3
						attribute_diff = {
							character = event_target:assassin
							attribute = intrigue
							value <= -6
						}
					}
					mult_modifier = {
						factor = 1.3
						combat_rating_diff = { character = event_target:assassin value <= -10 }
					}
					mult_modifier = {
						factor = 1.3
						combat_rating_diff = { character = event_target:assassin value <= -20 }
					}
					mult_modifier = {
						factor = 1.3
						combat_rating_diff = { character = event_target:assassin value <= -30 }
					}
				}
				40 = { # Survive
					random_list = {
						50 = { # Not discovered
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue >= 12 }
							}
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue >= 15 }
							}

							character_event = { id = MNM.6111 days = 3 }
						}
						25 = { # Discovered and wounded
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue < 8 }
							}
							mult_modifier = {
								factor = 1.5
								event_target:assassin = { intrigue < 5 }
							}

							character_event = { id = MNM.6114 days = 3 }

							event_target:assassin_plot_owner = { character_event = { id = 11 } }

							if = {
								limit = {
									NOT = { event_target:assassin = { character = event_target:assassin_plot_owner } }
								}

								event_target:assassin = { character_event = { id = 11 } }
							}
						}
						25 = { # Killed assailant
							mult_modifier = {
								factor = 1.3
								combat_rating_diff = { character = event_target:assassin value >= 10 }
							}
							mult_modifier = {
								factor = 1.3
								combat_rating_diff = { character = event_target:assassin value >= 20 }
							}
							mult_modifier = {
								factor = 1.3
								combat_rating_diff = { character = event_target:assassin value >= 30 }
							}

							character_event = { id = MNM.6117 days = 3 }

							event_target:assassin_plot_owner = { character_event = { id = 11 } }

							if = {
								limit = {
									NOT = { event_target:assassin = { character = event_target:assassin_plot_owner } }
								}

								event_target:assassin = { character_event = { id = 11 } }
							}
						}
					}

					mult_modifier = {
						factor = 1.3
						attribute_diff = {
							character = event_target:assassin
							attribute = intrigue
							value >= 2
						}
					}
					mult_modifier = {
						factor = 1.3
						attribute_diff = {
							character = event_target:assassin
							attribute = intrigue
							value >= 4
						}
					}
					mult_modifier = {
						factor = 1.3
						attribute_diff = {
							character = event_target:assassin
							attribute = intrigue
							value >= 6
						}
					}
					mult_modifier = {
						factor = 1.3
						combat_rating_diff = { character = event_target:assassin value >= 10 }
					}
					mult_modifier = {
						factor = 1.3
						combat_rating_diff = { character = event_target:assassin value >= 20 }
					}
					mult_modifier = {
						factor = 1.3
						combat_rating_diff = { character = event_target:assassin value >= 30 }
					}
				}
			}
		}
	}
}

# Plot target dies, undiscovered
character_event = {
	id = MNM.6105
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6105_A
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6105_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6105_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6105_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6105_E
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6105_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6105_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_MNM_6105

		tooltip = {
			death = {
				death_reason = death_murder_unknown_hashashin
				killer = event_target:assassin_plot_owner
			}
		}

		event_target:assassin = { character_event = { id = MNM.6106 } }
	}
}

# Assassin notified of "Plot target dies, undiscovered"
character_event = {
	id = MNM.6106
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6106_A
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6106_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6106_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6106_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6106_E
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6106_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6106_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6106

		FROM = {
			show_scope_change = no

			death = {
				death_reason = death_murder_unknown_hashashin
				killer = event_target:assassin_plot_owner
			}
		}

		# If quest holder, clear quest and reward
		if = {
			limit = {
				has_quest = quest_the_assassins_assassination
				quest_target = { character = event_target:plot_target }
			}

			clr_quest = quest_the_assassins_assassination
			sound_effect = assassins_assassinate_character

			if = {
				limit = { event_target:plot_target = { higher_real_tier_than = DUKE } }
				add_society_currency_major_effect = yes
			}
			else_if = {
				limit = { event_target:plot_target = { real_tier = DUKE } }
				add_society_currency_medium_effect = yes
			}
			else = {
				add_society_currency_minor_effect = yes
			}
		}

		# If this is not your plot, give standard amount and notifiy plot holder
		if = {
			limit = {
				NOT = { event_target:assassin_plot_owner = { character = event_target:assassin } }
			}

			add_society_currency_minor_effect = yes

			event_target:assassin_plot_owner = {
				letter_event = { id = MNM.6107 }
			}
		}

		if = {
			limit = {
				event_target:plot_target = { has_character_flag = assassins_target_marked_for_death }
			}

			the_assassins = {
				leader = {
					letter_event = { id = MNM.6843 }
				}
			}
		}

		event_target:plot_target = {
			character_event = { id = MNM.6120 days = 1 } # Clears flags
		}
	}
}

# Plot owner notified "Plot target dies, undiscovered"
letter_event = {
	id = MNM.6107
	desc = EVTDESC_MNM_6107
	border = GFX_event_letter_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EXCELLENT

		if = {
			limit = {
				has_quest = quest_the_assassins_assassination
				quest_target = { character = event_target:plot_target }
			}

			clr_quest = quest_the_assassins_assassination
			sound_effect = assassins_assassinate_character

			if = {
				limit = { event_target:plot_target = { higher_real_tier_than = DUKE } }
				add_society_currency_major_effect = yes
			}
			else_if = {
				limit = { event_target:plot_target = { real_tier = DUKE } }
				add_society_currency_medium_effect = yes
			}
			else = {
				add_society_currency_minor_effect = yes
			}
		}
	}
}

# Plot target dies, discovered
character_event = {
	id = MNM.6108
	picture = GFX_evt_assassination
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6108_A
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6108_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6108_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6108_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6108_E
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6108_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6108_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_MNM_6105

		tooltip = {
			death = {
				death_reason = death_murder_hashashin
				killer = event_target:assassin_plot_owner
			}
		}

		event_target:assassin = { character_event = { id = MNM.6109 } }
	}
}

# Assassin notified of "Plot target dies, discovered"
character_event = {
	id = MNM.6109
	picture = GFX_evt_assassination
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6109_A
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6109_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6109_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6109_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6109_E
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6109_D
		picture = GFX_evt_assassination
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6109_C
		picture = GFX_evt_shadow
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6109

		custom_tooltip = { text = EVTOPTA_MNM_6109_TOOLTIP }

		FROM = {
			show_scope_change = no

			death = {
				death_reason = death_murder_hashashin
				killer = event_target:assassin
			}
		}

		# If quest holder, clear quest and reward
		if = {
			limit = {
				has_quest = quest_the_assassins_assassination
				quest_target = { character = event_target:plot_target }
			}

			clr_quest = quest_the_assassins_assassination
			sound_effect = assassins_assassinate_character

			if = {
				limit = { event_target:plot_target = { higher_real_tier_than = DUKE } }
				add_society_currency_major_effect = yes
			}
			else_if = {
				limit = { event_target:plot_target = { real_tier = DUKE } }
				add_society_currency_medium_effect = yes
			}
			else = {
				add_society_currency_minor_effect = yes
			}
		}

		# If this is not your plot, give standard amount and notifiy plot holder
		if = {
			limit = {
				NOT = { event_target:assassin_plot_owner = { character = event_target:assassin } }
			}

			add_society_currency_minor_effect = yes

			event_target:assassin_plot_owner = {
				letter_event = { id = MNM.6110 }
			}
		}

		if = {
			limit = {
				event_target:plot_target = { has_character_flag = assassins_target_marked_for_death }
			}

			the_assassins = {
				leader = {
					letter_event = { id = MNM.6843 }
				}
			}
		}

		event_target:plot_target = {
			character_event = { id = MNM.6120 days = 1 } # Clears flags
		}
	}
}

# Plot owner notified "Plot target dies, discovered"
letter_event = {
	id = MNM.6110
	border = GFX_event_letter_frame_intrigue
	desc = EVTDESC_MNM_6110

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6110

		custom_tooltip = { text = EVTOPTA_MNM_6110_TOOLTIP }

		# If quest holder, clear quest and reward
		if = {
			limit = {
				has_quest = quest_the_assassins_assassination
				quest_target = { character = event_target:plot_target }
			}

			clr_quest = quest_the_assassins_assassination
			sound_effect = assassins_assassinate_character

			if = {
				limit = { event_target:plot_target = { higher_real_tier_than = DUKE } }
				add_society_currency_major_effect = yes
			}
			else_if = {
				limit = { event_target:plot_target = { real_tier = DUKE } }
				add_society_currency_medium_effect = yes
			}
			else = {
				add_society_currency_minor_effect = yes
			}
		}
	}
}

# Plot target survives, undiscovered
character_event = {
	id = MNM.6111
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6111_A
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6111_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6111_C
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6111_D
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6111_E
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6111_D
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6111_C
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_MNM_6111

		custom_tooltip = { text = EVTOPTA_MNM_6111_TOOLTIP }

		event_target:assassin = {
			character_event = { id = MNM.6112 }
		}
	}
}

# Assassin notified of "Plot target survives, undiscovered"
character_event = {
	id = MNM.6112
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6112_A
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6112_B
		picture = GFX_evt_into_the_dungeon
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6112_C
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6112_D
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6112_E
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6112_D
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6112_C
		picture = GFX_evt_melee
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { character = event_target:assassin_plot_owner }
			activate_plot = no
		}
	}

	option = {
		name = EVTOPTA_MNM_6112

		custom_tooltip = { text = EVTOPTA_MNM_6112_TOOLTIP }

		if = {
			limit = {
				NOT = { event_target:assassin_plot_owner = { character = event_target:assassin } }
			}

			event_target:assassin_plot_owner = { letter_event = { id = MNM.6113 } }
		}

		event_target:plot_target = {
			character_event = { id = MNM.6120 days = 1 } # Clears flags
		}
	}
}

# Plot owner notified "Plot target survives, undiscovered"
letter_event = {
	id = MNM.6113
	border = GFX_event_letter_frame_intrigue
	desc = EVTDESC_MNM_6113

	is_triggered_only = yes

	immediate = {
		activate_plot = no

		# For localisation
		FROM = {
			save_event_target_as = event_target_1_insulter
		}
	}

	option = {
		name = EVTOPTA_MNM_6113

		custom_tooltip = { text = EVTOPTA_MNM_6113_TOOLTIP }
	}
}

# Plot target survives, wounded
character_event = {
	id = MNM.6114
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6114_A
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6114_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6114_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6114_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6114_E
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6114_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6114_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}


	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6114

		custom_tooltip = { text = EVTOPTA_MNM_6111_TOOLTIP }

		random_list = {
			70 = {
				event_target:assassin = {
					tooltip = { add_trait = wounded }
					set_character_flag = assassin_wounded
				}
			}

			30 = {
				event_target:assassin = {
					tooltip = { add_maimed_trait_effect = yes }
					set_character_flag = assassin_maimed
				}
			}
		}

		event_target:assassin = {
			character_event = { id = MNM.6115 }
		}
	}
}

# Assassin notified of "Plot target survives, wounded"
character_event = {
	id = MNM.6115
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6115_A
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6115_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6115_C
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6115_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6115_E
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6115_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6115_C
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { character = event_target:assassin_plot_owner }
			activate_plot = no
		}
	}

	option = {
		name = CURSES

		custom_tooltip = { text = EVTOPTA_MNM_6109_TOOLTIP }

		if = {
			limit = { has_character_flag = assassin_wounded }
			add_trait_silently_wounded_effect = yes
			clr_character_flag = assassin_wounded
		}
		else = {
			add_maimed_trait_effect = yes
			clr_character_flag = assassin_maimed
		}

		if = {
			limit = {
				NOT = { event_target:assassin_plot_owner = { character = event_target:assassin } }
			}

			event_target:assassin_plot_owner = { letter_event = { id = MNM.6116 } }
		}

		event_target:plot_target = {
			character_event = { id = MNM.6120 days = 1 } # Clears flags
		}
	}
}

# Plot owner notified "Plot target survives, wounded"
letter_event = {
	id = MNM.6116
	border = GFX_event_letter_frame_intrigue
	desc = EVTDESC_MNM_6116

	is_triggered_only = yes

	immediate = {
		activate_plot = no

		# For localisation
		save_event_target_as = event_target_1_insulter
	}

	option = {
		name = EVTOPTA_MNM_6116

		custom_tooltip = { text = EVTOPTA_MNM_6116_TOOLTIP }
	}
}

# Plot target survives, killed
character_event = {
	id = MNM.6117
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6117_A
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6117_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6117_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6117_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6117_E
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6117_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6117_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6117

		custom_tooltip = { text = EVTOPTA_MNM_6111_TOOLTIP }

		tooltip = {
			event_target:assassin = {
				show_scope_change = no

				death = {
					death_reason = death_battle
					killer = event_target:plot_target
				}
			}
		}

		event_target:assassin = {
			character_event = { id = MNM.6118 }
		}
	}
}

# Assassin notified of "Plot target survives, killed"
character_event = {
	id = MNM.6118
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6118_A
		trigger = { event_target:plot_target = { has_character_flag = assassination_after_temple } }
	}
	desc = {
		text = EVTDESC_MNM_6118_B
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_prison } }
	}
	desc = {
		text = EVTDESC_MNM_6118_C
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_hiding } }
	}
	desc = {
		text = EVTDESC_MNM_6118_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_in_seclusion } }
	}
	desc = {
		text = EVTDESC_MNM_6118_E
		trigger = { event_target:plot_target = { has_character_flag = assassination_incapable } }
	}
	desc = {
		text = EVTDESC_MNM_6118_D
		trigger = { event_target:plot_target = { has_character_flag = assassination_during_feast } }
	}
	desc = {
		text = EVTDESC_MNM_6118_C
		trigger = { event_target:plot_target = { has_character_flag = assassination_while_asleep } }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { character = event_target:assassin_plot_owner }
			activate_plot = no
		}
	}

	option = {
		name = EVTOPTA_MNM_6105

		if = {
			limit = {
				NOT = { event_target:assassin_plot_owner = { character = event_target:assassin } }
			}

			event_target:assassin_plot_owner = { letter_event = { id = MNM.6119 } }
		}

		event_target:plot_target = {
			character_event = { id = MNM.6120 days = 1 } # Clears flags
		}

		death = {
			death_reason = death_battle
			killer = event_target:plot_target
		}
	}
}

# Plot owner notified "Plot target survives, killed"
letter_event = {
	id = MNM.6119
	desc = EVTDESC_MNM_6119
	border = GFX_event_letter_frame_intrigue

	is_triggered_only = yes

	immediate = {
		activate_plot = no
	}

	option = {
		name = CURSES
	}
}

# Clean-up for target
character_event = {
	id = MNM.6120

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		clr_character_flag = assassination_after_temple
		clr_character_flag = assassination_in_prison
		clr_character_flag = assassination_in_hiding
		clr_character_flag = assassination_in_seclusion
		clr_character_flag = assassination_incapable
		clr_character_flag = assassination_during_feast
		clr_character_flag = assassination_while_asleep
	}
}

### MISSIONS### (start on 6198)

# CleanSlate: Offset to avoid firing events on same day as random society events. Previously occured between tombola and quest event.
character_event = {
	id = MNM.6198

	hide_window = yes
	is_triggered_only = yes # on_society_bi_yearly_pulse

	immediate = {
		character_event = {
			id = MNM.6199
			days = 7
			random = 7
		}
	}
}

# Mission tombola
character_event = {
	id = MNM.6199

	hide_window = yes
	is_triggered_only = yes

	only_capable = yes
	prisoner = no

	trigger = {
		society_member_of = the_assassins
		is_society_grandmaster = no
		has_any_quest = no
		is_inaccessible_trigger = no
		NOT = { has_character_modifier = quest_cooldown_timer }
	}

	immediate = {
		the_assassins = {
			leader = { save_event_target_as = grand_master }
		}

		random_list = {
			15 = {
				character_event = { id = MNM.6200 } # Assassination
			}

			20 = {
				trigger = {
					ai = no
					religion = shiite

					any_realm_province = {
						NOT = { religion = shiite }
						held_under_PREV = yes
					}
				}

				society_quest_event = { id = MNM.6204 } # Convert a specific province
			}

			15 = {
				trigger = {
					any_character = {
						is_offmap_ruler = no
						is_within_diplo_range = ROOT
						is_adult = yes
						has_character_flag = assassins_refused_to_pay_debt
						is_quest_target = no

						OR = {
							has_character_modifier = borrowed_from_assassins
							has_character_modifier = assassins_debt_modifier
						}
					}
				}

				society_quest_event = { id = MNM.6207 } # Collect debt
			}

			10 = {
				trigger = {
					ai = no
					independent = yes
					religion = shiite

					any_neighbor_independent_ruler = {
						NOT = { religion = shiite }

						any_realm_province = {
							held_under_PREV = yes

							owner = {
								NOT = { religion = shiite }
							}

							any_province_holding = {
								holder_scope = { NOT = { religion = shiite } }

								OR = {
									holding_type = temple
									holding_type = castle
								}
							}
						}
					}
				}

				society_quest_event = { id = MNM.6221 } # Occupy infidel holding
			}

			5 = {
				society_quest_event = { id = MNM.6249 } # Train protege
			}

			50 = { # AI bypasses missions at times
				trigger = { ai = yes }

				random_list = {
					70 = {
						mult_modifier = {
							factor = 0.9
							society_influence >= 30
						}
						mult_modifier = {
							factor = 0.9
							society_influence >= 40
						}
						mult_modifier = {
							factor = 0.8
							society_influence >= 50
						}
						mult_modifier = {
							factor = 0.7
							society_influence >= 70
						}
						mult_modifier = {
							factor = 0.6
							society_influence >= 80
						}
						mult_modifier = {
							factor = 0.5
							society_influence >= 90
						}

						add_mission_succeed_influence_effect = yes

						if = { # Added to promote landless assassins to rank 2, so they can participate in plots
							limit = {
								society_rank < 2
								society_can_rank_up = yes
							}

							random = {
								chance = 50
								society_rank_up = 1
							}
						}
					}

					30 = { add_mission_fail_influence_effect = yes }
				}
			}

			125 = {
				trigger = { ai = yes }
				# Do nothing for AI
			}
		}
	}
}

# MISSION: Assassinate a target
character_event = {
	id = MNM.6200

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_list = {
			40 = { # Infidel ruler at war with shia, or their vassal/commander
				trigger = {
					any_independent_ruler = {
						is_within_diplo_range = ROOT # Not using assassins_appropriate_target_trigger here to also find vassals/commanders

						NOR = {
							character = ROOT
							religion = shiite
							society_member_of = the_assassins
						}

						any_war = {
							attacker = { character = PREVPREV }

							defender = {
								religion = shiite
								NOT = { character = ROOT }
							}
						}

						OR = {
							assassins_appropriate_target_trigger = yes

							any_courtier_or_vassal = {
								assassins_appropriate_target_trigger = yes

								NOR = {
									character = ROOT
									society_member_of = the_assassins
								}

								OR = {
									liege = { is_feudal = yes }

									any_war = {
										any_attacker = { character = PREVPREV }
										defender = { religion = shiite }
									}
								}
							}
						}
					}
				}

				# Find the ruler
				random_independent_ruler = {
					limit = {
						is_within_diplo_range = ROOT # Not using assassins_appropriate_target_trigger here to also find vassals/commanders

						NOR = {
							character = ROOT
							religion = shiite
							society_member_of = the_assassins
						}

						any_war = {
							any_attacker = { character = PREVPREV }

							defender = {
								religion = shiite
								NOT = { character = ROOT }
							}
						}
					}

					if = {
						limit = {
							assassins_appropriate_target_trigger = yes
						}

						save_event_target_as = assassins_target
					}
					else = {
						save_event_target_as = assassins_aggressor

						random_courtier_or_vassal = {
							limit = {
								assassins_appropriate_target_trigger = yes

								NOR = {
									character = ROOT
									society_member_of = the_assassins
								}

								OR = {
									liege = { is_feudal = yes }

									any_war = {
										any_attacker = { character = PREVPREV }
										defender = { religion = shiite }
									}
								}
							}

							preferred_limit = {
								in_command = yes
							}

							save_event_target_as = assassins_target
						}

						event_target:assassins_target = {
							if = {
								limit = { independent = yes }
								set_character_flag = assassins_target_war_attacker
							}
							else_if = {
								limit = { in_command = no }
								set_character_flag = assassins_target_war_attacker_vassal
							}
							else = {
								set_character_flag = assassins_target_war_attacker_commander
							}
						}
					}
				}
			}
			15 = { # Assaulted an assassin
				trigger = {
					any_character = {
						is_offmap_ruler = no
						NOT = { character = ROOT }
						assassins_appropriate_target_trigger = yes
						has_character_flag = assassins_target_assaulted_member
					}
				}

				random_character = {
					limit = {
						is_offmap_ruler = no
						NOT = { character = ROOT }
						assassins_appropriate_target_trigger = yes
						has_character_flag = assassins_target_assaulted_member
					}

					save_event_target_as = assassins_target
				}
			}

			20 = { # Killed an assassin
				trigger = {
					any_character = {
						is_offmap_ruler = no
						NOT = { character = ROOT }
						assassins_appropriate_target_trigger = yes
						has_character_flag = assassins_target_killed_member
					}
				}

				random_character = {
					limit = {
						is_offmap_ruler = no
						NOT = { character = ROOT }
						assassins_appropriate_target_trigger = yes
						has_character_flag = assassins_target_killed_member
					}

					save_event_target_as = assassins_target
				}
			}

			20 = { # Marked for death by GM
				trigger = {
					any_character = {
						is_offmap_ruler = no
						NOT = { character = ROOT }
						assassins_appropriate_target_trigger = yes
						has_character_flag = assassins_target_marked_for_death
					}
				}

				random_character = {
					limit = {
						is_offmap_ruler = no
						NOT = { character = ROOT }
						assassins_appropriate_target_trigger = yes
						has_character_flag = assassins_target_marked_for_death
					}

					save_event_target_as = assassins_target
				}
			}

			15 = { # Cruel non-shia ruler with shia population
				trigger = {
					any_independent_ruler = {
						assassins_appropriate_target_trigger = yes

						NOR = {
							character = ROOT
							society_member_of = the_assassins
							religion = shiite
						}

						OR = {
							is_evil_trigger = yes
							trait = zealous
						}

						any_realm_province = {
							religion = shiite
							held_under_PREV = yes
						}
					}
				}

				random_independent_ruler = {
					limit = {
						assassins_appropriate_target_trigger = yes

						NOR = {
							character = ROOT
							society_member_of = the_assassins
							religion = shiite
						}

						OR = {
							is_evil_trigger = yes
							trait = zealous
						}

						any_realm_province = {
							religion = shiite
							held_under_PREV = yes
						}
					}

					save_event_target_as = assassins_target
					set_character_flag = assassins_target_persecutes_shiites
				}
			}

			fallback = {
				random_playable_ruler = {
					limit = {
						assassins_appropriate_target_trigger = yes

						NOR = {
							character = ROOT
							society_member_of = the_assassins
							religion = shiite
						}
					}

					preferred_limit = {
						OR = {
							is_evil_trigger = yes
							trait = zealous
						}
					}

					save_event_target_as = assassins_target
					set_character_flag = assassins_target_fallback
				}
			}
		}

		if = {
			limit = { is_within_diplo_range = event_target:assassins_target }
			society_quest_event = { id = MNM.6202 }
		}
		else = {
			event_target:assassins_target = {
				clr_character_flag = assassins_target_persecutes_shiites
				clr_character_flag = assassins_target_fallback
				clr_character_flag = assassins_target_war_attacker
				clr_character_flag = assassins_target_war_attacker_vassal
				clr_character_flag = assassins_target_war_attacker_commander
			}
		}
	}
}

# You get your target
society_quest_event = {
	id = MNM.6202
	title = quest_the_assassins_assassination
	portrait = event_target:grand_master
	quest_target = event_target:assassins_target

	desc = {
		text = EVTDESC_MNM_6202_WAR_ATTACKER
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_war_attacker } }
	}
	desc = {
		text = EVTDESC_MNM_6202_WAR_ATTACKER_VASSAL
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_war_attacker_vassal } }
	}
	desc = {
		text = EVTDESC_MNM_6202_WAR_ATTACKER_COMMANDER
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_war_attacker_commander } }
	}
	desc = {
		text = EVTDESC_MNM_6202_ASSAULTED_MEMBER
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_assaulted_member } }
	}
	desc = {
		text = EVTDESC_MNM_6202_KILLED_MEMBER
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_killed_member } }
	}
	desc = {
		text = EVTDESC_MNM_6202_MARKED_FOR_DEATH
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_marked_for_death } }
	}
	desc = {
		text = EVTDESC_MNM_6202_PERSECUTED_SHIITES
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_persecutes_shiites } }
	}
	desc = {
		text = EVTDESC_MNM_6202_FALLBACK
		trigger = { event_target:assassins_target = { has_character_flag = assassins_target_fallback } }
	}

	is_triggered_only = yes

	immediate = { # For loc
		event_target:assassins_target = {
			any_war = {
				limit = { defender = { religion = shiite } }
				defender = { save_event_target_as = shiite_defender }
			}

			random_realm_province = {
				limit = {
					religion = shiite
					held_under_PREV = yes
				}

				save_event_target_as = shiite_province
			}
		}
	}

	option = {
		name = ACCEPT
		show_portrait = event_target:assassins_target

		event_target:assassins_target = {
			show_scope_change = no

			set_quest_target = {
				id = quest_the_assassins_assassination
				holder = ROOT
			}
		}

		hidden_effect = {
			if = { # Makes sure the AI actually does the mission
				limit = { ai = yes }

				random_list = {
					20 = {
						trigger = {
							society_rank > 1

							attribute_diff = {
								character = event_target:assassins_target
								attribute = intrigue
								value >= 6
							}
						}

						mult_modifier = { intrigue >= 12 factor = 1.2 }
						mult_modifier = { intrigue >= 14 factor = 1.2 }
						mult_modifier = { intrigue >= 16 factor = 1.2 }
						mult_modifier = { intrigue >= 18 factor = 1.2 }

						character_event = { # Triggers plot event
							id = MNM.6948
							months = 5
							random = 100
						}
					}
					20 = {
						trigger = {
							attribute_diff = {
								character = event_target:assassins_target
								attribute = intrigue
								value >= 3
							}
						}

						mult_modifier = { intrigue >= 12 factor = 1.2 }
						mult_modifier = { intrigue >= 14 factor = 1.2 }
						mult_modifier = { intrigue >= 16 factor = 1.2 }
						mult_modifier = { intrigue >= 18 factor = 1.2 }

						character_event = { # Triggers plot event
							id = MNM.6948
							months = 10
							random = 100
						}
					}
					20 = {
						mult_modifier = { intrigue >= 12 factor = 1.2 }
						mult_modifier = { intrigue >= 14 factor = 1.2 }
						mult_modifier = { intrigue >= 16 factor = 1.2 }
						mult_modifier = { intrigue >= 18 factor = 1.2 }

						character_event = { # Triggers plot event
							id = MNM.6948
							days = 500
							random = 300
						}
					}
					40 = {
						mult_modifier = { event_target:assassins_target = { intrigue >= 12 } factor = 1.2 }
						mult_modifier = { event_target:assassins_target = { intrigue >= 14 } factor = 1.2 }
						mult_modifier = { event_target:assassins_target = { intrigue >= 16 } factor = 1.2 }
						mult_modifier = { event_target:assassins_target = { intrigue >= 18 } factor = 1.2 }
						mult_modifier = { event_target:assassins_target = { real_tier = COUNT } factor = 1.5 }
						mult_modifier = { event_target:assassins_target = { real_tier = DUKE } factor = 2 }
						mult_modifier = { event_target:assassins_target = { real_tier = KING } factor = 2.5 }
						mult_modifier = { event_target:assassins_target = { real_tier = EMPEROR } factor = 5 }

						character_event = { id = MNM.6949 } # Clears quest (failure)
					}
				}
			}
		}
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		hidden_effect = {
			add_character_modifier = {
				name = quest_cooldown_timer
				days = 1000
				hidden = yes
			}
		}

		ai_chance = { factor = 0 }
	}

	after = {
		hidden_effect = {
			event_target:assassins_target = {
				clr_character_flag = assassins_target_persecutes_shiites
				clr_character_flag = assassins_target_fallback
				clr_character_flag = assassins_target_war_attacker
				clr_character_flag = assassins_target_war_attacker_vassal
				clr_character_flag = assassins_target_war_attacker_commander
			}
		}
	}
}

# Helps AI do mission
character_event = {
	id = MNM.6948

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { plot_target_char = { is_quest_target_of = ROOT } }
		has_quest = quest_the_assassins_assassination
	}

	immediate = {
		character_event = { id = MNM.6100 } # Plotter sees an opportunity
	}
}

# AI clean-up
character_event = {
	id = MNM.6949

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { plot_target_char = { is_quest_target_of = ROOT } }
		has_quest = quest_the_assassins_assassination
	}

	immediate = {
		clr_quest = {
			id = quest_the_assassins_assassination
			failure = yes
		}
	}
}

character_event = {
	id = MNM.6950
	desc = EVTDESC_MNM_6950
	picture = GFX_evt_assassination
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_quest = quest_the_assassins_assassination
	}

	option = {
		name = EVTOPTA_MNM_6106

		clr_quest = quest_the_assassins_assassination
		sound_effect = assassins_assassinate_character

		if = {
			limit = { event_target:plot_target = { higher_real_tier_than = DUKE } }
			add_society_currency_medium_effect = yes
		}
		else = {
			add_society_currency_minor_effect = yes
		}
	}
}

# MISSION: Convert specific province to Shia
society_quest_event = {
	id = MNM.6204
	portrait = event_target:grand_master

	desc = {
		text = EVTDESC_MNM_6204_A
		trigger = {
			owns = event_target:conversion_province

			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6204_B
		trigger = {
			NOR = {
				owns = event_target:conversion_province

				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6204_c
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}

	is_triggered_only = yes

	quest_target = event_target:conversion_province

	immediate = {
		random_realm_province = {
			limit = {
				NOT = { religion = shiite }
				held_under_PREV = yes
			}

			preferred_limit = {
				owned_by = ROOT
			}

			preferred_limit = {
				owner = { NOT = { religion = shiite } }
			}

			save_event_target_as = conversion_province
			owner = { save_event_target_as = conversion_province_owner }
		}
	}

	option = {
		name = ACCEPT

		event_target:conversion_province = {
			show_scope_change = no

			set_quest_target = {
				id = quest_the_assassins_convert_province
				holder = ROOT
			}
		}
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}
}

# The province in question is converted
province_event = {
	id = MNM.6206

	hide_window = yes
	is_triggered_only = yes # on_county_religion_change

	immediate = {
		any_quester_targeting_this = {
			limit = { has_quest = quest_the_assassins_convert_province }
			character_event = { id = MNM.6205 }
		}
	}
}

# Mission completion
character_event = {
	id = MNM.6205
	picture = GFX_evt_imam
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_MNM_6205_A
		trigger = {
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6205_B
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}

	is_triggered_only = yes
	hide_from = yes

	trigger = { religion = FROM }

	option = {
		name = {
			text = EVTOPTA_MNM_6205_A
			trigger = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_6205_B
			trigger = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}

		clr_quest = quest_the_assassins_convert_province
		sound_effect = assassins_convert_province
	}
}



# MISSION: Collect debt
society_quest_event = {
	id = MNM.6207
	desc = EVTDESC_MNM_6207
	portrait = event_target:grand_master

	is_triggered_only = yes

	quest_target = event_target:owes_the_assassins

	immediate = {
		random_character = {
			limit = {
				is_offmap_ruler = no
				is_within_diplo_range = ROOT
				is_adult = yes
				has_character_flag = assassins_refused_to_pay_debt
				is_quest_target = no

				OR = {
					has_character_modifier = borrowed_from_assassins
					has_character_modifier = assassins_debt_modifier
				}
			}

			save_event_target_as = owes_the_assassins
		}
	}

	option = {
		name = ACCEPT

		event_target:owes_the_assassins = {
			show_scope_change = no

			set_quest_target = {
				id = quest_the_assassins_collect_debt
				holder = ROOT
			}
		}
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}
}

# Plot triggers. How do you go about collecting the debt?
character_event = {
	id = MNM.6208
	desc = EVTDESC_MNM_6208
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:owes_the_assassins

	is_in_society = yes
	is_part_of_plot = yes
	only_capable = yes
	prisoner = no
	min_age = 16

	trigger = {
		society_member_of = the_assassins
		has_plot = plot_assassins_collect_debt

		NOR = {
			has_character_flag = collecting_debt
			has_character_flag = collected_debt_failure
			has_character_flag = collected_debt_success
		}
	}

	mean_time_to_happen = {
		months = 2000

		mult_modifier = {
			factor = 3
			society_rank = {
				society = the_assassins
				rank == 3
			}
		}
		mult_modifier = {
			factor = 1.75
			society_rank = {
				society = the_assassins
				rank == 2
			}
		}
		mult_modifier = {
			factor = 1.5
			plot_target_char = { is_inaccessible_trigger = yes }
		}
		mult_modifier = {
			factor = 1.5
			plot_target_char = { prisoner = yes }
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.1
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.2
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.3
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.4
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.5
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.6
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.7
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.8
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 0.9
		}
		mult_modifier = {
			factor = 0.6
			plot_power >= 1
		}
		mult_modifier = {
			factor = 0.3
			plot_power >= 1.5
		}
		mult_modifier = {
			factor = 0.3
			plot_power >= 2
		}
	}

	immediate = {
		save_event_target_as = assassin
		set_character_flag = collecting_debt

		if = {
			limit = { has_quest = quest_the_assassins_collect_debt }
			quest_target = { save_event_target_as = owes_the_assassins }
		}

		event_target:owes_the_assassins = {
			random_friend = {
				limit = {
					NOT = { society_member_of = the_assassins }
				}

				save_event_target_as = threaten_dear_relation
			}

			random_host_courtier = {
				limit = {
					NOT = { society_member_of = the_assassins }
					is_close_relative = event_target:owes_the_assassins
					reverse_opinion = { who = event_target:owes_the_assassins value >= 40 }
				}

				save_event_target_as = threaten_dear_relation
			}

			random_lover = {
				limit = {
					NOT = { society_member_of = the_assassins }
				}

				save_event_target_as = threaten_dear_relation
			}

			random_realm_province = {
				limit = {
					has_city = yes
					held_under_PREV = yes
				}

				save_event_target_as = fire_town_province

				random_province_holding = {
					limit = { holding_type = city }
					save_event_target_as = fire_town
				}
			}

			if = {
				limit = {
					NOT = { event_target:fire_town = { always = yes } }
				}

				capital_scope = {
					save_event_target_as = fire_town_province

					random_province_holding = {
						limit = { holding_type = city }
						save_event_target_as = fire_town
					}
				}
			}
		}
	}

	# Threaten them personally
	option = {
		name = EVTOPTA_MNM_6208

		custom_tooltip = { text = EVTOPTA_MNM_6208_TOOLTIP }

		set_character_flag = threaten_personally

		event_target:owes_the_assassins = {
			character_event = { id = MNM.6209 days = 7 }
		}
	}

	# Threaten someone they hold dear
	option = {
		name = EVTOPTB_MNM_6208

		trigger = { event_target:threaten_dear_relation = { always = yes } }

		custom_tooltip = { text = EVTOPTB_MNM_6208_TOOLTIP }

		set_character_flag = threaten_relation

		event_target:owes_the_assassins = {
			character_event = { id = MNM.6212 days = 7 }
		}
	}

	# Threaten their wealth
	option = {
		name = EVTOPTC_MNM_6208

		trigger = { event_target:fire_town = { always = yes } }

		custom_tooltip = { text = EVTOPTC_MNM_6208_TOOLTIP }

		set_character_flag = threaten_wealth

		event_target:owes_the_assassins = {
			character_event = { id = MNM.6213 days = 7 }
		}
	}
}

# You threaten them personally
character_event = {
	id = MNM.6209
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6209_A
		trigger = {
			OR = {
				trait = paranoid
				trait = master_schemer
				intrigue >= 15
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6209_B
		trigger = {
			NOR = {
				trait = paranoid
				trait = master_schemer
				intrigue >= 15
			}
		}
	}

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6209

		if = {
			limit = {
				OR = {
					trait = paranoid
					trait = master_schemer
					intrigue >= 15
				}
			}

			custom_tooltip = { text = EVTOPTA_MNM_6209_TOOLTIP_A }
		}

		else = {
			custom_tooltip = { text = EVTOPTA_MNM_6209_TOOLTIP_B }

			if = {
				limit = {
					has_dlc = "Reapers"

					NOR = {
						has_character_flag = developing_illness
						has_character_flag = disease_not_serious
						trait = vomiting
					}
				}

				set_character_flag = disease_not_serious
				add_trait = vomiting

				character_event = {
					id = RIP.11005
					days = 15
					random = 10
				}
			}
			else_if = {
				limit = {
					NOT = { has_dlc = "Reapers" }
					is_ill = no
				}

				add_trait = ill

				character_event = {
					id = 6061
					days = 15
					random = 10
				}
			}
		}

		character_event = { id = MNM.6210 days = 3 }
	}
}

character_event = {
	id = MNM.6210
	desc = EVTDESC_MNM_6210
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		the_assassins = {
			leader = {
				save_event_target_as = grand_master
			}
		}
	}

	# Yes
	option = {
		name = EVTOPTA_MNM_6210

		custom_tooltip = { text = EVTOPTA_MNM_6210_TOOLTIP }

		pay_back_assassins_effect = yes
		remove_assassins_debt_effect = yes

		clr_character_flag = assassins_refused_to_pay_debt

		event_target:assassin = { character_event = { id = MNM.6215 } }

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 5
				trait = craven
			}
			mult_modifier = {
				factor = 2
				has_mental_disorder_trigger = yes
			}
			mult_modifier = {
				factor = 1.3
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -2
				}
			}
			mult_modifier = {
				factor = 1.3
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -4
				}
			}
			mult_modifier = {
				factor = 1.4
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -6
				}
			}
			mult_modifier = {
				factor = 1.5
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -8
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_6210

		custom_tooltip = { text = EVTOPTB_MNM_6210_TOOLTIP }

		clr_character_flag = assassins_refused_to_pay_debt
		set_character_flag = assassins_target_debt

		event_target:assassin = { character_event = { id = MNM.6216 } }

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 4
				trait = brave
			}
			mult_modifier = {
				factor = 2
				wealth < assassins_debt
			}
		}
	}
}

# You threaten someone dear to them
character_event = {
	id = MNM.6212
	desc = EVTDESC_MNM_6212
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:threaten_dear_relation

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		the_assassins = {
			leader = {
				save_event_target_as = grand_master
			}
		}
	}

	# Yes
	option = {
		name = EVTOPTA_MNM_6210

		custom_tooltip = { text = EVTOPTA_MNM_6210_TOOLTIP }

		pay_back_assassins_effect = yes
		remove_assassins_debt_effect = yes

		clr_character_flag = assassins_refused_to_pay_debt

		event_target:assassin = { character_event = { id = MNM.6215 } }

		reverse_opinion = {
			name = opinion_grateful
			who = event_target:threaten_dear_relation
			years = 5
		}

		ai_chance = {
			factor = 50
			mult_modifier = {
				factor = 5
				is_benevolent_trigger = yes
			}
			mult_modifier = {
				factor = 2
				opinion = { who = event_target:threaten_dear_relation value >= 75 }
			}
			mult_modifier = {
				factor = 1.3
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -2
				}
			}
			mult_modifier = {
				factor = 1.3
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -4
				}
			}
			mult_modifier = {
				factor = 1.4
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -6
				}
			}
			mult_modifier = {
				factor = 1.5
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -8
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_6210

		custom_tooltip = { text = EVTOPTB_MNM_6210_TOOLTIP }

		clr_character_flag = assassins_refused_to_pay_debt
		set_character_flag = assassins_target_debt

		event_target:assassin = { character_event = { id = MNM.6216 } }

		reverse_opinion = {
			name = opinion_angry
			who = event_target:threaten_dear_relation
			years = 5
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 4
				is_evil_trigger = yes
			}
			mult_modifier = {
				factor = 2
				opinion = { who = event_target:threaten_dear_relation value < 50 }
			}
			mult_modifier = {
				factor = 2
				wealth < assassins_debt
			}
		}
	}
}

# Threaten their money
character_event = {
	id = MNM.6213
	desc = EVTDESC_MNM_6213
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		the_assassins = {
			leader = {
				save_event_target_as = grand_master
			}
		}
	}

	# Yes
	option = {
		name = EVTOPTA_MNM_6210

		custom_tooltip = { text = EVTOPTA_MNM_6210_TOOLTIP }

		pay_back_assassins_effect = yes
		remove_assassins_debt_effect = yes

		clr_character_flag = assassins_refused_to_pay_debt

		event_target:assassin = { character_event = { id = MNM.6215 } }

		event_target:fire_town_province = {
			show_scope_change = no

			add_province_modifier = {
				name = trade_district_fire
				years = 10
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 5
				trait = greedy
			}
			mult_modifier = {
				factor = 1.5
				trait = ambitious
			}
			mult_modifier = {
				factor = 1.3
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -2
				}
			}
			mult_modifier = {
				factor = 1.3
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -4
				}
			}
			mult_modifier = {
				factor = 1.4
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -6
				}
			}
			mult_modifier = {
				factor = 1.5
				attribute_diff = {
					character = event_target:assassin
					attribute = intrigue
					value <= -8
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_6210

		custom_tooltip = { text = EVTOPTB_MNM_6210_TOOLTIP }

		clr_character_flag = assassins_refused_to_pay_debt
		set_character_flag = assassins_target_debt

		event_target:assassin = { character_event = { id = MNM.6216 } }

		event_target:fire_town_province = {
			show_scope_change = no

			add_province_modifier = {
				name = trade_district_fire
				years = 10
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 4
				trait = charitable
			}
			mult_modifier = {
				factor = 1.5
				trait = content
			}
			mult_modifier = {
				factor = 2
				wealth < assassins_debt
			}
		}
	}
}

# They payed back, mission successful
character_event = {
	id = MNM.6215
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6215_A
		trigger = { has_character_flag = threaten_personally }
	}
	desc = {
		text = EVTDESC_MNM_6215_B
		trigger = { has_character_flag = threaten_relation }
	}
	desc = {
		text = EVTDESC_MNM_6215_C
		trigger = { has_character_flag = threaten_wealth }
	}

	is_triggered_only = yes

	option = {
		name = EXCELLENT

		clr_quest = quest_the_assassins_collect_debt
		sound_effect = assassins_collect_debt
		add_society_currency_minor_effect = yes
		clr_character_flag = threaten_personally
		clr_character_flag = threaten_relation
		clr_character_flag = threaten_wealth
		clr_character_flag = collecting_debt
		set_character_flag = collected_debt_success
	}
}

# They refused to pay back, mission unsuccessful
character_event = {
	id = MNM.6216
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6216_A
		trigger = { has_character_flag = threaten_personally }
	}
	desc = {
		text = EVTDESC_MNM_6216_B
		trigger = { has_character_flag = threaten_relation }
	}
	desc = {
		text = EVTDESC_MNM_6216_C
		trigger = { has_character_flag = threaten_wealth }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6216

		clr_quest = {
			id = quest_the_assassins_collect_debt
			failure = yes
		}

		set_character_flag = collected_debt_failure
		clr_character_flag = threaten_personally
		clr_character_flag = threaten_relation
		clr_character_flag = threaten_wealth
		clr_character_flag = collecting_debt
	}
}

# MISSION: Occupy infidel holding
society_quest_event = {
	id = MNM.6221
	desc = EVTDESC_MNM_6221
	portrait = event_target:grand_master
	quest_target = event_target:infidel_holding

	is_triggered_only = yes

	immediate = {
		random_neighbor_independent_ruler = {
			limit = {
				NOT = { religion = shiite }

				any_realm_province = {
					held_under_PREV = yes

					owner = {
						NOT = { religion = shiite }
					}

					any_province_holding = {
						holder_scope = { NOT = { religion = shiite } }

						OR = {
							holding_type = temple
							holding_type = castle
						}
					}
				}
			}

			preferred_limit = {
				NOT = { religion_group = muslim }
			}

			random_realm_province = {
				limit = {
					held_under_PREV = yes

					owner = {
						NOT = { religion = shiite }
					}

					any_province_holding = {
						holder_scope = { NOT = { religion = shiite } }

						OR = {
							holding_type = temple
							holding_type = castle
						}
					}
				}

				preferred_limit = {
					owned_by = PREV
				}

				random_province_holding = {
					limit = {
						holder_scope = { NOT = { religion = shiite } }

						OR = {
							holding_type = temple
							holding_type = castle
						}
					}

					save_event_target_as = infidel_holding # Lowest prio, random holding in neigbor's realm

					location = {
						save_event_target_as = infidel_holding_province

						owner = { save_event_target_as = infidel_holding_owner }
					}
				}
			}
		}
	}

	option = {
		name = ACCEPT

		event_target:infidel_holding = {
			show_scope_change = no

			set_quest_target = {
				id = quest_the_assassins_occupy_holding
				holder = ROOT
			}
		}
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}
}

# Holding occupied
# ROOT is the owner of the winning unit
# FROM is the taken holding title
character_event = {
	id = MNM.6222
	desc = EVTDESC_MNM_6222
	picture = GFX_evt_magnificent_castle
	border = GFX_event_normal_frame_intrigue

	trigger = {
		has_quest = quest_the_assassins_occupy_holding
		quest_target = { title = FROM }
	}

	is_triggered_only = yes # on_siege_over_winner

	immediate = {

		FROM = {
			save_event_target_as = infidel_holding
			owner = { save_event_target_as = infidel_holding_owner }
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_6028_A
			trigger = {
				NOT = {
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
			}
		}
		name = {
			text = EVTOPTA_MNM_6028_B
			trigger = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}

		clr_quest = quest_the_assassins_occupy_holding
		sound_effect = assassins_occupy_infidel_holding
		add_society_currency_medium_effect = yes
	}
}

### POWERS###

# POWER: Drugs
character_event = {
	id = MNM.6800
	desc = EVTDESC_MNM_6800
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # assassins_drug_effect, mnm_assassins_decisions.txt

	immediate = {
		set_character_flag = assassins_taking_drugs # Is removed in 6802
	}

	# Small dose
	option = {
		name = EVTOPTA_MNM_6800

		custom_tooltip = { text = EVTOPTA_MNM_6800_TOOLTIP }

		set_character_flag = drugs_small_dose
	}

	# Regular dose
	option = {
		name = EVTOPTB_MNM_6800

		custom_tooltip = { text = EVTOPTB_MNM_6800_TOOLTIP }
	}

	# Big dose
	option = {
		name = EVTOPTC_MNM_6800

		custom_tooltip = { text = EVTOPTC_MNM_6800_TOOLTIP }

		set_character_flag = drugs_big_dose
	}

	after = {
		character_event = { id = MNM.6801 }
	}
}

# Drug tombola!
character_event = {
	id = MNM.6801

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# How will the trip be, over all?
		random_list = {
			20 = { # Great
				set_character_flag = great_trip

				mult_modifier = {
					factor = 2
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 1.5
					trait = hedonist
				}
			}

			60 = { # Good
				set_character_flag = good_trip
			}

			20 = { # Bad
				set_character_flag = bad_trip

				mult_modifier = {
					factor = 1.5
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 1.5
					has_mental_disorder_trigger = yes
				}
				mult_modifier = {
					factor = 1.5
					has_character_modifier = hashish_addict
				}
				mult_modifier = {
					factor = 1.5
					trait = paranoid
				}
			}
		}

		# Outcome
		character_event = { id = MNM.6802 days = 7 } # Overall outcome

		# Special events, all with 4 day delays, weight with trip flags
		random_list = {
			10 = { # Nothing
				mult_modifier = {
					factor = 2
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_big_dose
				}
			}

			10 = { # Become posessed
				trigger = { has_character_flag = bad_trip }

				mult_modifier = {
					factor = 1.5
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 1.5
					has_character_modifier = hashish_addict
				}

				if = {
					limit = {
						NOT = { trait = possessed }
					}

					set_character_flag = become_possessed
					character_event = { id = MNM.6810 days = 4 }
				}
			}

			10 = { # Become paranoid
				trigger = { has_character_flag = bad_trip }

				mult_modifier = {
					factor = 1.5
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 1.5
					has_character_modifier = hashish_addict
				}
				mult_modifier = {
					factor = 0.5
					trait = trusting
				}

				if = {
					limit = {
						NOT = { trait = paranoid }
					}
					set_character_flag = become_paranoid
					character_event = { id = MNM.6810 days = 4 }
				}
			}

			5 = { # Become gluttonous
				mult_modifier = {
					factor = 1.5
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 1.5
					has_character_modifier = hashish_addict
				}
				mult_modifier = {
					factor = 0.5
					trait = temperate
				}

				if = {
					limit = {
						NOT = { trait = gluttonous }
					}
					set_character_flag = become_gluttonous
					character_event = { id = MNM.6810 days = 4 }
				}
			}

			5 = { # Become slothful
				mult_modifier = {
					factor = 1.5
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 1.5
					has_character_modifier = hashish_addict
				}
				mult_modifier = {
					factor = 0.5
					trait = diligent
				}

				if = {
					limit = {
						NOT = { trait = slothful }
					}
					set_character_flag = become_slothful
					character_event = { id = MNM.6810 days = 4 }
				}
			}

			10 = { # Discover a plot
				trigger = {
					top_liege = {
						any_plotter = {
							same_realm = ROOT
							NOT = { plot_is_known_by = ROOT }
						}
					}
				}

				mult_modifier = {
					factor = 2
					NOT = { has_character_flag = good_trip }
				}
				mult_modifier = {
					factor = 2
					trait = paranoid
				}
				mult_modifier = {
					factor = 1.5
					trait = possessed
				}

				character_event = { id = MNM.6811 days = 4 }
			}

			10 = { # Gain a lover, perhaps your spouse?
				trigger = {
					NOR = {
						has_character_flag = bad_trip
						trait = eunuch
					}
				}

				mult_modifier = {
					factor = 2
					has_character_flag = great_trip
				}
				mult_modifier = {
					factor = 1.5
					trait = lustful
				}
				mult_modifier = {
					factor = 0.5
					has_lover = yes
				}

				set_character_flag = drug_lover
				character_event = { id = MNM.6812 days = 4 }
			}

			20 = { # Gain a friend
				trigger = {
					NOT = { has_character_flag = bad_trip }
				}

				mult_modifier = {
					factor = 2
					has_character_flag = great_trip
				}
				mult_modifier = {
					factor = 0.5
					trait = paranoid
				}

				set_character_flag = drug_friend
				character_event = { id = MNM.6812 days = 4 }
			}

			10 = { # Discover a cheating spouse
				trigger = {
					is_married = yes

					OR = {
						any_spouse = {
							any_lover = {
								NOT = { character = ROOT }
							}
						}

						trigger_if = {
							limit = { trait = paranoid }

							any_realm_character = {
								same_sex = ROOT
								NOT = { character = ROOT }
							}
						}
					}
				}

				character_event = { id = MNM.6813 days = 4 }
			}

			10 = { # Make a fool of yourself
				mult_modifier = {
					factor = 1.5
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}

				character_event = { id = MNM.6814 days = 4 }
			}

			10 = { # Die, only if you're already an addict
				trigger = {
					has_character_flag = bad_trip
					has_character_modifier = hashish_addict
					health < 5
				}

				mult_modifier = {
					factor = 0.5
					NOT = { has_character_flag = drugs_big_dose }
				}
				mult_modifier = {
					factor = 1.5
					has_character_modifier = withdrawal_symptoms
				}
				mult_modifier = {
					factor = 2
					has_character_modifier = drugs_timer
				}
				mult_modifier = {
					factor = 1.5
					trait = gluttonous
				}
				mult_modifier = {
					factor = 0.5
					trait = temperate
				}
				mult_modifier = {
					factor = 2
					OR = {
						trait = ill
						trait = pneumonic
						trait = consumption
						trait = cough
						trait = chest_pain
					}
				}

				character_event = { id = MNM.6815 days = 4 }
			}

			10 = { # Cure stressed
				trigger = { trait = stressed }

				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}

				set_character_flag = drugs_curing_stressed
				character_event = { id = MNM.6816 days = 4 }
			}

			10 = { # Cure possessed
				trigger = { trait = possessed }

				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}

				set_character_flag = drugs_curing_possessed
				character_event = { id = MNM.6816 days = 4 }
			}

			10 = { # Cure depressed
				trigger = { trait = depressed }

				mult_modifier = {
					factor = 0.5
					NOT = { has_character_flag = drugs_big_dose }
				}

				set_character_flag = drugs_curing_depressed
				character_event = { id = MNM.6816 days = 4 }
			}

			10 = { # Cure lunatic
				trigger = {
					trait = lunatic
					has_character_flag = drugs_big_dose
				}

				set_character_flag = drugs_curing_lunatic
				character_event = { id = MNM.6816 days = 4 }
			}

			10 = { # Diplomatic insight
				trigger = {
					OR = {
						has_character_flag = great_trip
						has_character_flag = good_trip
					}

					NOT = { has_character_modifier = diplomatic_insight }
				}

				mult_modifier = {
					factor = 2
					has_character_flag = great_trip
				}
				mult_modifier = {
					factor = 2
					diplomacy < 8
				}
				mult_modifier = {
					factor = 2
					diplomacy < 15
				}

				set_character_flag = gains_diplomatic_insight_flag
				character_event = { id = MNM.6817 days = 4 }
			}

			10 = { # Martial insight
				trigger = {
					OR = {
						has_character_flag = great_trip
						has_character_flag = good_trip
					}

					NOT = { has_character_modifier = martial_insight }
				}

				mult_modifier = {
					factor = 2
					has_character_flag = great_trip
				}
				mult_modifier = {
					factor = 2
					martial < 8
				}
				mult_modifier = {
					factor = 2
					martial < 15
				}

				set_character_flag = gains_martial_insight_flag
				character_event = { id = MNM.6817 days = 4 }
			}

			10 = { # Intrigue insight
				trigger = {
					OR = {
						has_character_flag = great_trip
						has_character_flag = good_trip
					}

					NOT = { has_character_modifier = intrigue_insight }
				}

				mult_modifier = {
					factor = 2
					has_character_flag = great_trip
				}
				mult_modifier = {
					factor = 2
					intrigue < 8
				}
				mult_modifier = {
					factor = 2
					intrigue < 15
				}

				set_character_flag = gains_intrigue_insight_flag
				character_event = { id = MNM.6817 days = 4 }
			}

			10 = { # Learning insight
				trigger = {
					OR = {
						has_character_flag = great_trip
						has_character_flag = good_trip
					}

					NOT = { has_character_modifier = learning_insight }
				}

				mult_modifier = {
					factor = 2
					has_character_flag = great_trip
				}
				mult_modifier = {
					factor = 2
					learning < 8
				}
				mult_modifier = {
					factor = 2
					learning < 15
				}

				set_character_flag = gains_learning_insight_flag
				character_event = { id = MNM.6817 days = 4 }
			}

			10 = { # Stewardship insight
				trigger = {
					OR = {
						has_character_flag = great_trip
						has_character_flag = good_trip
					}

					NOT = { has_character_modifier = stewardship_insight }
				}

				mult_modifier = {
					factor = 2
					has_character_flag = great_trip
				}
				mult_modifier = {
					factor = 2
					stewardship < 8
				}
				mult_modifier = {
					factor = 2
					stewardship < 15
				}

				set_character_flag = gains_stewardship_insight_flag
				character_event = { id = MNM.6817 days = 4 }
			}

			10 = { # Cure your disease
				trigger = {
					has_dlc = "Reapers"
					is_ill = yes
				}

				mult_modifier = {
					factor = 3
					has_character_flag = great_trip
				}

				character_event = { id = MNM.6818 days = 4 }
			}
		}

		# Gives addiction
		if = {
			limit = {
				NOT = { has_character_modifier = hashish_addict }
			}

			random = {
				chance = 5

				character_event = {
					id = MNM.6803
					days = 20
					random = 20
				}

				mult_modifier = {
					factor = 4
					has_character_modifier = drugs_timer
				}
				mult_modifier = {
					factor = 1.5
					has_character_flag = drugs_big_dose
				}
				mult_modifier = {
					factor = 0.5
					has_character_flag = drugs_small_dose
				}
				mult_modifier = {
					factor = 1.5
					trait = gluttonous
				}
				mult_modifier = {
					factor = 0.5
					trait = temperate
				}
				mult_modifier = {
					factor = 2
					has_mental_disorder_trigger = yes
				}
			}
		}

		# Add drug timer based on dosage
		trigger_switch = {
			on_trigger = has_character_flag

			drugs_small_dose = {
				add_character_modifier = {
					name = drugs_timer
					years = 1
					hidden = yes
				}
			}

			drugs_big_dose = {
				add_character_modifier = {
					name = drugs_timer
					days = 900
					hidden = yes
				}
			}

			fallback = {
				add_character_modifier = {
					name = drugs_timer
					days = 600
					hidden = yes
				}
			}
		}

		# Illness handling
		random = {
			chance = 5
			give_cancer_effect = yes
		}

		# Removing flags
		clr_character_flag = drugs_small_dose
		clr_character_flag = drugs_big_dose
	}
}

# Outcome of trip
character_event = {
	id = MNM.6802
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_MNM_6802_GREAT
		picture = GFX_evt_religious_exultation
		trigger = { has_character_flag = great_trip }
	}
	desc = {
		text = EVTDESC_MNM_6802_GOOD
		picture = GFX_evt_dark_prayer
		trigger = { has_character_flag = good_trip }
	}
	desc = {
		text = EVTDESC_MNM_6802_BAD
		picture = GFX_evt_impalement
		trigger = { has_character_flag = bad_trip }
	}

	is_triggered_only = yes

	option = {
		name = {
			trigger = { has_character_flag = great_trip }
			text = EVTOPTA_MNM_6802_GREAT
		}
		name = {
			trigger = { has_character_flag = good_trip }
			text = EVTOPTA_MNM_6802_GOOD
		}
		name = {
			trigger = { has_character_flag = bad_trip }
			text = EVTOPTA_MNM_6802_BAD
		}

		trigger_switch = {
			on_trigger = has_character_modifier

			astounding_visions = {
				remove_character_modifier = astounding_visions
			}
			uplifting_visions = {
				remove_character_modifier = uplifting_visions
			}
			frightening_visions = {
				remove_character_modifier = frightening_visions
			}
		}

		trigger_switch = {
			on_trigger = has_character_flag

			great_trip = {
				clr_character_flag = great_trip

				add_character_modifier = {
					name = astounding_visions
					years = 1
				}
			}
			good_trip = {
				clr_character_flag = good_trip

				add_character_modifier = {
					name = uplifting_visions
					years = 1
				}
			}
			bad_trip = {
				clr_character_flag = bad_trip

				add_character_modifier = {
					name = frightening_visions
					years = 1
				}
			}
		}

		clr_character_flag = assassins_taking_drugs
	}
}

# You're an addict
character_event = {
	id = MNM.6803
	desc = EVTDESC_MNM_6803
	picture = GFX_evt_drunk
	border = GFX_event_normal_frame_religion

	trigger = {
		NOT = { has_character_modifier = hashish_addict }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6803

		custom_tooltip = { text = EVTOPTA_MNM_6803_TOOLTIP }

		add_character_modifier = {
			name = hashish_addict
			duration = -1
		}

		character_event = { id = MNM.6804 days = 100 }
	}
}

# Hidden addiction handling
character_event = {
	id = MNM.6804

	hide_window = yes
	is_triggered_only = yes

	trigger = { has_character_modifier = hashish_addict }


	immediate = {
		# Recover from withdrawal
		if = {
			limit = { has_character_modifier = withdrawal_symptoms }

			random = {
				chance = 40
				character_event = { id = MNM.6806 }
			}
		}
		# Withdrawal syptoms
		else = {
			random = {
				chance = 20
				character_event = { id = MNM.6805 }
			}
		}

		repeat_event = { id = MNM.6804 days = 100 }
	}
}

# You're having withdrawal symptoms
character_event = {
	id = MNM.6805
	desc = EVTDESC_MNM_6805
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		NOT = { has_character_modifier = withdrawal_symptoms }
	}

	option = {
		name = EVTOPTA_MNM_6805

		add_character_modifier = {
			name = withdrawal_symptoms
			duration = -1
		}
	}
}

# Recovered from addiction
character_event = {
	id = MNM.6806
	desc = EVTDESC_MNM_6806
	picture = GFX_evt_recovery
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		has_character_modifier = hashish_addict
		has_character_modifier = withdrawal_symptoms
	}

	option = {
		name = EVTOPTA_MNM_6806

		remove_character_modifier = hashish_addict
		remove_character_modifier = withdrawal_symptoms
	}
}

# Special events
# Get Trait
# Three descs and options
character_event = {
	id = MNM.6810
	picture = GFX_evt_drunk
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCA_MNM_6810
		trigger = { has_character_flag = become_gluttonous }
	}
	desc = {
		text = EVTDESCB_MNM_6810
		trigger = { has_character_flag = become_paranoid }
	}
	desc = {
		text = EVTDESCC_MNM_6810
		trigger = { has_character_flag = become_slothful }
	}
	desc = {
		text = EVTDESCD_MNM_6810
		trigger = { has_character_flag = become_possessed }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6810

		trigger = { has_character_flag = become_gluttonous }

		add_trait_partially_silently_gluttonous_effect = yes
		clr_character_flag = become_gluttonous
	}

	option = {
		name = EVTOPTB_MNM_6810

		trigger = { has_character_flag = become_paranoid }

		add_trait_partially_silently_paranoid_effect = yes
		clr_character_flag = become_paranoid
	}

	option = {
		name = EVTOPTC_MNM_6810

		trigger = { has_character_flag = become_slothful }

		add_trait_partially_silently_slothful_effect = yes
		clr_character_flag = become_slothful
	}

	option = {
		name = EVTOPTD_MNM_6810

		trigger = { has_character_flag = become_possessed }

		add_trait = possessed
		clr_character_flag = become_possessed
	}
}

# Discover Plot
character_event = {
	id = MNM.6811

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_list = {
			40 = {
				trigger = {
					top_liege = {
						any_plotter = {
							target = ROOT
							same_realm = ROOT
							NOT = { plot_is_known_by = ROOT }
						}
					}
				}

				mult_modifier = {
					factor = 0.5
					NOT = {
						top_liege = {
							any_plotter = {
								target = ROOT
								is_ruler = yes
								same_realm = ROOT
								NOT = { plot_is_known_by = ROOT }
							}
						}
					}
				}

				save_event_target_as = drug_plotter_target

				top_liege = {
					random_plotter = {
						target = ROOT

						limit = {
							same_realm = ROOT
							NOT = { plot_is_known_by = ROOT }
						}

						preferred_limit = {
							is_ruler = yes
						}

						save_event_target_as = drug_plotter_reveal
					}
				}
			}
			20 = {
				trigger = {
					any_plotter = {
						plot_target_char = { dynasty = ROOT }
						NOT = { plot_is_known_by = ROOT }
					}
				}

				mult_modifier = {
					factor = 1.5
					any_plotter = {
						plot_target_char = { dynasty = ROOT }
						is_ruler = yes
						NOT = { plot_is_known_by = ROOT }
					}
				}

				random_plotter = {
					limit = {
						plot_target_char = { dynasty = ROOT }
						NOT = { plot_is_known_by = ROOT }
					}

					preferred_limit = {
						is_ruler = yes
					}

					save_event_target_as = drug_plotter_reveal
					plot_target_char = { save_event_target_as = drug_plotter_target }
				}
			}
			10 = {
				trigger = {
					any_plotter = {
						is_vassal_or_below_of = ROOT
						NOT = { plot_is_known_by = ROOT }
					}
				}

				random_plotter = {
					limit = {
						is_vassal_or_below_of = ROOT
						NOT = { plot_is_known_by = ROOT }
					}

					save_event_target_as = drug_plotter_reveal
					plot_target_char = { save_event_target_as = drug_plotter_target }
				}
			}
			1 = {
				top_liege = {
					random_plotter = {
						limit = {
							same_realm = ROOT
							NOT = { plot_is_known_by = ROOT }
						}

						save_event_target_as = drug_plotter_reveal
						plot_target_char = { save_event_target_as = drug_plotter_target }
					}
				}
			}
		}

		character_event = { id = MNM.68112 }
	}
}

# Four Descs, one or two options
character_event = {
	id = MNM.68112
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_religion
	portrait = event_target:drug_plotter_reveal

	desc = {
		text = EVTDESCA_MNM_68112
		trigger = {
			character = event_target:drug_plotter_target
			event_target:drug_plotter_reveal = {
				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}
			}
		}
	}
	desc = {
		text = EVTDESCB_MNM_68112
		trigger = {
			character = event_target:drug_plotter_target
			event_target:drug_plotter_reveal = {
				NOR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}
			}
		}
	}
	desc = {
		text = EVTDESCC_MNM_68112
		trigger = {
			NOT = { character = event_target:drug_plotter_target }
			event_target:drug_plotter_reveal = {
				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}
			}
		}
	}
	desc = {
		text = EVTDESCD_MNM_68112
		trigger = {
			NOT = { character = event_target:drug_plotter_target }
			event_target:drug_plotter_reveal = {
				NOR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		event_target:drug_plotter_reveal = {
			reveal_plot = ROOT
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_68112
			trigger = {
				character = event_target:drug_plotter_target

				event_target:drug_plotter_reveal = {
					OR = {
						has_plot = plot_kill_character
						has_plot = plot_kill_spouse
					}
				}
			}
		}
		name = {
			text = EVTOPTB_MNM_68112
			trigger = {
				character = event_target:drug_plotter_target

				event_target:drug_plotter_reveal = {
					NOR = {
						has_plot = plot_kill_character
						has_plot = plot_kill_spouse
					}
				}
			}
		}
		name = {
			text = EVTOPTC_MNM_68112
			trigger = {
				NOT = { character = event_target:drug_plotter_target }

				event_target:drug_plotter_reveal = {
					OR = {
						has_plot = plot_kill_character
						has_plot = plot_kill_spouse
					}
				}
			}
		}
		name = {
			text = EVTOPTD_MNM_68112
			trigger = {
				NOT = { character = event_target:drug_plotter_target }

				event_target:drug_plotter_reveal = {
					NOR = {
						has_plot = plot_kill_character
						has_plot = plot_kill_spouse
					}
				}
			}
		}
	}
}

# Gain Relation
# One desc and option
character_event = {
	id = MNM.6812
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESCA_MNM_6812
		picture = GFX_evt_feast
		trigger = { has_character_flag = drug_friend }
	}
	desc = {
		text = EVTDESCB_MNM_6812
		picture = GFX_evt_dark_love
		trigger = { has_character_flag = drug_lover }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { has_character_flag = drug_friend }

			create_character = {
				random_traits = yes
			}

			new_character = {
				remove_trait = trusting
				remove_trait = temperate
				remove_trait = celibate
				remove_trait = diligent
				add_trait = paranoid
				add_trait = gluttonous
				add_trait = hedonist
				add_trait = slothful
				save_event_target_as = slacker_buddy
			}
		}
		else_if = {
			limit = { has_character_flag = drug_lover }

			random_list = {
				50 = {
					trigger = {
						any_spouse = {
							NOT = { is_lover = ROOT }
							opinion = {
								who = ROOT
								value >= 0
							}
						}
					}

					random_spouse = {
						limit = {
							NOT = { is_lover = ROOT }
							opinion = {
								who = ROOT
								value >= 0
							}
						}

						save_event_target_as = drug_new_lover
					}
				}
				25 = {
					trigger = {
						any_courtier = {
							is_valid_romance_target = ROOT

							opinion = {
								who = ROOT
								value >= 0
							}
						}
					}

					random_courtier = {
						limit = {
							is_valid_romance_target = ROOT

							opinion = {
								who = ROOT
								value >= 0
							}
						}

						save_event_target_as = drug_new_lover
					}
				}
				25 = {
					if = {
						limit = { prefers_men_trigger = yes }

						create_character = {
							random_traits = yes
							female = no
						}
					}
					else = {
						create_character = {
							random_traits = yes
							female = yes
						}
					}

					new_character = {
						save_event_target_as = drug_new_lover
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_6812

		trigger = { has_character_flag = drug_friend }

		add_friend = event_target:slacker_buddy
		clr_character_flag = drug_friend
	}

	option = {
		name = EVTOPTB_MNM_6812

		trigger = { has_character_flag = drug_lover }

		add_lover = event_target:drug_new_lover
		clr_character_flag = drug_lover
	}
}

# Cheating Spouse
# One desc and option, separate handling for "real" and "paranoid" affair
character_event = {
	id = MNM.6813
	desc = EVTDESC_MNM_6813
	picture = GFX_evt_dark_love
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { trait = paranoid }

			random_spouse = {
				limit = {
					trigger_if = {
						limit = { has_lover = yes }
						NOT = { is_lover = ROOT }
					}
				}

				save_event_target_as = drug_cheater_spouse
			}

			random_realm_character = {
				limit = {
					same_sex = ROOT
					NOT = { character = ROOT }
				}

				save_event_target_as = drug_cheater_lover
			}
		}
		else = {
			random_spouse = {
				limit = {
					any_lover = {
						NOT = { character = ROOT }
					}
				}

				save_event_target_as = drug_cheater_spouse

				random_lover = {
					limit = { NOT = { character = ROOT } }
					save_event_target_as = drug_cheater_lover
				}
			}
		}
	}

	# reveal
	option = {
		name = EVTOPTA_MNM_6813

		event_target:drug_cheater_lover = {
			show_scope_change = no

			if = {
				limit = { same_sex = event_target:drug_cheater_spouse }

				add_character_modifier = {
					name = known_sodomite
					duration = -1
				}

				event_target:drug_cheater_spouse = {
					show_scope_change = no

					add_character_modifier = {
						name = known_sodomite
						duration = -1
					}
				}
			}
			else_if = {
				limit = { dynasty = event_target:drug_cheater_spouse } # TODO: make sure this doesn't have the 'dynasty = liege' issue

				if = {
					limit = { is_female = no }
					add_character_modifier = {
						name = incestuous_adulterer
						duration = -1
					}
				}
				else = {
					add_character_modifier = {
						name = incestuous_adulteress
						duration = -1
					}
				}

				event_target:drug_cheater_spouse = {
					show_scope_change = no

					if = {
						limit = { is_female = no }
						add_character_modifier = {
							name = incestuous_adulterer
							duration = -1
						}
					}
					else = {
						add_character_modifier = {
							name = incestuous_adulteress
							duration = -1
						}
					}
				}
			}
			else = {
				if = {
					limit = { is_female = no }

					add_character_modifier = {
						name = adulterer
						duration = -1
					}
				}
				else = {
					add_character_modifier = {
						name = adulteress
						duration = -1
					}
				}

				event_target:drug_cheater_lover = {
					show_scope_change = no

					if = {
						limit = { is_female = no }

						add_character_modifier = {
							name = adulterer
							duration = -1
						}
					}
					else = {
						add_character_modifier = {
							name = adulteress
							duration = -1
						}
					}
				}
			}
		}
	}

	# keep to self
	option = {
		name = EVTOPTB_MNM_6813
	}
}

# Make a fool of yourself
# one desc and option
# drug fool
character_event = {
	id = MNM.6814
	desc = EVTDESC_MNM_6814
	picture = GFX_evt_drunk
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6814

		add_character_modifier = {
			name = foolish_behavior
			years = 3
		}

		custom_tooltip = { text = EVTOPTA_MNM_6814_TOOLTIP }
	}
}

# Die
# One Desc and option
character_event = {
	id = MNM.6815
	desc = EVTDESC_MNM_6815
	picture = GFX_evt_impalement
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6815

		death = { death_reason = death_hashish_overdose }
	}
}


# Become cured of a bad trait
character_event = {
	id = MNM.6816
	desc = EVTDESC_MNM_6816
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6816

		trigger = { has_character_flag = drugs_curing_stressed }

		remove_trait = stressed
		clr_character_flag = drugs_curing_stressed
	}

	option = {
		name = EVTOPTB_MNM_6816

		trigger = { has_character_flag = drugs_curing_possessed }

		remove_trait = possessed
		clr_character_flag = drugs_curing_possessed
	}

	option = {
		name = EVTOPTC_MNM_6816

		trigger = { has_character_flag = drugs_curing_depressed }

		remove_trait = depressed
		clr_character_flag = drugs_curing_depressed
	}

	option = {
		name = EVTOPTD_MNM_6816

		trigger = { has_character_flag = drugs_curing_lunatic }

		remove_trait = lunatic
		clr_character_flag = drugs_curing_lunatic
	}
}

# Gain insight
character_event = {
	id = MNM.6817
	desc = EVTDESC_MNM_6817
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6817

		trigger = { has_character_flag = gains_diplomatic_insight_flag }

		clr_character_flag = gains_diplomatic_insight_flag

		trigger_switch = {
			on_trigger = has_character_modifier

			martial_insight     = { remove_character_modifier = martial_insight }
			stewardship_insight = { remove_character_modifier = stewardship_insight }
			intrigue_insight    = { remove_character_modifier = intrigue_insight }
			learning_insight    = { remove_character_modifier = learning_insight }
		}

		add_character_modifier = {
			name = diplomatic_insight
			years = 5
		}
	}

	option = {
		name = EVTOPTB_MNM_6817

		trigger = { has_character_flag = gains_martial_insight_flag }

		clr_character_flag = gains_martial_insight_flag

		trigger_switch = {
			on_trigger = has_character_modifier

			diplomatic_insight  = { remove_character_modifier = diplomatic_insight }
			stewardship_insight = { remove_character_modifier = stewardship_insight }
			intrigue_insight    = { remove_character_modifier = intrigue_insight }
			learning_insight    = { remove_character_modifier = learning_insight }
		}

		add_character_modifier = {
			name = martial_insight
			years = 5
		}
	}

	option = {
		name = EVTOPTA_MNM_6817

		trigger = { has_character_flag = gains_intrigue_insight_flag }

		clr_character_flag = gains_intrigue_insight_flag

		trigger_switch = {
			on_trigger = has_character_modifier

			diplomatic_insight  = { remove_character_modifier = diplomatic_insight }
			martial_insight     = { remove_character_modifier = martial_insight }
			stewardship_insight = { remove_character_modifier = stewardship_insight }
			learning_insight    = { remove_character_modifier = learning_insight }
		}

		add_character_modifier = {
			name = intrigue_insight
			years = 5
		}
	}

	option = {
		name = EVTOPTD_MNM_6817

		trigger = { has_character_flag = gains_learning_insight_flag }

		clr_character_flag = gains_learning_insight_flag

		trigger_switch = {
			on_trigger = has_character_modifier

			diplomatic_insight  = { remove_character_modifier = diplomatic_insight }
			martial_insight     = { remove_character_modifier = martial_insight }
			stewardship_insight = { remove_character_modifier = stewardship_insight }
			intrigue_insight    = { remove_character_modifier = intrigue_insight }
		}

		add_character_modifier = {
			name = learning_insight
			years = 5
		}
	}

	option = {
		name = EVTOPTE_MNM_6817

		trigger = { has_character_flag = gains_stewardship_insight_flag }

		clr_character_flag = gains_stewardship_insight_flag

		trigger_switch = {
			on_trigger = has_character_modifier

			diplomatic_insight = { remove_character_modifier = diplomatic_insight }
			martial_insight    = { remove_character_modifier = martial_insight }
			intrigue_insight   = { remove_character_modifier = intrigue_insight }
			learning_insight   = { remove_character_modifier = learning_insight }
		}

		add_character_modifier = {
			name = stewardship_insight
			years = 5
		}
	}
}

# Cure your illness
character_event = {
	id = MNM.6818
	desc = EVTDESC_MNM_6818
	picture = GFX_evt_dark_prayer
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6818

		remove_disease_trait_effect = yes
	}
}


# POWER: Intimidate for favor
character_event = {
	id = MNM.6840
	desc = EVTDESC_MNM_6840
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # mnm_assassins_decisions.txt

	option = {
		name = EVTOPTA_MNM_6840

		tooltip = {
			reverse_add_favor = FROMFROM
		}

		opinion = {
			name = opinion_threatened_me
			who = FROMFROM
			years = 5
		}

		FROMFROM = { character_event = { id = MNM.6841 } }
	}
}

character_event = {
	id = MNM.6841
	desc = EVTDESC_MNM_6841
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_MNM_6841

		tooltip = {
			add_favor = FROM

			reverse_opinion = {
				name = opinion_threatened_me
				who = FROM
				years = 5
			}
		}
	}
}

# Fail
character_event = {
	id = MNM.6980
	desc = EVTDESC_MNM_6980
	picture = GFX_evt_uncomfortable
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # mnm_assassins_decisions.txt

	ai = no

	option = {
		name = CURSES

		tooltip = {
			reverse_opinion = {
				name = opinion_threatened_me
				who = FROM
				years = 5
			}
		}
	}
}

# POWER: mark of death
# Confirmation of mark
character_event = {
	id = MNM.6842
	desc = EVTDESC_MNM_6842
	picture = GFX_evt_assassination
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes # assassins_mark_for_death, mnm_assassins_decisions.txt

	ai = no

	option = {
		name = EXCELLENT
	}
}

# Confirmation of kill
letter_event = {
	id = MNM.6843
	desc = EVTDESC_MNM_6843
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	ai = no

	option = {
		name = EXCELLENT
	}
}

# Clearing the flag from GM
character_event = {
	id = MNM.6844

	hide_window = yes
	is_triggered_only = yes # on_death

	trigger = { has_character_flag = assassins_target_marked_for_death }

	immediate = {
		the_assassins = {
			leader = {
				clr_character_flag = assassins_marked_someone_for_death
			}
		}
	}
}


# MISSION: Train a protege
society_quest_event = {
	id = MNM.6249
	title = quest_the_assassins_protege
	desc = EVTDESC_MNM_6249
	portrait = event_target:grand_master

	is_triggered_only = yes

	option = {
		name = ACCEPT

		set_quest = quest_the_assassins_protege

		character_event = {
			id = MNM.6250
			days = 14
			random = 60
		}
	}

	option = {
		name = DECLINE

		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			days = 1000
			hidden = yes
		}

		ai_chance = { factor = 0 }
	}
}

# Choose a child to train / A child is caught trying to pickpocket you
character_event = {
	id = MNM.6250
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassin_protege

	desc = {
		text = EVTDESC_MNM_6250_A
		trigger = {
			OR = {
				event_target:assassin_protege_1 = { always = yes }
				event_target:assassin_protege_2 = { always = yes }
				event_target:assassin_protege_3 = { always = yes }
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6250_B
		trigger = {
			NOR = {
				event_target:assassin_protege_1 = { always = yes }
				event_target:assassin_protege_2 = { always = yes }
				event_target:assassin_protege_3 = { always = yes }
			}
		}
	}

	is_triggered_only = yes # train_assassin_protege, mnm_assassins_decisions.txt; above
	hide_new = yes
	hide_from = yes

	trigger = {
		NOT = { has_character_flag = training_protege }
	}

	immediate = {
		hidden_effect = {
			set_character_flag = training_protege

			if = {
				limit = { has_character_flag = is_using_train_protege_decision }
				event_target:assassin_protege = { save_event_target_as = assassin_protege_1 } # for text purposes
			}
			else = { # Means you got this as a pulse-event
				random_child = {
					limit = {
						age >= 12
						age < 21
						is_ruler = no
						is_abroad = no
						NOT = { any_spouse = { is_landed = yes } }

						trigger_if = {
							limit = { is_female = yes }
							gender_equality_trigger = yes
						}
					}

					save_event_target_as = assassin_protege_1
				}

				random_child = {
					limit = {
						age >= 12
						age < 21
						is_ruler = no
						is_abroad = no

						NOR = {
							character = event_target:assassin_protege_1
							any_spouse = { is_landed = yes }
						}

						trigger_if = {
							limit = { is_female = yes }
							gender_equality_trigger = yes
						}
					}

					save_event_target_as = assassin_protege_2
				}

				random_child = {
					limit = {
						age >= 12
						age < 21
						is_ruler = no
						is_abroad = no

						NOR = {
							character = event_target:assassin_protege_1
							character = event_target:assassin_protege_2
							any_spouse = { is_landed = yes }
						}

						trigger_if = {
							limit = { is_female = yes }
							gender_equality_trigger = yes
						}
					}
					save_event_target_as = assassin_protege_3
				}

				if = {
					limit = {
						NOR = {
							event_target:assassin_protege_1 = { always = yes }
							event_target:assassin_protege_2 = { always = yes }
							event_target:assassin_protege_3 = { always = yes }
						}
					}

					random_list = {
						50 = {
							trigger = {
								gender_equality_trigger = yes
							}

							create_character = {
								age = 12
								female = yes
								dynasty = none
								religion = ROOT
								culture = ROOT
								race = ROOT
								random_traits = yes

								attributes = {
									intrigue = 4
								}
							}
						}

						50 = {
							create_character = {
								age = 12
								female = no
								dynasty = none
								religion = ROOT
								culture = ROOT
								race = ROOT
								random_traits = yes

								attributes = {
									intrigue = 4
								}
							}
						}
					}

					new_character = {
						save_event_target_as = assassin_protege
					}
				}
			}
		}
	}

	option = { # Begin training (ONLY for those who used the targeted decision to start this)
		name = EVTOPTA_MNM_6250
		show_portrait = event_target:assassin_protege

		trigger = { has_character_flag = is_using_train_protege_decision }

		custom_tooltip = { text = EVTOPTA_MNM_6250_TT }
		clr_character_flag = is_using_train_protege_decision

		if = {
			limit = { is_parent_of = event_target:assassin_protege }

			reverse_opinion = {
				name = opinion_parental_praise
				who = event_target:assassin_protege
				years = 5
			}
		}
	}

	option = { # Choose random child 1
		name = EVTOPTA_MNM_6250

		trigger = {
			event_target:assassin_protege_1 = { always = yes }
		}

		custom_tooltip = { text = EVTOPTA_MNM_6250_TT }

		event_target:assassin_protege_1 = {
			show_scope_change = no

			opinion = {
				name = opinion_parental_praise
				who = ROOT
				years = 5
			}

			save_event_target_as = assassin_protege
		}
	}

	option = { # Choose random child 2
		name = EVTOPTB_MNM_6250

		trigger = {
			event_target:assassin_protege_2 = { always = yes }
		}

		custom_tooltip = { text = EVTOPTB_MNM_6250_TT }

		event_target:assassin_protege_2 = {
			show_scope_change = no

			opinion = {
				name = opinion_parental_praise
				who = ROOT
				years = 5
			}

			save_event_target_as = assassin_protege
		}
	}

	option = { # Choose random child 3
		name = EVTOPTC_MNM_6250

		trigger = {
			event_target:assassin_protege_3 = { always = yes }
		}

		custom_tooltip = { text = EVTOPTC_MNM_6250_TT }

		event_target:assassin_protege_3 = {
			show_scope_change = no

			opinion = {
				name = opinion_parental_praise
				who = ROOT
				years = 5
			}

			save_event_target_as = assassin_protege
		}
	}

	option = { # Take the child under your wing
		name = EVTOPTD_MNM_6250

		trigger = {
			NOR = {
				event_target:assassin_protege_1 = { always = yes }
				event_target:assassin_protege_2 = { always = yes }
				event_target:assassin_protege_3 = { always = yes }
			}
		}

		custom_tooltip = { text = EVTOPTD_MNM_6250_TT }

		set_character_flag = apprentice_is_not_bloodrelation

		reverse_opinion = {
			name = opinion_was_shown_mercy
			who = event_target:assassin_protege
			years = 5
		}
	}

	option = { # Imprison the urchin!
		name = EVTOPTE_MNM_6250

		trigger = {
			NOR = {
				event_target:assassin_protege_1 = { always = yes }
				event_target:assassin_protege_2 = { always = yes }
				event_target:assassin_protege_3 = { always = yes }
			}
		}

		custom_tooltip = { text = EVTOPTE_MNM_6250_TT }

		clr_quest = {
			id = quest_the_assassins_protege
			failure = yes
		}

		hidden_effect = {
			reverse_imprison = event_target:assassin_protege
			clear_event_target = assassin_protege
		}
	}

	option = { # You are busy right now
		name = EVTOPTF_MNM_6250

		trigger = {
			OR = {
				event_target:assassin_protege_1 = { always = yes }
				event_target:assassin_protege_2 = { always = yes }
				event_target:assassin_protege_3 = { always = yes }
			}
		}

		custom_tooltip = { text = EVTOPTF_MNM_6250_TT }

		clr_quest = {
			id = quest_the_assassins_protege
			failure = yes
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					event_target:assassin_protege = { always = yes }
				}

				event_target:assassin_protege = {
					show_scope_change = no

					set_quest_target = {
						id = quest_the_assassins_protege
						society = the_assassins
						holder = ROOT
					}
				}

				character_event = {
					id = MNM.6252 # specialization event
					months = 2
					random = 20
				}
			}
		}
	}
}

character_event = { # choose specialization for kid
	id = MNM.6252
	desc = EVTDESC_MNM_6252
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassin_protege

	is_triggered_only = yes

	has_character_flag = training_protege

	option = { # intrigue focus
		name = EVTOPTA_MNM_6252

		custom_tooltip = { text = EVTOPTA_MNM_6252_TT }

		set_character_flag = chose_intrigue_focus
	}

	option = { # martial focus
		name = EVTOPTB_MNM_6252

		custom_tooltip = { text = EVTOPTB_MNM_6252_TT }

		set_character_flag = chose_martial_focus
	}

	option = { # even focus
		name = EVTOPTC_MNM_6252

		custom_tooltip = { text = EVTOPTC_MNM_6252_TT }

		set_character_flag = chose_even_focus
	}

	after = {
		character_event = {
			id = MNM.6253
			months = 3
			random = 60
		}
	}
}

character_event = { # they are hard at work and time has come for a test
	id = MNM.6253
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassin_protege

	desc = {
		text = EVTDESC_MNM_6253_A
		trigger = {	has_character_flag = chose_intrigue_focus }
	}
	desc = {
		text = EVTDESC_MNM_6253_B
		trigger = {	has_character_flag = chose_martial_focus }
	}
	desc = {
		text = EVTDESC_MNM_6253_C
		trigger = {	has_character_flag = chose_even_focus }
	}

	is_triggered_only = yes

	has_character_flag = training_protege

	option = {
		name = EVTOPTA_MNM_6253

		custom_tooltip = { text = EVTOPTA_MNM_6253_TT }

		trigger_switch = {
			on_trigger = has_character_flag

			chose_intrigue_focus = {
				event_target:assassin_protege = {
					show_scope_change = no

					add_trait_partially_deceitful_effect = yes
				}
			}

			chose_martial_focus = {
				event_target:assassin_protege = {
					show_scope_change = no

					add_trait_partially_brave_effect = yes
				}
			}

			chose_even_focus = {
				event_target:assassin_protege = {
					show_scope_change = no

					add_trait_partially_diligent_effect = yes
				}
			}
		}

		hidden_effect = {
			random_list = {
				10 = {
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 3 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 4 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 5 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 6 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 7 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 8 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 9 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { martial >= 10 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 3 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 4 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 5 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 6 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 7 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 8 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 9 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { intrigue >= 10 }
					}
					mult_modifier = {
						factor = 1.1
						event_target:assassin_protege = { trait = deceitful }
					}
					mult_modifier = {
						factor = 1.5
						event_target:assassin_protege = {
							OR = {
								trait = shrewd
								trait = quick
								trait = genius
							}
						}
					}

					character_event = { id = MNM.6254 days = 5 } # good outcome 1
				}

				10 = {
					character_event = { id = MNM.6255 days = 5 } # mediocre outcome 1
				}

				5 = {
					mult_modifier = {
						factor = 10
						event_target:assassin_protege = {
							OR = {
								trait = slow
								trait = imbecile
								trait = dull
							}
						}
					}

					character_event = { id = MNM.6256 days = 5 } # bad outcome 1
				}
			}
		}
	}
}

character_event = { # good outcome
	id = MNM.6254
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassin_protege

	desc = {
		text = EVTDESC_MNM_6254_A
		trigger = { has_character_flag = chose_intrigue_focus }
	}
	desc = {
		text = EVTDESC_MNM_6254_B
		trigger = { has_character_flag = chose_martial_focus }
	}
	desc = {
		text = EVTDESC_MNM_6254_C
		trigger = { has_character_flag = chose_even_focus }
	}

	hide_from = yes
	is_triggered_only = yes

	has_character_flag = training_protege

	option = {
		name = EVTOPTA_MNM_6254

		custom_tooltip = { text = EVTOPTA_MNM_6254_TT }

		set_character_flag = apprentice_did_great

		character_event = { id = MNM.6259 days = 25 }
	}
}

character_event = { # mediocre outcome
	id = MNM.6255
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassin_protege

	desc = {
		text = EVTDESC_MNM_6255_A
		trigger = { has_character_flag = chose_intrigue_focus }
	}
	desc = {
		text = EVTDESC_MNM_6255_B
		trigger = { has_character_flag = chose_martial_focus }
	}
	desc = {
		text = EVTDESC_MNM_6255_C
		trigger = { has_character_flag = chose_even_focus }
	}

	hide_from = yes
	is_triggered_only = yes

	has_character_flag = training_protege

	option = {
		name = EVTOPTA_MNM_6255

		custom_tooltip = { text = EVTOPTA_MNM_6255_TT }

		set_character_flag = apprentice_did_ok

		event_target:assassin_protege = {
			show_scope_change = no

			add_maimed_trait_effect = yes
		}

		character_event = { id = MNM.6259 days = 25 }
	}
}

character_event = { # bad outcome
	id = MNM.6256
	desc = EVTDESC_MNM_6256
	picture = GFX_evt_assassination
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassin_protege

	hide_from = yes
	is_triggered_only = yes

	has_character_flag = training_protege

	option = {
		name = EVTOPTA_MNM_6256

		trigger = {
			event_target:assassin_protege = {
				NOT = { is_child_of = ROOT }
			}
		}

		custom_tooltip = { text = EVTOPTA_MNM_6256_TT }
	}

	option = {
		name = EVTOPTB_MNM_6256

		trigger = {
			event_target:assassin_protege = {
				is_child_of = ROOT
			}
		}

		custom_tooltip = { text = EVTOPTB_MNM_6256_TT }
	}

	after = {
		set_character_flag = apprentice_failed_miserably

		event_target:assassin_protege = {
			show_scope_change = no

			death = {
				death_reason = death_murder_unknown
				killer = ROOT
			}
		}

		character_event = { id = MNM.6259 days = 10 }
	}
}

character_event = { # Conversion event (for apprentice) if they are not already Shia (sent from MNM.6052)
	id = MNM.6258
	desc = EVTDESC_MNM_6258
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	trigger = {
		NOT = { true_religion = shiite }
	}

	option = { # I (apprentice)  will convert
		name = EVTOPTA_MNM_6258

		# Workaround for automatic usurpation of theocratic characters
		shiite = { save_event_target_as = target_religion }

		convert_religion_failsafe_effect = yes

		ai_chance = {
			factor = 20

			mult_modifier = {
				factor = 2
				true_religion_group = muslim
			}
			mult_modifier = {
				factor = 2
				independent = yes
			}
			mult_modifier = {
				factor = 2
				trait = brave
			}
			mult_modifier = {
				factor = 2
				trait = honest
			}
		}
	}

	option = { # I (apprentice) will convert, secretly
		name = EVTOPTB_MNM_6258

		clear_secret_religion = yes
		set_secret_religion = shiite

		ai_chance = {
			factor = 80

			mult_modifier = {
				factor = 2
				trait = craven
			}
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
		}
	}
}

character_event = { # Final talk with apprentice
	id = MNM.6259
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassin_protege

	hide_from = yes
	is_triggered_only = yes

	has_character_flag = training_protege

	trigger = {
		trigger_if = {
			limit = {
				event_target:assassin_protege = { is_alive = no }
			}

			has_character_flag = apprentice_failed_miserably
		}
	}

	immediate = {
		if = {
			limit = { has_character_flag = apprentice_failed_miserably }
			clr_character_flag = training_protege # to block extra fallback spam
		}
	}

	desc = {
		text = EVTDESC_MNM_6259_A # apprentice is a fine example and already a believer
		trigger = {
			has_character_flag = apprentice_did_great
			event_target:assassin_protege = { true_religion = shiite }
		}
	}
	desc = {
		text = EVTDESC_MNM_6259_B # Apprentice has done alright, all things considered
		trigger = {
			has_character_flag = apprentice_did_ok
			event_target:assassin_protege = { true_religion = shiite }
		}
	}
	desc = {
		text = EVTDESC_MNM_6259_C # apprentice is dead, might I train a new one?
		trigger = { has_character_flag = apprentice_failed_miserably }
	}
	desc = {
		text = EVTDESC_MNM_6259_D # apprentice is a fine example and already a believer
		trigger = {
			has_character_flag = apprentice_did_great
			event_target:assassin_protege = { true_religion = shiite }
		}
	}
	desc = {
		text = EVTDESC_MNM_6259_E # Apprentice has done alright, all things considered AND will convert
		trigger = {
			has_character_flag = apprentice_did_ok
			event_target:assassin_protege = { true_religion = shiite }
		}
	}

	option = {
		name = EVTOPTA_MNM_6259 # Great!
		show_portrait = event_target:assassin_protege

		trigger = { has_character_flag = apprentice_did_great }

		clr_quest = quest_the_assassins_protege
		sound_effect = assassins_train_protege
		add_society_currency_medium_effect = yes

		event_target:assassin_protege = {
			show_scope_change = no

			set_character_flag = was_trained_as_assassin_protege

			if = {
				limit = {
					NOT = { true_religion = shiite }
				}

				custom_tooltip = { text = 6252_CONVERT_APPRENTICE_TT_2 }
				character_event = { id = MNM.6258 } # convert
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_6259 # OK
		show_portrait = event_target:assassin_protege

		trigger = { has_character_flag = apprentice_did_ok }

		clr_quest = quest_the_assassins_protege
		sound_effect = assassins_train_protege
		add_society_currency_minor_effect = yes

		event_target:assassin_protege = {
			show_scope_change = no

			set_character_flag = was_trained_as_assassin_protege

			if = {
				limit = {
					NOT = { true_religion = shiite }
				}

				custom_tooltip = { text = 6252_CONVERT_APPRENTICE_TT_2 }
				character_event = { id = MNM.6258 } # convert
			}
		}
	}

	option = {
		name = EVTOPTC_MNM_6259 # Typical
		show_portrait = event_target:assassin_protege

		trigger = { has_character_flag = apprentice_failed_miserably }

		clr_quest = {
			id = quest_the_assassins_protege
			failure = yes
		}
	}

	after = {
		clr_character_flag = training_protege
		clr_character_flag = chose_intrigue_focus
		clr_character_flag = chose_martial_focus
		clr_character_flag = chose_even_focus
		clr_character_flag = apprentice_is_not_bloodrelation
		clr_character_flag = apprentice_did_great
		clr_character_flag = apprentice_did_ok
		clr_character_flag = apprentice_failed_miserably
	}
}


character_event = { # Fallback - apprentice has died somehow during chain
	id = MNM.6260
	picture = GFX_evt_secret_ceremony
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6260_A
		trigger = { NOT = { has_character_flag = apprentice_is_not_bloodrelation } }
	}
	desc = {
		text = EVTDESC_MNM_6260_B
		trigger = { has_character_flag = apprentice_is_not_bloodrelation }
	}

	is_triggered_only = yes

	has_character_flag = training_protege

	option = {
		name = EVTOPTA_MNM_6260 # Drat

		clr_quest = {
			id = quest_the_assassins_protege
			failure = yes
		}

		clr_character_flag = training_protege
		clr_character_flag = chose_intrigue_focus
		clr_character_flag = chose_martial_focus
		clr_character_flag = chose_even_focus
		clr_character_flag = apprentice_is_not_bloodrelation
		clr_character_flag = apprentice_did_great
		clr_character_flag = apprentice_did_ok
		clr_character_flag = apprentice_failed_miserably
	}
}

### INTERACTIONS###

# Interaction: Friend or foe?

# They're so infuriating! What do?
character_event = {
	id = MNM.6900
	desc = EVTDESC_MNM_6900
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_war
	portrait = event_target:friend_or_foe

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	has_dlc = "Mystics"
	min_age = 16
	only_playable = yes
	only_capable = yes
	prisoner = no
	is_in_society = yes


	trigger = {
		society_member_of = the_assassins

		NOR = {
			has_character_modifier = won_duel
			has_character_modifier = outwitted_opponent
			has_character_modifier = focused_on_training
		}

		society = {
			any_society_member = {
				block_general_event_trigger = no
				ai = yes
				ROOT = { same_society_rank_as_prev_trigger = yes }

				NOR = {
					character = ROOT
					is_rival = ROOT
					is_friend = ROOT
					is_lover = ROOT
					is_close_relative = ROOT
				}
			}
		}
	}

	immediate = {
		society = {
			random_society_member = {
				limit = {
					block_general_event_trigger = no
					ai = yes
					ROOT = { same_society_rank_as_prev_trigger = yes }

					NOR = {
						character = ROOT
						is_rival = ROOT
						is_friend = ROOT
						is_lover = ROOT
						is_close_relative = ROOT
					}
				}

				preferred_limit = {
					age_diff = { who = ROOT years >= 5 }
				}

				save_event_target_as = friend_or_foe
			}
		}
	}

	# Challenge him/her
	option = {
		name = EVTOPTA_MNM_6900

		custom_tooltip = { text = EVTOPTA_MNM_6900_TT }

		hidden_effect = {
			random_list = {
				1 = { # Win - outwit
					mult_modifier = {
						factor = 2
						is_smart_trigger = yes
					}
					mult_modifier = {
						factor = 2
						event_target:friend_or_foe = { is_dumb_trigger = yes }
					}
					mult_modifier = {
						factor = 2
						trait = erudite
					}
					mult_modifier = {
						factor = 2
						attribute_diff = {
							character = event_target:friend_or_foe
							attribute = intrigue
							value >= 3
						}
					}

					set_character_flag = won_outwit

					random_list = {
						75 = { set_character_flag = modifier_outwit }

						25 = {
							trigger = {
								is_smart_trigger = no
								is_dumb_trigger = no
							}

							set_character_flag = trait_shrewd
						}
					}
				}

				1 = { # Win - outstrong
					mult_modifier = {
						factor = 2
						is_strong_trigger = yes
					}
					mult_modifier = {
						factor = 2
						event_target:friend_or_foe = { is_weak_trigger = yes }
					}
					mult_modifier = {
						factor = 2
						combat_rating_diff = {
							who = event_target:friend_or_foe
							value >= 10
						}
					}
					mult_modifier = {
						factor = 2
						attribute_diff = {
							character = event_target:friend_or_foe
							attribute = martial
							value >= 3
						}
					}

					set_character_flag = won_outstrong

					random_list = {
						75 = { set_character_flag = modifier_outstrong }

						25 = {
							trigger = {
								is_strong_trigger = no
								is_weak_trigger = no
							}

							set_character_flag = trait_brawny
						}
					}
				}

				2 = { set_character_flag = draw }

				1 = { # Lose - outwit
					mult_modifier = {
						factor = 2
						event_target:friend_or_foe = { is_smart_trigger = yes }
					}
					mult_modifier = {
						factor = 2
						is_dumb_trigger = yes
					}
					mult_modifier = {
						factor = 2
						event_target:friend_or_foe = { trait = erudite }
					}
					mult_modifier = {
						factor = 2
						attribute_diff = {
							character = event_target:friend_or_foe
							attribute = intrigue
							value <= -3
						}
					}

					set_character_flag = lost_outwit
				}
				1 = { # Lose - outstrong
					mult_modifier = {
						factor = 2
						event_target:friend_or_foe = { is_strong_trigger = yes }
					}
					mult_modifier = {
						factor = 2
						is_weak_trigger = yes
					}
					mult_modifier = {
						factor = 2
						combat_rating_diff = {
							who = event_target:friend_or_foe
							value <= -10
						}
					}
					mult_modifier = {
						factor = 2
						attribute_diff = {
							character = event_target:friend_or_foe
							attribute = martial
							value <= -3
						}
					}

					set_character_flag = lost_outstrong
				}
			}

			random_list = {
				50 = {
					mult_modifier = {
						factor = 2
						event_target:friend_or_foe = { is_benevolent_trigger = yes }
					}
					mult_modifier = {
						factor = 1.3
						event_target:friend_or_foe = { has_pleasant_personality_trigger = yes }
					}
					mult_modifier = {
						factor = 1.3
						event_target:friend_or_foe = { trait = content }
					}
					mult_modifier = {
						factor = 1.5
						reverse_opinion = {
							who = event_target:friend_or_foe
							value >= 30
						}
					}

					set_character_flag = nice_opponent
				}
				50 = {
					mult_modifier = {
						factor = 2
						event_target:friend_or_foe = { is_evil_trigger = yes }
					}
					mult_modifier = {
						factor = 1.3
						event_target:friend_or_foe = { has_unpleasant_personality_trigger = yes }
					}
					mult_modifier = {
						factor = 1.2
						event_target:friend_or_foe = { trait = ambitious }
					}
					mult_modifier = {
						factor = 1.3
						reverse_opinion = {
							who = event_target:friend_or_foe
							value < 0
						}
					}

					set_character_flag = mean_opponent
				}
			}

			# Challenge is set
			character_event = { id = MNM.6908 days = 14 }

			# Outcome
			if = { # Mean win
				limit = {
					has_character_flag = mean_opponent

					OR = {
						has_character_flag = won_outwit
						has_character_flag = won_outstrong
					}
				}

				character_event = { id = MNM.6904 days = 20 }
			}
			else_if = { # Mean lose
				limit = {
					has_character_flag = mean_opponent

					OR = {
						has_character_flag = lost_outwit
						has_character_flag = lost_outstrong
					}
				}

				character_event = { id = MNM.6905 days = 20 }
			}
			else = { # Nice win/lose & draw
				character_event = { id = MNM.6903 days = 20 }
			}
		}
	}

	# Ignore him/her
	option = {
		name = EVTOPTB_MNM_6900

		custom_tooltip = { text = EVTOPTB_MNM_6900_TT }

		reverse_opinion = {
			name = opinion_very_disappointed
			who = event_target:friend_or_foe
			years = 10
		}

		add_character_modifier = {
			name = focused_on_training
			years = 5
		}
	}
}

character_event = {
	id = MNM.6908
	picture = GFX_evt_market_byzantine
	border = GFX_event_normal_frame_war
	portrait = event_target:friend_or_foe

	desc = {
		text = EVTDESC_MNM_6908_A
		picture = GFX_evt_market_byzantine
		trigger = {
			OR = {
				has_character_flag = won_outwit
				has_character_flag = lost_outwit
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_6908_B
		picture = GFX_evt_melee
		trigger = {
			OR = {
				has_character_flag = lost_outstrong
				has_character_flag = won_outstrong
				has_character_flag = draw
			}
		}
	}

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_MNM_6908

		custom_tooltip = { text = EVTOPTA_MNM_6908_TT }
	}
}

# Nice win/draw/nice lose
character_event = {
	id = MNM.6903
	border = GFX_event_normal_frame_diplomacy
	picture = GFX_evt_market_byzantine
	portrait = event_target:friend_or_foe

	desc = {
		text = EVTDESC_MNM_6903_A
		picture = GFX_evt_market_byzantine
		trigger = { has_character_flag = won_outwit }
	}
	desc = {
		text = EVTDESC_MNM_6903_B
		picture = GFX_evt_melee
		trigger = { has_character_flag = won_outstrong }
	}
	desc = {
		text = EVTDESC_MNM_6903_C
		picture = GFX_evt_melee
		trigger = { has_character_flag = draw }
	}
	desc = {
		text = EVTDESC_MNM_6903_D
		picture = GFX_evt_market_byzantine
		trigger = { has_character_flag = lost_outwit }
	}
	desc = {
		text = EVTDESC_MNM_6903_E
		picture = GFX_evt_melee
		trigger = { has_character_flag = lost_outstrong }
	}

	is_triggered_only = yes

	# Friends
	option = {
		name = EVTOPTA_MNM_6903

		add_friend = event_target:friend_or_foe
	}

	# Love?
	option = {
		name = EVTOPTB_MNM_6903

		trigger = {
			event_target:friend_or_foe = { root_attraction_trigger = yes }
		}

		custom_tooltip = { text = EVTOPTB_MNM_6903_TT }

		event_target:friend_or_foe = {
			character_event = { id = MNM.6906 days = 3 }
		}

		ai_chance = {
			factor = 1

			trigger = {
				OR = {
					trait = lustful

					AND = {
						has_lover = no
						is_married = yes
					}

					event_target:friend_or_foe = { has_attractive_trait_trigger = yes }
				}
			}
		}
	}

	# Glory
	option = {
		name = EVTOPTC_MNM_6903

		trigger = {
			OR = {
				has_character_flag = won_outwit
				has_character_flag = won_outstrong
			}
		}

		custom_tooltip = { text = EVTOPTC_MNM_6903_TT }

		prestige = 100
		add_society_currency_major_effect = yes
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			modifier_outwit = {
				clr_character_flag = modifier_outwit

				add_character_modifier = {
					name = outwitted_opponent
					years = 10
				}
			}

			trait_shrewd = {
				clr_character_flag = trait_shrewd
				add_trait = shrewd
			}

			modifier_outstrong = {
				clr_character_flag = modifier_outstrong

				add_character_modifier = {
					name = won_duel
					years = 10
				}
			}

			trait_brawny = {
				clr_character_flag = trait_brawny
				add_trait = brawny
			}
		}

		clr_character_flag = won_outwit
		clr_character_flag = won_outstrong
		clr_character_flag = draw
		clr_character_flag = lost_outwit
		clr_character_flag = lost_outstrong
		clr_character_flag = nice_opponent
		clr_character_flag = mean_opponent
	}
}

# Mean win
character_event = {
	id = MNM.6904
	border = GFX_event_normal_frame_war
	picture = GFX_evt_market_byzantine
	portrait = event_target:friend_or_foe

	desc = {
		text = EVTDESC_MNM_6904_A
		picture = GFX_evt_market_byzantine
		trigger = { has_character_flag = won_outwit }
	}
	desc = {
		text = EVTDESC_MNM_6904_B
		picture = GFX_evt_melee
		trigger = { has_character_flag = won_outstrong }
	}

	is_triggered_only = yes

	# Beat
	option = {
		name = EVTOPTA_MNM_6904

		custom_tooltip = { text = EVTOPTA_MNM_6904_TT }

		add_rival = event_target:friend_or_foe

		event_target:friend_or_foe = {
			show_scope_change = no

			add_trait_silently_wounded_effect = yes
		}
	}

	# Let it be
	option = {
		name = EVTOPTB_MNM_6904

		custom_tooltip = { text = EVTOPTB_MNM_6904_TT }

		prestige = 100
		add_society_currency_major_effect = yes
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			modifier_outwit = {
				clr_character_flag = modifier_outwit

				add_character_modifier = {
					name = outwitted_opponent
					years = 10
				}
			}

			trait_shrewd = {
				clr_character_flag = trait_shrewd
				add_trait = shrewd
			}

			modifier_outstrong = {
				clr_character_flag = modifier_outstrong

				add_character_modifier = {
					name = won_duel
					years = 10
				}
			}

			trait_brawny = {
				clr_character_flag = trait_brawny
				add_trait = brawny
			}
		}

		clr_character_flag = won_outwit
		clr_character_flag = won_outstrong
		clr_character_flag = mean_opponent
	}
}

# Mean lose
character_event = {
	id = MNM.6905
	border = GFX_event_normal_frame_war
	picture = GFX_evt_assassination
	portrait = event_target:friend_or_foe

	desc = {
		text = EVTDESC_MNM_6905_A
		picture = GFX_evt_assassination
		trigger = { has_character_flag = lost_outwit }
	}
	desc = {
		text = EVTDESC_MNM_6905_B
		picture = GFX_evt_melee
		trigger = { has_character_flag = lost_outstrong }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_6905

		add_rival = event_target:friend_or_foe
		add_trait_silently_wounded_effect = yes
	}

	after = {
		clr_character_flag = lost_outwit
		clr_character_flag = lost_outstrong
		clr_character_flag = mean_opponent
		clr_character_flag = modifier_outwit
		clr_character_flag = trait_shrewd
		clr_character_flag = modifier_outstrong
		clr_character_flag = trait_brawny
	}
}

# Love ping event
# CleanSlate: This event is used by other societies as well
character_event = {
	id = MNM.6906

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = { # Not interested
				trigger = {
					trigger_if = {
						limit = { trait = homosexual }
						is_opposite_sex = FROM
					}
				}

				mult_modifier = {
					factor = 2
					is_married = yes
				}
				mult_modifier = {
					factor = 4
					has_lover = yes
				}
				mult_modifier = {
					factor = 4
					trait = chaste
				}
				mult_modifier = {
					factor = 10
					trait = celibate
				}
				mult_modifier = {
					factor = 2
					has_unpleasant_trait_trigger = yes
				}
				mult_modifier = {
					factor = 2
					opinion = { who = FROM value < 20 }
				}
				mult_modifier = {
					factor = 0.5
					NOT = { trait = homosexual }
					is_opposite_sex = FROM
				}

				set_character_flag = not_interested
			}

			50 = { # Interested
				mult_modifier = {
					factor = 4
					trait = lustful
				}
				mult_modifier = {
					factor = 2
					has_pleasant_trait_trigger = yes
				}
				mult_modifier = {
					factor = 2
					opinion = { who = FROM value >= 40 }
				}
				mult_modifier = {
					factor = 3
					FROM = { has_attractive_trait_trigger = yes }
				}

				set_character_flag = interested

				if = {
					limit = { same_sex = FROM }
					add_trait = homosexual
				}
			}
		}

		FROM = { character_event = { id = MNM.6907 } }
	}
}

# Love outcome
character_event = {
	id = MNM.6907
	border = GFX_event_normal_frame_diplomacy
	picture = GFX_evt_lovers

	desc = {
		text = EVTDESC_MNM_6907_A
		picture = GFX_evt_courtiers_talking
		trigger = { FROM = { has_character_flag = not_interested } }
	}
	desc = {
		text = EVTDESC_MNM_6907_B
		picture = GFX_evt_lovers
		trigger = { FROM = { has_character_flag = interested } }
	}

	is_triggered_only = yes

	# Friends instead?
	option = {
		name = EVTOPTC_MNM_6907

		trigger = { FROM = { has_character_flag = not_interested } }

		add_friend = FROM
	}

	# Nah
	option = {
		name = EVTOPTA_MNM_6907

		trigger = { FROM = { has_character_flag = not_interested } }

		opinion = {
			name = opinion_distressing_encounter
			who = FROM
			years = 5
		}
		reverse_opinion = {
			name = opinion_distressing_encounter
			who = FROM
			years = 5
		}
	}

	# Love
	option = {
		name = EVTOPTB_MNM_6907

		trigger = { FROM = { has_character_flag = interested } }

		add_lover = FROM
	}

	after = {
		FROM = {
			clr_character_flag = not_interested
			clr_character_flag = interested
		}
	}
}

# Interaction: Help someone's murder plot
character_event = {
	id = MNM.6910
	desc = EVTDESC_MNM_6912
	picture = GFX_evt_assassination
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:assassins_plotter

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	min_age = 16
	only_playable = yes
	only_capable = yes
	prisoner = no
	is_in_society = yes

	trigger = {
		society_member_of = the_assassins

		society = {
			any_society_member = {
				block_general_event_trigger = no
				ai = yes
				society_rank >= 2
				has_quest = quest_the_assassins_assassination
				plot_target_char = { is_quest_target_of = PREV }
				NOT = { any_plot_backer = { character = ROOT } }

				OR = {
					has_plot = plot_kill_character
					has_plot = plot_kill_spouse
				}
			}
		}
	}

	immediate = {
		society = {
			random_society_member = {
				limit = {
					block_general_event_trigger = no
					ai = yes
					society_rank >= 2
					has_quest = quest_the_assassins_assassination
					plot_target_char = { is_quest_target_of = PREV }
					NOT = { any_plot_backer = { character = ROOT } }

					OR = {
						has_plot = plot_kill_character
						has_plot = plot_kill_spouse
					}
				}

				preferred_limit = {
					society_rank >= 3
				}

				save_event_target_as = assassins_plotter
				plot_target_char = { save_event_target_as = assassin_quest_target }
			}
		}

		plot_target_char = { save_event_target_as = my_quest_target }
	}

	# You scratch my back, I scratch yours
	option = {
		name = EVTOPTA_MNM_6912

		trigger = {
			has_quest = quest_the_assassins_assassination
			plot_target_char = { is_quest_target_of = ROOT }
		}

		reverse_back_plot = event_target:assassins_plotter
		back_plot = event_target:assassins_plotter

		reverse_opinion = {
			name = opinion_grateful
			who = event_target:assassins_plotter
			years = 10
		}

		ai_chance = { factor = 100 }
	}

	# Some influence
	option = {
		name = EVTOPTB_MNM_6912

		add_society_currency_medium_effect = yes

		back_plot = event_target:assassins_plotter

		reverse_opinion = {
			name = opinion_grateful
			who = event_target:assassins_plotter
			years = 10
		}

		ai_chance = { factor = 50 }
	}

	# Anything for a friend!
	option = {
		name = EVTOPTC_MNM_6912

		if = {
			limit = { is_friend = event_target:assassins_plotter }

			reverse_opinion = {
				name = opinion_grateful
				who = event_target:assassins_plotter
				years = 10
			}
		}
		else = {
			add_friend = event_target:assassins_plotter
		}

		back_plot = event_target:assassins_plotter

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 20
				OR = {
					trait = kind
					trait = gregarious
					trait = socializer
				}
			}
		}
	}

	# Not interested
	option = {
		name = EVTOPTD_MNM_6912

		reverse_opinion = {
			name = opinion_disappointed
			who = event_target:assassins_plotter
			years = 10
		}

		ai_chance = { factor = 0 }
	}
}

# Interaction: Blackmailing superior
character_event = {
	id = MNM.6920
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_MNM_6922_A
		trigger = {
			event_target:assassin_blackmail_target = { has_character_flag = blackmail_decadence }
		}
	}
	desc = {
		text = EVTDESC_MNM_6922_B
		trigger = {
			event_target:assassin_blackmail_target = { has_character_flag = blackmail_lover }
		}
	}
	desc = {
		text = EVTDESC_MNM_6922_C
		trigger = {
			event_target:assassin_blackmail_target = { has_character_flag = blackmail_weak }
		}
	}

	is_triggered_only = yes # on_society_bi_yearly_pulse, random_events

	is_in_society = yes
	only_capable = yes
	prisoner = no
	min_age = 16

	trigger = {
		society_member_of = the_assassins

		society = {
			any_society_member = {
				ai = yes
				block_general_event_trigger = no
				higher_society_rank_than_root_trigger = yes

				NOR = {
					is_rival = ROOT

					has_opinion_modifier = {
						name = opinion_very_grateful
						who = ROOT
					}
				}
			}
		}
	}

	immediate = {
		society = {
			random_list = {
				33 = {
					trigger = {
						any_society_member = {
							ai = yes
							block_general_event_trigger = no
							higher_society_rank_than_root_trigger = yes

							NOR = {
								is_rival = ROOT

								has_opinion_modifier = {
									name = opinion_very_grateful
									who = ROOT
								}
							}

							OR = {
								trait = lustful
								trait = master_seducer
								trait = master_seductress
								has_lover = yes
							}
						}
					}

					random_society_member = {
						limit = {
							ai = yes
							block_general_event_trigger = no
							higher_society_rank_than_root_trigger = yes

							NOR = {
								is_rival = ROOT

								has_opinion_modifier = {
									name = opinion_very_grateful
									who = ROOT
								}
							}

							OR = {
								trait = lustful
								trait = master_seducer
								trait = master_seductress
								has_lover = yes
							}
						}

						save_event_target_as = assassin_blackmail_target
						set_character_flag = blackmail_lover

						if = {
							limit = { has_lover = yes }
							random_lover = { save_event_target_as = lover_of_target }
						}
						else = {
							host = {
								if = {
									limit = {
										PREV = { prefers_men_trigger = yes }
									}

									create_random_diplomat = {
										female = no
										random_traits = yes
										dynasty = none
										age = 30
									}
								}
								else = {
									create_random_diplomat = {
										female = yes
										random_traits = yes
										dynasty = none
										age = 30
									}
								}

								new_character = {
									add_lover = PREVPREV
									save_event_target_as = lover_of_target

									if = {
										limit = {
											PREVPREV = { trait = homosexual }
										}

										add_trait = homosexual
									}
								}
							}
						}
					}
				}
				33 = {
					trigger = {
						any_society_member = {
							ai = yes
							block_general_event_trigger = no
							higher_society_rank_than_root_trigger = yes

							NOR = {
								is_rival = ROOT

								has_opinion_modifier = {
									name = opinion_very_grateful
									who = ROOT
								}
							}

							OR = {
								trait = decadent
								trait = hedonist
								trait = gluttonous
								trait = drunkard
							}
						}
					}

					random_society_member = {
						limit = {
							ai = yes
							block_general_event_trigger = no
							higher_society_rank_than_root_trigger = yes

							NOR = {
								is_rival = ROOT

								has_opinion_modifier = {
									name = opinion_very_grateful
									who = ROOT
								}
							}

							OR = {
								trait = decadent
								trait = hedonist
								trait = gluttonous
								trait = drunkard
							}
						}

						save_event_target_as = assassin_blackmail_target
						set_character_flag = blackmail_decadence
					}
				}
				33 = {
					trigger = {
						any_society_member = {
							ai = yes
							block_general_event_trigger = no
							higher_society_rank_than_root_trigger = yes

							NOR = {
								is_rival = ROOT

								has_opinion_modifier = {
									name = opinion_very_grateful
									who = ROOT
								}
							}

							OR = {
								trait = craven
								is_weak_trigger = yes
								is_ill = yes
								has_disability_trigger = yes
								has_mental_disorder_trigger = yes
							}
						}
					}

					random_society_member = {
						limit = {
							ai = yes
							block_general_event_trigger = no
							higher_society_rank_than_root_trigger = yes

							NOR = {
								is_rival = ROOT

								has_opinion_modifier = {
									name = opinion_very_grateful
									who = ROOT
								}
							}

							OR = {
								trait = craven
								is_weak_trigger = yes
								is_ill = yes
								has_disability_trigger = yes
								has_mental_disorder_trigger = yes
							}
						}

						save_event_target_as = assassin_blackmail_target
						set_character_flag = blackmail_weak
					}
				}
			}

			if = {
				limit = {
					NOT = { event_target:assassin_blackmail_target = { always = yes } }
				}

				random_society_member = {
					limit = {
						ai = yes
						block_general_event_trigger = no
						higher_society_rank_than_root_trigger = yes

						NOR = {
							is_rival = ROOT

							has_opinion_modifier = {
								name = opinion_very_grateful
								who = ROOT
							}
						}
					}

					save_event_target_as = assassin_blackmail_target
					set_character_flag = blackmail_decadence
				}
			}
		}

	}

	### I found out their secret, what do?

	# Promote me
	option = {
		name = EVTOPTA_MNM_6922

		trigger = {
			society_rank < 3
			days_at_current_society_rank >= 3650

			trigger_if = {
				limit = { ai = yes }
				society_can_rank_up = yes
			}
		}

		society_rank_up = 1
		add_rival = event_target:assassin_blackmail_target

		ai_chance = { factor = 100 }
	}

	# Give me some influence
	option = {
		name = EVTOPTB_MNM_6922

		add_society_currency_major_effect = yes
		add_rival = event_target:assassin_blackmail_target

		ai_chance = { factor = 10 }
	}

	# I will keep your secret safe
	option = {
		name = EVTOPTD_MNM_6922

		reverse_opinion = {
			name = opinion_very_grateful
			who = event_target:assassin_blackmail_target
			years = 20
		}

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 20
				OR = {
					trait = kind
					trait = honest
					trait = content
					trait = just
				}
			}
		}
	}

	after = {
		event_target:assassin_blackmail_target = {
			clr_character_flag = blackmail_decadence
			clr_character_flag = blackmail_lover
			clr_character_flag = blackmail_weak
		}
	}
}



### MISC EVENTS###

# Makes sure d_fedayeen owner and subjects have appropriate religion and assassins membership
character_event = {
	id = MNM.6990

	hide_window = yes
	is_triggered_only = yes # on_new_holder(_inheritance/usurpation)

	ai = yes

	trigger = {
		primary_title = { title = d_fedayeen }
	}

	immediate = {
		# Changes religion
		if = {
			limit = {
				independent = yes
				NOT = { religion = shiite }
			}

			# Workaround for automatic usurpation of theocratic characters
			shiite = { save_event_target_as = target_religion }

			convert_religion_failsafe_effect = yes
		}
		else_if = {
			limit = {
				NOR = {
					religion = shiite
					secret_religion = shiite
				}
			}

			clear_secret_religion = yes
			set_secret_religion = shiite
		}

		# Try and force them to lvl 3 of the assassins
		if = {
			limit = { NOT = { society_member_of = the_assassins } }
			join_society = the_assassins
		}

		if = {
			limit = {
				society_rank = {
					rank == 1
					society = the_assassins
				}
			}

			society_rank_up = {
				rank = 2
				society = the_assassins
			}
		}
		else_if = {
			limit = {
				society_rank = {
					rank == 2
					society = the_assassins
				}
			}

			society_rank_up = {
				rank = 1
				society = the_assassins
			}
		}

		# Make every appropriate courtier member of society
		if = {
			limit = { religion = shiite }

			any_courtier_or_vassal = {
				# Workaround for automatic usurpation of theocratic characters
				shiite = { save_event_target_as = target_religion }

				convert_religion_failsafe_effect = yes

				if = {
					limit = {
						is_in_society = no
						is_adult = yes
						prisoner = no
						is_incapable = no

						trigger_if = {
							limit = { is_female = yes }

							has_game_rule = {
								name = gender
								value = all
							}
						}
					}

					join_society = the_assassins
				}
			}
		}
	}
}