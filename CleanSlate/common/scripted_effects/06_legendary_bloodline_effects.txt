############################################################
############# LEGENDARY BLOODLINES SHOWDOWN ################
############################################################

# clean_up_after_legendary_showdown_effect

# add_1_point_to_legendary_progress_effect
# add_2_points_to_legendary_progress_effect
# evaluate_legendary_progress_effect

# send_legendary_tombola_effect

# save_fellow_member_effect

# warrior_lodge_legendary_duel_someone_effect

# died_before_achieveing_greatness_effect
# died_founding_a_bloodline_effect

# found_a_legendary_bloodline_effect

# randomize_ABCDEF_desc_flag_effect
# clr_ABCDEF_desc_flag_effect
# randomize_XYZ_desc_flag_effect
# clr_XYZ_desc_flag_effect

# add_legend_progress_trivial_effect
# add_legend_progress_tiny_effect
# add_legend_progress_minor_effect
# add_legend_progress_medium_effect
# add_legend_progress_major_effect
# add_legend_progress_massive_effect

# send_new_eagle_event_effect
# send_new_dog_event_effect

# spawn_old_duelist_effect
# spawn_giant_duelist_effect
# spawn_creature_champion_effect

# set_bloodline_founder_religion_flag_effect

# murder_bloodline_check_effect

# Currently not in use, kept for future reference
# abort_legendary_bloodlines_events_effect = {
#	clear_delayed_event = { id = HF.12003 }
#	clear_delayed_event = { id = HF.12003 }
#	clear_delayed_event = { id = HF.12003 }
#	clear_delayed_event = { id = HF.12003 }
#	clear_delayed_event = { id = HF.12003 }
#	clear_delayed_event = { id = HF.12003 }
#	clean_up_after_legendary_showdown_effect = yes
# }
#
# restart_society_progress_effect = {
#	if = {
#		limit = {
#			any_society_member = {
#				has_character_flag = call_to_legend_active
#			}
#		}
#
#		set_society_progress = 0
#		clr_flag = block_society_progress	# So progress can resume for members...
#		clr_flag = used_legendary_gathering	# So progress can resume for members...
#	}
# }

clean_up_after_legendary_showdown_effect = {
	hidden_effect = {
		set_variable = {
			which = legendary_event_progress
			value = 0
		}

		remove_character_modifier = out_traveling
		clr_character_flag = call_to_legend_active
		clr_character_flag = do_not_disturb
		clr_character_flag = start_bracket
		clr_character_flag = mid_bracket
		clr_character_flag = top_bracket
		clr_character_flag = call_it_a_day
		clr_character_flag = i_will_survive
		clr_character_flag = bloodline_quality_1
		clr_character_flag = bloodline_quality_2
		clr_character_flag = bloodline_quality_3
		clr_character_flag = player_was_involved

		# Tombola events...
		clr_character_flag = HF_legend_artifact
		clr_character_flag = HF_legend_feast
		clr_character_flag = HF_legend_skull
		clr_character_flag = HF_legend_eagle
		clr_character_flag = HF_legend_upgrade_weapon

		# Duel outcomes...
		clr_character_flag = WL_desc_A
		clr_character_flag = WL_desc_B
		clr_character_flag = WL_desc_C
		clr_character_flag = WL_desc_D
		clr_character_flag = WL_desc_E
		clr_character_flag = WL_desc_F
		clr_character_flag = had_WL_desc_A
		clr_character_flag = had_WL_desc_B
		clr_character_flag = had_WL_desc_C
		clr_character_flag = had_WL_desc_D
		clr_character_flag = had_WL_desc_E
		clr_character_flag = had_WL_desc_F
		clr_character_flag = WL_desc_X
		clr_character_flag = WL_desc_Y
		clr_character_flag = WL_desc_Z
	}
}

add_1_point_to_legendary_progress_effect = {
	custom_tooltip = {
		text = good_progress_tt

		change_variable = {
			which = legendary_event_progress
			value = 1
		}
	}
}

add_2_points_to_legendary_progress_effect = {
	custom_tooltip = {
		text = great_progress_tt

		change_variable = {
			which = legendary_event_progress
			value = 2
		}
	}
}

evaluate_legendary_progress_effect = {
	if = { # You're just starting out...
		limit = {
			check_variable = {
				which = legendary_event_progress
				value < 5
			}
		}

		set_character_flag = start_bracket
	}
	else_if = { # You're making some progress
		limit = {
			check_variable = {
				which = legendary_event_progress
				value < 8
			}
		}

		clr_character_flag = start_bracket
		set_character_flag = mid_bracket
	}
	else_if = { # Get to dueling!
		limit = {
			check_variable = {
				which = legendary_event_progress
				value < 18
			}
		}

		clr_character_flag = start_bracket
		clr_character_flag = mid_bracket
		set_character_flag = top_bracket

		if = {
			limit = { # Stream linin' for player runs...
				has_character_flag = player_was_involved

				# Nepotism values
				check_variable = {
					which = legendary_event_progress
					value >= 10
				}
			}

			clr_character_flag = start_bracket
			clr_character_flag = mid_bracket
			clr_character_flag = top_bracket
			set_character_flag = call_it_a_day
		}
	}
	else_if = { # Consider yourself victorious, you champ
		limit = {
			check_variable = {
				which = legendary_event_progress
				value >= 18
			}
		}

		clr_character_flag = start_bracket
		clr_character_flag = mid_bracket
		clr_character_flag = top_bracket
		set_character_flag = call_it_a_day
	}

	# Fallback...
	else_if = { # If you have been lagging behind the rest of your team, bumps you into the top bracket...
		limit = {
			has_character_modifier = out_traveling

			OR = {
				has_character_flag = start_bracket
				has_character_flag = mid_bracket
			}
		}

		hidden_effect = {
			set_variable = {
				which = legendary_event_progress
				value = 8
			}

			clr_character_flag = start_bracket
			clr_character_flag = mid_bracket
			set_character_flag = top_bracket
		}
	}
}

send_legendary_tombola_effect = {
	character_event = {
		id = HF.12003 # Tombola...
		days = 10
		random = 15
	}
}

save_fellow_member_effect = {
	# Find someone to talk to...
	if = {
		limit = { event_target:original_hero = { is_available_hero_trigger = yes } }
		event_target:original_hero = { save_event_target_as = fellow_member }
	}
	else_if = {
		limit = { event_target:fellow_hero_1 = { is_available_hero_trigger = yes } }
		event_target:fellow_hero_1 = { save_event_target_as = fellow_member }
	}
	else_if = {
		limit = { event_target:fellow_hero_2 = { is_available_hero_trigger = yes } }
		event_target:fellow_hero_2 = { save_event_target_as = fellow_member }
	}
	else_if = {
		limit = { event_target:fellow_hero_3 = { is_available_hero_trigger = yes } }
		event_target:fellow_hero_3 = { save_event_target_as = fellow_member }
	}
	else = {
		society = {
			random_society_member = {
				limit = {
					NOT = { character = ROOT }
					is_inaccessible_or_incapable_trigger = no
				}

				save_event_target_as = fellow_member
			}
		}
	}
}

warrior_lodge_legendary_duel_someone_effect = {
	hidden_effect = {
		set_character_flag = add_duel_xp
		set_character_flag = is_legendary_duel
		reset_duel_timers_effect = yes

		# Chooses a weapon for mainly loc purposes (but has a tiny effect on outcomes, too)...
		set_dueling_weapon_effect = yes #You get a weapon!
		event_target:combatant_2 = { set_dueling_weapon_effect = yes } #and YOU get a weapon!

		# Chooses a body part for injury (if it occurs), also for loc purposes (effect handles both characters)
		set_potential_injury_flag_effect = yes

		# Scripted effect requiring event-targets combatant_1 & combatant_2! RAW NUMBERS...
		evaluate_duel_result_score_effect = yes

		# Room for extra special calculations... (based on traits, and other special circumstances?)
		evaluate_extra_duel_result_score_effect = yes

		# Send the correct result event (from random_list)...
		send_duel_result_event_effect = yes
	}
}

died_before_achieveing_greatness_effect = {
	# Send news of death to other heroes/society members
	current_heir = {
		character_event = {
			id = HF.12103 # Send event of what happened...
			days = 1
		}
	}

	society = {
		any_society_member = {
			limit = {
				NOR = {
					character = PREVPREV
					is_heir = PREVPREV
				}
			}

			character_event = {
				id = HF.12103 # Our fellow adventurer died (and achieved nothing)...
				days = 1
			}
		}
	}
}

died_founding_a_bloodline_effect = { # For the main heir
	# Send news of death to other heroes/society members?
	save_event_target_as = bloodline_founder
	found_a_legendary_bloodline_effect = yes

	if = {
		limit = { ai = no }

		# Adding flag to player and new player char, for safety...
		set_character_flag = achievement_zero_to_hero
		current_heir = { set_character_flag = achievement_zero_to_hero }

		if = {
			limit = { # In case of game over...
				current_heir = {
					NOT = { dynasty = PREV }
				}
			}

			set_global_flag = achievement_zero_to_hero
		}
	}

	current_heir = {
	#	save_event_target_as = new_story_owner

		narrative_event = {
			id = HF.12301 # Send event of what happened...
			days = 1
		}
	}

	society = {
		any_society_member = {
			limit = {
				NOR = {
					character = ROOT
					is_heir = PREVPREV
				}
			}

			narrative_event = {
				id = HF.12302 # News event to fellow society members...
				days = 3
			}
		}
	}
}

found_a_legendary_bloodline_effect = { # For any hero
	custom_tooltip = {
		text = found_bloodline_tt

		ROOT = {
			society = {
				save_event_target_as = society_affiliation
			}
		}

		random_list = {
			10 = {
				trigger = {
					OR = {
						religion_openly_tengri_or_reformed_trigger = yes
						is_nomadic = yes
					}

					has_character_modifier = pet_hunting_eagle
					has_character_modifier = friend_of_eagles
					trait = falconer
				}

				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_eagle_hunter_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_eagle_hunter_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_eagle_hunter_A }
						20 = { set_name = bloodline_legendary_eagle_hunter_B }
						20 = { set_name = bloodline_legendary_eagle_hunter_C }
						20 = { set_name = bloodline_legendary_eagle_hunter_D }
					}
				}
			}

			10 = { # Way of Life exclusive
				trigger = { has_dlc = "Way of Life" }

				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_dog_hunter_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_dog_hunter_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_dog_hunter_A }
						20 = { set_name = bloodline_legendary_dog_hunter_B }
						20 = { set_name = bloodline_legendary_dog_hunter_C }
						20 = { set_name = bloodline_legendary_dog_hunter_D }
					}
				}
			}

			5 = { # Available to all
				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_battle_survivor_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_battle_survivor_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_battle_survivor_A }
						20 = { set_name = bloodline_legendary_battle_survivor_B }
						20 = { set_name = bloodline_legendary_battle_survivor_C }
						20 = { set_name = bloodline_legendary_battle_survivor_D }
					}
				}
			}

			5 = { # Conclave exclusive
				trigger = { has_dlc = "Conclave" }

				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_leader_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_leader_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_leader_A }
						20 = { set_name = bloodline_legendary_leader_B }
						20 = { set_name = bloodline_legendary_leader_C }
						20 = { set_name = bloodline_legendary_leader_D }
					}
				}
			}

			5 = { # Available to all
				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_warrior_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_warrior_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_warrior_A }
						20 = { set_name = bloodline_legendary_warrior_B }
						20 = { set_name = bloodline_legendary_warrior_C }
						20 = { set_name = bloodline_legendary_warrior_D }
					}
				}
			}

			10 = { # Monks & Mystics/Jade Dragon exclusive
				trigger = {
					OR = {
						has_dlc = "Mystics"
						has_dlc = "Jade Dragon"
					}
				}

				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_soldier_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_soldier_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_soldier_A }
						20 = { set_name = bloodline_legendary_soldier_B }
						20 = { set_name = bloodline_legendary_soldier_C }
						20 = { set_name = bloodline_legendary_soldier_D }
					}
				}
			}

			5 = { # Available to all
				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_battle_bard_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_battle_bard_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_battle_bard_A }
						20 = { set_name = bloodline_legendary_battle_bard_B }
						20 = { set_name = bloodline_legendary_battle_bard_C }
						20 = { set_name = bloodline_legendary_battle_bard_D }
					}
				}
			}

			5 = { # Available to all
				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_commander_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_commander_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_commander_A }
						20 = { set_name = bloodline_legendary_commander_B }
						20 = { set_name = bloodline_legendary_commander_C }
						20 = { set_name = bloodline_legendary_commander_D }
					}
				}
			}

			5 = { # Available to all
				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_captor_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_captor_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_captor_A }
						20 = { set_name = bloodline_legendary_captor_B }
						20 = { set_name = bloodline_legendary_captor_C }
						20 = { set_name = bloodline_legendary_captor_D }
					}
				}
			}

			5 = { # Available to all
				if = {
					limit = { is_female = yes }

					create_bloodline = {
						type = legendary_raider_bloodline
						society = event_target:society_affiliation
						inheritance = matrilineal
					}
				}
				else = {
					create_bloodline = {
						type = legendary_raider_bloodline
						society = event_target:society_affiliation
					}
				}

				new_bloodline = {
					random_list = {
						# Randomize names
						20 = { set_name = bloodline_legendary_raider_A }
						20 = { set_name = bloodline_legendary_raider_B }
						20 = { set_name = bloodline_legendary_raider_C }
						20 = { set_name = bloodline_legendary_raider_D }
					}
				}
			}
		}
	}
}

randomize_ABCDEF_desc_flag_effect = {
	clr_ABCDEF_desc_flag_effect = yes

	random_list = {
		20 = {
			trigger = { NOT = { has_character_flag = had_WL_desc_A } }
			set_character_flag = WL_desc_A
		}

		20 = {
			trigger = { NOT = { has_character_flag = had_WL_desc_B } }
			set_character_flag = WL_desc_B
		}

		20 = {
			trigger = { NOT = { has_character_flag = had_WL_desc_C } }
			set_character_flag = WL_desc_C
		}

		20 = {
			trigger = { NOT = { has_character_flag = had_WL_desc_D } }
			set_character_flag = WL_desc_D
		}

		20 = {
			trigger = { NOT = { has_character_flag = had_WL_desc_E } }
			set_character_flag = WL_desc_E
		}
	}
}

clr_ABCDEF_desc_flag_effect = {
	if = {
		limit = { has_character_flag = WL_desc_A }
		clr_character_flag = WL_desc_A
		set_character_flag = had_WL_desc_A
	}

	if = {
		limit = { has_character_flag = WL_desc_B }
		clr_character_flag = WL_desc_B
		set_character_flag = had_WL_desc_B
	}

	if = {
		limit = { has_character_flag = WL_desc_C }
		clr_character_flag = WL_desc_C
		set_character_flag = had_WL_desc_C
	}

	if = {
		limit = { has_character_flag = WL_desc_D }
		clr_character_flag = WL_desc_D
		set_character_flag = had_WL_desc_D
	}

	if = {
		limit = { has_character_flag = WL_desc_E }
		clr_character_flag = WL_desc_E
		set_character_flag = had_WL_desc_E
	}

	if = {
		limit = {
			has_character_flag = had_WL_desc_A
			has_character_flag = had_WL_desc_B
			has_character_flag = had_WL_desc_C
			has_character_flag = had_WL_desc_D
			has_character_flag = had_WL_desc_E
		}

		clr_character_flag = WL_desc_A
		clr_character_flag = WL_desc_B
		clr_character_flag = WL_desc_C
		clr_character_flag = WL_desc_D
		clr_character_flag = WL_desc_E
		clr_character_flag = had_WL_desc_A
		clr_character_flag = had_WL_desc_B
		clr_character_flag = had_WL_desc_C
		clr_character_flag = had_WL_desc_D
		clr_character_flag = had_WL_desc_E

	}
}

randomize_XYZ_desc_flag_effect = { # Can run twice. Then it messes up.
	clr_XYZ_desc_flag_effect = yes

	random_list = {
		10 = {
			trigger = { NOT = { has_character_flag = WL_desc_X } }

			set_character_flag = WL_desc_X

			if = {
				limit = { has_character_flag = WL_desc_Y }
				clr_character_flag = WL_desc_Y
			}

			if = {
				limit = { has_character_flag = WL_desc_Z }
				clr_character_flag = WL_desc_Z
			}
		}

		10 = {
			trigger = { NOT = { has_character_flag = WL_desc_Y } }

			set_character_flag = WL_desc_Y

			if = {
				limit = { has_character_flag = WL_desc_X }
				clr_character_flag = WL_desc_X
			}

			if = {
				limit = { has_character_flag = WL_desc_Z }
				clr_character_flag = WL_desc_Z
			}
		}

		10 = {
			trigger = { NOT = { has_character_flag = WL_desc_Z } }

			set_character_flag = WL_desc_Z

			if = {
				limit = { has_character_flag = WL_desc_X }
				clr_character_flag = WL_desc_X
			}

			if = {
				limit = { has_character_flag = WL_desc_Y }
				clr_character_flag = WL_desc_Y
			}
		}
	}
}

clr_XYZ_desc_flag_effect = {
	clr_character_flag = WL_desc_X
	clr_character_flag = WL_desc_Y
	clr_character_flag = WL_desc_Z
	clr_character_flag = WL_desc_A
	clr_character_flag = WL_desc_B
	clr_character_flag = WL_desc_C
	clr_character_flag = WL_desc_D
	clr_character_flag = WL_desc_E
	clr_character_flag = had_WL_desc_A
	clr_character_flag = had_WL_desc_B
	clr_character_flag = had_WL_desc_C
	clr_character_flag = had_WL_desc_D
	clr_character_flag = had_WL_desc_E
}

add_legend_progress_trivial_effect = {
	if = {
		limit = {
			society = {
				society_has_active_progress = yes			# A society-member has used the Legendary Gathering
				NOT = { has_flag = block_society_progress } # If legendary journey is not already on-going
			}
		}

		custom_tooltip = {
			text = society_legend_increases_tt
			add_society_progress = 1
		}
	}
}

add_legend_progress_tiny_effect = {
	if = {
		limit = {
			society = {
				society_has_active_progress = yes			# A society-member has used the Legendary Gathering
				NOT = { has_flag = block_society_progress } # If legendary journey is not already on-going
			}
		}

		custom_tooltip = {
			text = society_legend_increases_tt
			add_society_progress = 2
		}
	}
}

add_legend_progress_minor_effect = {
	if = {
		limit = {
			society = {
				society_has_active_progress = yes			# A society-member has used the Legendary Gathering
				NOT = { has_flag = block_society_progress } # If legendary journey is not already on-going
			}
		}

		custom_tooltip = {
			text = society_legend_increases_tt
			add_society_progress = 3
		}
	}
}

add_legend_progress_medium_effect = {
	if = {
		limit = { society_has_active_progress = no }
		start_society_progress = yes
	}

	add_society_progress = 4
}

add_legend_progress_major_effect = {
	if = {
		limit = { society_has_active_progress = no }
		start_society_progress = yes
	}

	add_society_progress = 5
}

add_legend_progress_massive_effect = {
	if = {
		limit = { society_has_active_progress = no }
		start_society_progress = yes
	}

	add_society_progress = 10
}

send_new_eagle_event_effect = {
	if = { # If you have a "Friend of Eagles" bloodline
		limit = {
			any_owned_bloodline = {
				has_bloodline_flag = bloodline_effect_pet_eagle
				bloodline_is_active_for = PREV
			}
		}

		character_event = {
			id = HF.12400 # Get a new bird!
			days = 65
			random = 55
		}
	}
}

send_new_dog_event_effect = {
	if = { # If you have a "Friend of Eagles" bloodline
		limit = {
			any_owned_bloodline = {
				has_bloodline_flag = bloodline_effect_pet_dog
				bloodline_is_active_for = PREV
			}
		}

		character_event = {
			id = HF.12401 # Get a new dog!
			days = 65
			random = 55
		}
	}
}

spawn_old_duelist_effect = {
	if = {
		limit = { has_religion_feature = religion_matriarchal }

		create_random_soldier = {
			random_traits = yes
			dynasty = actually_culture
			female = yes
			age = 60

			attributes = {
				diplomacy = 5
				learning = 1
				stewardship = 2
				intrigue = 9
				martial = 12
			}
		}
	}
	else = {
		create_random_soldier = {
			random_traits = yes
			dynasty = actually_culture
			female = 10
			age = 60

			attributes = {
				diplomacy = 5
				learning = 1
				stewardship = 2
				intrigue = 9
				martial = 12
			}
		}
	}

	new_character = {
		# No genetic defects
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted

		# Not a coward
		remove_trait = craven
		remove_trait = paranoid

		# Has a purely fighter lifestyle
		remove_trait = mystic
		remove_trait = socializer
		remove_trait = game_master
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = master_schemer
		remove_trait = impaler
		remove_trait = master_seducer
		remove_trait = master_seductress
		remove_trait = theologian
		remove_trait = scholar

		# Isn't incompetent
		remove_trait = misguided_warrior
		remove_trait = tough_soldier
		remove_trait = skilled_tactician

		add_trait = brilliant_strategist

		random_list = {
			20 = { add_trait = brawny }
			10 = { add_trait = strong }
			 5 = { health = 2 }
		}

		random_list = {
			10 = { add_trait = battlefield_terrain_master }
			10 = { add_trait = defensive_leader }
			10 = { add_trait = direct_leader }
			10 = { add_trait = flanker }
			10 = { add_trait = heavy_infantry_leader }
			10 = { add_trait = inspiring_leader }
			10 = { add_trait = organizer }
			10 = { add_trait = siege_leader }
			10 = { add_trait = trickster }
			10 = { add_trait = aggressive_leader }
		}

		random_list = { # Flavor Randomization
			20 = {
				trigger = { has_dlc = "Reapers" }

				add_trait = giant
				add_trait = brawny
				add_trait = strategist
				add_trait = one_eyed
				change_martial = 1
				give_nickname = nick_the_cyclops
			}

			20 = {
				add_trait = holy_warrior
				add_trait = scarred
				change_martial = 3
				give_nickname = nick_the_hammer
			}

			20 = {
				add_trait = brave
				add_trait = poet
				change_martial = 2
				give_nickname = nick_the_fearless
			}

			20 = {
				add_trait = brawny
				remove_trait = temperate
				add_trait = wroth
				add_trait = falconer
				change_martial = 1
				give_nickname = nick_the_ill_tempered
			}

			20 = {
				add_trait = unyielding_leader
				remove_trait = wroth
				add_trait = patient
				change_martial = 2
				give_nickname = nick_the_defender
			}

			20 = {
				add_trait = aggressive_leader
				remove_trait = patient
				add_trait = wroth
				change_martial = 3
				give_nickname = nick_the_destroyer
			}

			20 = {
				add_trait = shrewd
				add_trait = brave
				change_martial = 2
				give_nickname = nick_the_brave
			}

			20 = {
				add_trait = brawny
				add_trait = strategist
				change_martial = 1
				give_nickname = nick_the_strong
			}

			20 = {
				add_trait = genius
				add_trait = socializer
				add_trait = poet
				change_martial = 4
				give_nickname = nick_the_noble
			}

			20 = {
				add_trait = blinded
				add_trait = strategist
				add_trait = genius
				change_martial = 4
				give_nickname = nick_the_blind
			}

			20 = {
				remove_trait = humble
				add_trait = proud
				add_trait = duelist
				change_martial = 2
				give_nickname = nick_the_proud
			}

			20 = {
				add_trait = hunter
				add_trait = shrewd
				change_martial = 3
				give_nickname = nick_the_hunter
			}

			20 = {
				trigger = { has_dlc = "Reapers" }

				add_trait = disfigured
				add_trait = scarred
				add_trait = genius
				change_martial = 2
				change_intrigue = 12
				give_nickname = nick_of_a_thousand_faces
			}

			20 = {
				add_trait = genius
				add_trait = clubfooted
				change_martial = 1
				give_nickname = nick_the_bear
			}

			20 = {
				add_trait = trusting
				add_trait = quick
				change_martial = 4
				give_nickname = nick_the_loyal
			}

			20 = {
				add_trait = ugly
				add_trait = strong
				add_trait = duelist
				change_martial = 1
				give_nickname = nick_the_boar
			}

			20 = {
				add_trait = attractive
				add_trait = strategist
				change_martial = 4

				if = {
					limit = { is_female = no }
					give_nickname = nick_the_lion
				}
				else = {
					give_nickname = nick_the_lioness
				}
			}

			20 = {
				add_trait = brave
				add_trait = duelist
				change_martial = 3
				give_nickname = nick_the_bold
			}

			20 = {
				add_trait = shrewd
				add_trait = hedonist
				change_martial = 4
				give_nickname = nick_the_quarreller
			}

			20 = {
				add_trait = shrewd
				add_trait = cavalry_leader
				change_martial = 2
				give_nickname = nick_the_wolf
			}
		}

		if = {
			limit = { has_dharmic_religion_trigger = yes }

			add_trait = kshatriya
			character_event = { id = RoI.30121 }
		}

		if = {
			limit = {
				has_religion_feature = religion_no_leader
				religion_group = pagan_group
			}

			random_list = {
				 5 = { add_trait = pagan_branch_1 }
				25 = { add_trait = pagan_branch_2 }
				25 = { add_trait = pagan_branch_3 }
				25 = { add_trait = pagan_branch_4 }
			}
		}

		while = {
			count = 7
			add_one_duel_experience_modifier = yes
		}

		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

spawn_giant_duelist_effect = {
	if = {
		limit = { has_religion_feature = religion_matriarchal }

		create_random_soldier = {
			random_traits = yes
			dynasty = actually_culture
			female = yes

			attributes = {
				diplomacy = 4
				learning = 1
				stewardship = 1
				intrigue = 1
				martial = 20
			}
		}
	}
	else = {
		create_random_soldier = {
			random_traits = yes
			dynasty = actually_culture
			female = 10

			attributes = {
				diplomacy = 4
				learning = 1
				stewardship = 1
				intrigue = 1
				martial = 20
			}
		}
	}

	new_character = {
		# No genetic defects
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted

		# Not a coward
		remove_trait = craven
		remove_trait = paranoid

		# Has a purely fighter lifestyle
		remove_trait = mystic
		remove_trait = socializer
		remove_trait = game_master
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = master_schemer
		remove_trait = impaler
		remove_trait = master_seducer
		remove_trait = master_seductress
		remove_trait = theologian
		remove_trait = scholar

		# Isn't incompetent
		remove_trait = misguided_warrior
		remove_trait = tough_soldier
		remove_trait = skilled_tactician

		add_trait = brilliant_strategist

		# Is a giant
		add_trait = giant
		health = 1

		random_list = {
			20 = { add_trait = brawny }
			10 = { add_trait = strong }
		}

		random_list = {
			10 = { add_trait = battlefield_terrain_master }
			10 = { add_trait = defensive_leader }
			10 = { add_trait = direct_leader }
			10 = { add_trait = heavy_infantry_leader }
			10 = { add_trait = aggressive_leader }
		}

		random_list = { # Flavor Randomization
			20 = {
				add_trait = brawny
				add_trait = hunter
				change_martial = 2
				give_nickname = nick_the_giant
			}

			20 = {
				trigger = { has_dlc = "Reapers" }

				add_trait = brawny
				add_trait = strategist
				add_trait = one_eyed
				change_martial = 1
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = giant
				add_trait = brave
				add_trait = poet
				change_martial = 2
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = brawny
				remove_trait = temperate
				add_trait = wroth
				add_trait = falconer
				change_martial = 1
				give_nickname = nick_the_ill_tempered
			}

			20 = {
				remove_trait = wroth
				add_trait = patient
				change_martial = 2
				give_nickname = nick_the_monster
			}

			20 = {
				add_trait = aggressive_leader
				remove_trait = patient
				add_trait = wroth
				change_martial = 3
				give_nickname = nick_the_destroyer
			}

			20 = {
				add_trait = brawny
				add_trait = shrewd
				change_martial = 1
				give_nickname = nick_the_tower
			}

			20 = {
				add_trait = genius
				add_trait = socializer
				add_trait = poet
				change_martial = 4
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = hunter
				add_trait = shrewd
				change_martial = 3
				give_nickname = nick_the_giant
			}

			20 = {
				trigger = { has_dlc = "Reapers" }

				add_trait = disfigured
				add_trait = scarred
				add_trait = genius
				add_trait = duelist
				change_martial = 2
				change_intrigue = 12
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = slow
				add_trait = duelist
				add_trait = clubfooted
				change_martial = 1
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = ugly
				add_trait = strong
				add_trait = duelist
				change_martial = 1
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = attractive
				add_trait = strategist
				change_martial = 4
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = brave
				add_trait = duelist
				change_martial = 3
				give_nickname = nick_the_giant
			}

			20 = {
				add_trait = shrewd
				add_trait = hedonist
				change_martial = 4
				give_nickname = nick_the_giant
			}
		}

		if = {
			limit = { has_dharmic_religion_trigger = yes }

			add_trait = kshatriya
			character_event = { id = RoI.30121 }
		}

		if = {
			limit = {
				has_religion_feature = religion_no_leader
				religion_group = pagan_group
			}

			random_list = {
				 5 = { add_trait = pagan_branch_1 }
				25 = { add_trait = pagan_branch_2 }
				25 = { add_trait = pagan_branch_3 }
				25 = { add_trait = pagan_branch_4 }
			}
		}

		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

spawn_creature_champion_effect = {
	if = {
		limit = { has_religion_feature = religion_matriarchal }

		create_random_soldier = {
			random_traits = yes
			culture = bear
			dynasty = actually_culture
			female = yes

			attributes = {
				diplomacy = 4
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 12
			}
		}
	}
	else = {
		create_random_soldier = {
			random_traits = yes
			culture = bear
			dynasty = actually_culture
			female = 20

			attributes = {
				diplomacy = 4
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 12
			}
		}
	}

	new_character = {
		set_graphical_culture = event_target:target_ruler

		# No genetic defects
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted

		# Not a coward
		remove_trait = craven
		remove_trait = paranoid

		# Has a purely fighter lifestyle
		remove_trait = mystic
		remove_trait = socializer
		remove_trait = game_master
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = master_schemer
		remove_trait = impaler
		remove_trait = master_seducer
		remove_trait = master_seductress
		remove_trait = theologian
		remove_trait = scholar

		# Isn't incompetent
		remove_trait = misguided_warrior
		remove_trait = tough_soldier
		remove_trait = skilled_tactician

		add_trait = brilliant_strategist

		# Powerful animal
		add_trait = brawny
		add_trait = strong

		random_list = { # Give the Bear a pet, for fun
			10 = {
				add_character_modifier = {
					name = pet_hunting_dog
					duration = -1
				}

				character_event = {
					id = WoL.5290 # Dog dies
					years = 7
					random = 1000
				}
			}

			10 = {
				add_character_modifier = {
					name = pet_hunting_eagle
					duration = -1
				}

				character_event = {
					id = HF.25631 # Death
					years = 20
					random = 1500
				}
			}

			10 = {
				add_character_modifier = {
					name = pet_cat
					duration = -1
				}

				character_event = {
					id = 77802 # Cat dies
					years = 7
					random = 1000
				}
			}
		}

		random_list = {
			10 = { add_trait = battlefield_terrain_master }
			10 = { add_trait = defensive_leader }
			10 = { add_trait = direct_leader }
			10 = { add_trait = flanker }
			10 = { add_trait = heavy_infantry_leader }
			10 = { add_trait = inspiring_leader }
			10 = { add_trait = organizer }
			10 = { add_trait = siege_leader }
			10 = { add_trait = trickster }
			10 = { add_trait = aggressive_leader }
		}

		random_list = { # Flavor Randomization
			20 = {
				add_trait = giant
				add_trait = brawny
				add_trait = hunter
				change_martial = 2
				give_nickname = nick_the_giant
			}

			20 = {
				trigger = { has_dlc = "Reapers" }

				add_trait = giant
				add_trait = brawny
				add_trait = strategist
				add_trait = one_eyed
				change_martial = 1
				give_nickname = nick_the_cyclops
			}

			20 = {
				add_trait = holy_warrior
				add_trait = scarred
				change_martial = 3
				give_nickname = nick_the_hammer
			}

			20 = {
				add_trait = charitable
				add_trait = poet
				change_martial = 2
				give_nickname = nick_the_generous
			}

			20 = {
				add_trait = brawny
				remove_trait = temperate
				add_trait = wroth
				add_trait = falconer
				change_martial = 1
				give_nickname = nick_the_ill_tempered
			}

			20 = {
				add_trait = unyielding_leader
				remove_trait = wroth
				add_trait = patient
				change_martial = 2
				give_nickname = nick_the_defender
			}

			20 = {
				add_trait = aggressive_leader
				remove_trait = patient
				add_trait = wroth
				change_martial = 3
				give_nickname = nick_the_destroyer
			}

			20 = {
				add_trait = shrewd
				add_trait = brave
				change_martial = 2
				give_nickname = nick_the_brave
			}

			20 = {
				add_trait = brawny
				add_trait = hunter
				add_trait = gregarious
				change_martial = 1
				give_nickname = nick_the_jolly
			}

			20 = {
				add_trait = genius
				add_trait = socializer
				add_trait = poet
				change_martial = 4
				give_nickname = nick_the_noble
			}

			20 = {
				add_trait = zealous
				add_trait = duelist
				add_trait = genius
				change_martial = 4
				give_nickname = nick_the_witch_hunter
			}

			20 = {
				remove_trait = humble
				add_trait = proud
				add_trait = duelist
				change_martial = 2
				give_nickname = nick_the_proud
			}

			20 = {
				add_trait = hunter
				add_trait = shrewd
				change_martial = 3
				give_nickname = nick_the_hunter
			}

			20 = {
				trigger = { has_dlc = "Reapers" }

				add_trait = disfigured
				add_trait = scarred
				add_trait = genius
				change_martial = 2
				change_intrigue = 12
				give_nickname = nick_of_a_thousand_faces
			}

			20 = {
				add_trait = genius
				add_trait = clubfooted
				change_martial = 1
				give_nickname = nick_the_bear
			}

			20 = {
				add_trait = trusting
				add_trait = quick
				change_martial = 4
				give_nickname = nick_the_loyal
			}

			20 = {
				add_trait = ugly
				add_trait = strong
				add_trait = duelist
				change_martial = 1
				give_nickname = nick_the_boar
			}

			20 = {
				add_trait = attractive
				add_trait = strategist
				change_martial = 4

				if = {
					limit = { is_female = no }
					give_nickname = nick_the_lion
				}
				else = {
					give_nickname = nick_the_lioness
				}
			}

			20 = {
				add_trait = brave
				add_trait = duelist
				change_martial = 3

				if = {
					limit = { is_female = no }
					give_nickname = nick_the_dragon
				}
				else = {
					give_nickname = nick_the_dragoness
				}
			}

			20 = {
				add_trait = shrewd
				add_trait = hedonist
				change_martial = 4
				give_nickname = nick_the_quarreller
			}

			20 = {
				add_trait = shrewd
				add_trait = cavalry_leader
				change_martial = 2
				give_nickname = nick_the_wolf
			}
		}

		if = {
			limit = { has_dharmic_religion_trigger = yes }

			add_trait = kshatriya
			character_event = { id = RoI.30121 }
		}

		if = {
			limit = {
				has_religion_feature = religion_no_leader
				religion_group = pagan_group
			}

			random_list = {
				 5 = { add_trait = pagan_branch_1 }
				25 = { add_trait = pagan_branch_2 }
				25 = { add_trait = pagan_branch_3 }
				25 = { add_trait = pagan_branch_4 }
			}
		}

		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

#### For creating bloodlines in general ####
#### If your bloodline requires a specific religion, one which should *not change* if the founder changes religion, this needs to be set.
#### IMPORTANT: If religions are added: add new religion checks in new else-if limits and in the religion_same_as_bloodline_founder_trigger scripted trigger.

# TODO: replace with persistent event targets (religion scope)?
set_bloodline_founder_religion_flag_effect = {
	if = {
		limit = { religion_openly_norse_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_norse_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_baltic_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_baltic_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_finnish_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_finnish_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_slavic_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_slavic_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_tengri_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_tengri_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_west_african_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_west_african_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_zun_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_zun_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_bon_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_bon_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_hellenic_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_hellenic_pagan_religion }
	}
	else_if = {
		limit = { religion_openly_aztec_or_reformed_trigger = yes }
		new_bloodline = { set_bloodline_flag = requires_aztec_pagan_religion }
	}
	else_if = {
		limit = { religion = catholic }
		new_bloodline = { set_bloodline_flag = requires_catholic_religion }
	}
	else_if = {
		limit = { religion = cathar }
		new_bloodline = { set_bloodline_flag = requires_cathar_religion }
	}
	else_if = {
		limit = { religion = fraticelli }
		new_bloodline = { set_bloodline_flag = requires_fraticelli_religion }
	}
	else_if = {
		limit = { religion = waldensian }
		new_bloodline = { set_bloodline_flag = requires_waldensian_religion }
	}
	else_if = {
		limit = { religion = lollard }
		new_bloodline = { set_bloodline_flag = requires_lollard_religion }
	}
	else_if = {
		limit = { religion = orthodox }
		new_bloodline = { set_bloodline_flag = requires_orthodox_religion }
	}
	else_if = {
		limit = { religion = bogomilist }
		new_bloodline = { set_bloodline_flag = requires_bogomilist_religion }
	}
	else_if = {
		limit = { religion = monothelite }
		new_bloodline = { set_bloodline_flag = requires_monothelite_religion }
	}
	else_if = {
		limit = { religion = iconoclast }
		new_bloodline = { set_bloodline_flag = requires_iconoclast_religion }
	}
	else_if = {
		limit = { religion = paulician }
		new_bloodline = { set_bloodline_flag = requires_paulician_religion }
	}
	else_if = {
		limit = { religion = miaphysite }
		new_bloodline = { set_bloodline_flag = requires_miaphysite_religion }
	}
	else_if = {
		limit = { religion = monophysite }
		new_bloodline = { set_bloodline_flag = requires_monophysite_religion }
	}
	else_if = {
		limit = { religion = nestorian }
		new_bloodline = { set_bloodline_flag = requires_nestorian_religion }
	}
	else_if = {
		limit = { religion = messalian }
		new_bloodline = { set_bloodline_flag = requires_messalian_religion }
	}
	else_if = {
		limit = { religion = sunni }
		new_bloodline = { set_bloodline_flag = requires_sunni_religion }
	}
	else_if = {
		limit = { religion = zikri }
		new_bloodline = { set_bloodline_flag = requires_zikri_religion }
	}
	else_if = {
		limit = { religion = yazidi }
		new_bloodline = { set_bloodline_flag = requires_yazidi_religion }
	}
	else_if = {
		limit = { religion = shiite }
		new_bloodline = { set_bloodline_flag = requires_shiite_religion }
	}
	else_if = {
		limit = { religion = druze }
		new_bloodline = { set_bloodline_flag = requires_druze_religion }
	}
	else_if = {
		limit = { religion = hurufi }
		new_bloodline = { set_bloodline_flag = requires_hurufi_religion }
	}
	else_if = {
		limit = { religion = qarmatian }
		new_bloodline = { set_bloodline_flag = requires_qarmatian_religion }
	}
	else_if = {
		limit = { religion = ibadi }
		new_bloodline = { set_bloodline_flag = requires_ibadi_religion }
	}
	else_if = {
		limit = { religion = kharijite }
		new_bloodline = { set_bloodline_flag = requires_kharijite_religion }
	}
	else_if = {
		limit = { religion = jewish }
		new_bloodline = { set_bloodline_flag = requires_jewish_religion }
	}
	else_if = {
		limit = { religion = samaritan }
		new_bloodline = { set_bloodline_flag = requires_samaritan_religion }
	}
	else_if = {
		limit = { religion = karaite }
		new_bloodline = { set_bloodline_flag = requires_karaite_religion }
	}
	else_if = {
		limit = { religion = zoroastrian }
		new_bloodline = { set_bloodline_flag = requires_zoroastrian_religion }
	}
	else_if = {
		limit = { religion = mazdaki }
		new_bloodline = { set_bloodline_flag = requires_mazdaki_religion }
	}
	else_if = {
		limit = { religion = manichaean }
		new_bloodline = { set_bloodline_flag = requires_manichaean_religion }
	}
	else_if = {
		limit = { religion = khurmazta }
		new_bloodline = { set_bloodline_flag = requires_khurmazta_religion }
	}
	else_if = {
		limit = { religion = taoist }
		new_bloodline = { set_bloodline_flag = requires_taoist_religion }
	}
	else_if = {
		limit = { religion = hindu }
		new_bloodline = { set_bloodline_flag = requires_hindu_religion }
	}
	else_if = {
		limit = { religion = buddhist }
		new_bloodline = { set_bloodline_flag = requires_buddhist_religion }
	}
	else_if = {
		limit = { religion = jain }
		new_bloodline = { set_bloodline_flag = requires_jain_religion }
	}
	else = {
		# Add new religions in new else-if limits.
	}
}

murder_bloodline_check_effect = {
	change_variable = {
		which = bloodline_murdered_people
		value = 1
	}

	if = {
		limit = { has_ambition = obj_forge_bloodline }

		if = { # First check for pure Murder Bloodline
			limit = {
				check_variable = {
					which = bloodline_murdered_people
					value >= 30
				}
			}

			set_character_flag = flag_about_to_murder_bloodline

			character_event = {
				id = HF.24025
				days = 25
				random = 25
			}
		}
		else_if = { # Then check for Murder War Hybrid
			limit = {
				check_variable = {
					which = bloodline_murdered_people
					value >= 20
				}

				check_variable = {
					which = bloodline_won_wars
					value >= 10
				}
			}

			set_character_flag = flag_about_to_murder_bloodline

			narrative_event = {
				id = HF.24045
				days = 25
				random = 25
			}
		}
		else_if = { # Then check for Murder Peace Hybrid
			limit = {
				check_variable = {
					which = bloodline_murdered_people
					value >= 20
				}

				check_variable = {
					which = bloodline_peaceful_years
					value >= 15
				}
			}

			set_character_flag = flag_about_to_murder_bloodline

			narrative_event = {
				id = HF.24046
				days = 25
				random = 25
			}
		}
		else_if = { # Then check for Murder Builder Hybrid
			limit = {
				check_variable = {
					which = bloodline_murdered_people
					value >= 20
				}

				check_variable = {
					which = bloodline_built_holdings
					value >= 15
				}
			}

			set_character_flag = flag_about_to_murder_bloodline

			narrative_event = {
				id = HF.24048
				days = 25
				random = 25
			}
		}
	}
}