# hermetic_add_herbal_ingredient_effect
# hermetic_add_animal_ingredient_effect
# hermetic_add_misc_ingredient_effect

# remove_scrying_omen_modifiers_effect
# calculate_scrying_outcome_effect
# upgrade_seer_modifier_effect
# downgrade_seer_modifier_effect
# scrying_omen_fulfilled_by_gaining_disease_effect
# scrying_omen_fulfilled_by_removing_disease_effect
# clean_up_horoscope_effect
# set_horoscope_modifier_effect
# increase_astronomical_insights_modifier_effect
# remove_astronomical_insight_modifier_effect
# add_Aries_sign_trait_effect
# add_Taurus_sign_trait_effect
# add_Gemini_sign_trait_effect
# add_Cancer_sign_trait_effect
# add_Leo_sign_trait_effect
# add_Virgo_sign_trait_effect
# add_Libra_sign_trait_effect
# add_Scorpius_sign_trait_effect
# add_Sagittarius_sign_trait_effect
# add_Capricorn_sign_trait_effect
# add_Aquarius_sign_trait_effect
# add_Pisces_sign_trait_effect
# add_western_zodiac_trait_effect

# select_random_hermetic_ingredient_herb_effect
# select_random_hermetic_ingredient_animal_part_effect
# select_random_hermetic_ingredient_powder_effect
# select_random_hermetic_ingredient_liquid_effect
# select_random_hermetic_ingredient_effect
# remove_selection_of_ingredients_effect
# destroy_selected_ingredient_1_effect
# destroy_selected_ingredient_2_effect
# destroy_selected_ingredient_1_and_2_effect
# destroy_selected_ingredient_1_plus_random_other_ingredient_effect
# destroy_random_herb_ingredient_effect
# destroy_random_animal_part_ingredient_effect
# destroy_random_powder_ingredient_effect
# destroy_random_liquid_ingredient_effect
# destroy_random_herb_or_animal_part_ingredients_effect
# destroy_random_ingredients_effect
# destroy_all_ingredients_effect
# calculate_health_level_of_ingredient_1_effect
# calculate_health_level_of_ingredient_2_effect
# calculate_health_level_of_ingredient_1_and_2_effect
# calculate_health_level_of_all_ingredients_effect

# hermetics_upgrade_scandal_effect

hermetic_add_herbal_ingredient_effect = {
	hidden_effect = {
		random_list = {
			50 = { add_artifact = ingredient_herb1 }
			50 = { add_artifact = ingredient_herb2 }
			50 = { add_artifact = ingredient_herb3 }
			50 = { add_artifact = ingredient_herb4 }
			50 = { add_artifact = ingredient_herb5 }
			50 = { add_artifact = ingredient_herb6 }
			50 = { add_artifact = ingredient_herb7 }
			50 = { add_artifact = ingredient_herb8 }
			50 = { add_artifact = ingredient_herb9 }
		}
	}
}

hermetic_add_animal_ingredient_effect = {
	hidden_effect = {
		random_list = {
			50 = { add_artifact = ingredient_animal1 }
			50 = { add_artifact = ingredient_animal2 }
			50 = { add_artifact = ingredient_animal3 }
			50 = { add_artifact = ingredient_animal4 }
			50 = { add_artifact = ingredient_animal5 }
			50 = { add_artifact = ingredient_animal6 }
			50 = { add_artifact = ingredient_animal7 }
			50 = { add_artifact = ingredient_animal8 }
			50 = { add_artifact = ingredient_animal9 }
		}
	}
}

hermetic_add_misc_ingredient_effect = {
	hidden_effect = {
		random_list = {
			50 = { add_artifact = ingredient_metal_exotic1 }
			50 = { add_artifact = ingredient_metal_exotic2 }
			50 = { add_artifact = ingredient_metal_exotic3 }
			50 = { add_artifact = ingredient_metal_exotic4 }
			50 = { add_artifact = ingredient_metal_exotic5 }
			50 = { add_artifact = ingredient_metal_exotic6 }
			50 = { add_artifact = ingredient_metal_exotic7 }
			50 = { add_artifact = ingredient_metal_exotic8 }
			50 = { add_artifact = ingredient_metal_exotic9 }
		}
	}
}

remove_scrying_omen_modifiers_effect = { # For cleaning up end-states of the Hermetics Scrying Power
	hidden_effect = { remove_character_modifier = scrying_cooldown }

	trigger_switch = {
		on_trigger = has_character_modifier

		good_battle_omen       = { remove_character_modifier = good_battle_omen }
		bad_battle_omen        = { remove_character_modifier = bad_battle_omen }
		good_relationship_omen = { remove_character_modifier = good_relationship_omen }
		bad_relationship_omen  = { remove_character_modifier = bad_relationship_omen }
		good_power_omen        = { remove_character_modifier = good_power_omen }
		bad_power_omen         = { remove_character_modifier = bad_power_omen }
	}

	clr_character_flag = positive_reaction_to_scrying_flag
	clr_character_flag = negative_reaction_to_scrying_flag
	clr_character_flag = positive_event_flag
	clr_character_flag = negative_event_flag

	clear_delayed_event = { id = MNM.1225 }
	clear_delayed_event = { id = MNM.1226 }
	clear_delayed_event = { id = MNM.1227 }
}

# The positive_event_flag/negative_event_flag needs to be set somewhere in the target event in order for this to work...
# CleanSlate: Nothing in vanilla sets the positive_event_flag...
calculate_scrying_outcome_effect = {
	custom_tooltip = { text = tooltip_info_omen_tt }

	if = {
		limit = {
			trigger_if = {
				limit = { has_character_flag = positive_event_flag }
				has_positive_omen_modifier_trigger = yes
			}
			trigger_else = {
				has_character_flag = negative_event_flag
				has_negative_omen_modifier_trigger = yes
			}
		}

		upgrade_seer_modifier_effect = yes
	}
	else = {
		downgrade_seer_modifier_effect = yes
	}

	clr_character_flag = positive_event_flag
	clr_character_flag = negative_event_flag
}

# Modifiers gotten at end-states of the Hermetics Scrying Power
upgrade_seer_modifier_effect = {
	if = {
		limit = { has_a_seer_modifier_trigger = yes }

		trigger_switch = {
			on_trigger = has_character_modifier

			fulfilled_vision_worst = {
				remove_character_modifier = fulfilled_vision_worst

				add_character_modifier = {
					name = fulfilled_vision_bad
					years = 7
				}
			}

			fulfilled_vision_bad = {
				remove_character_modifier = fulfilled_vision_bad

				add_character_modifier = {
					name = fulfilled_vision_ok
					years = 7
				}
			}

			fulfilled_vision_ok = {
				remove_character_modifier = fulfilled_vision_ok

				add_character_modifier = {
					name = fulfilled_vision_great
					years = 7
				}
			}

			fulfilled_vision_great = {
				add_character_modifier = {
					name = fulfilled_vision_great
					years = 7
				}
			}
		}
	}
	else = {
		add_character_modifier = {
			name = fulfilled_vision_ok
			years = 7
		}
	}
}

# Modifiers gotten at end-states of the Hermetics Scrying Power
downgrade_seer_modifier_effect = {
	if = {
		limit = { has_a_seer_modifier_trigger = yes	}

		trigger_switch = {
			on_trigger = has_character_modifier

			fulfilled_vision_great = {
				remove_character_modifier = fulfilled_vision_great

				add_character_modifier = {
					name = fulfilled_vision_ok
					years = 7
				}
			}

			fulfilled_vision_ok = {
				remove_character_modifier = fulfilled_vision_ok

				add_character_modifier = {
					name = fulfilled_vision_bad
					years = 7
				}
			}

			fulfilled_vision_bad = {
				remove_character_modifier = fulfilled_vision_bad

				add_character_modifier = {
					name = fulfilled_vision_worst
					years = 7
				}
			}

			fulfilled_vision_worst = {
				add_character_modifier = {
					name = fulfilled_vision_worst
					years = 7
				}
			}
		}
	}
	else = {
		add_character_modifier = {
			name = fulfilled_vision_bad
			years = 7
		}
	}
}

# Scrying result are sent if someone gets sick and you are carrying an omen (fired from rip_symptom_events)
scrying_omen_fulfilled_by_gaining_disease_effect = {
	hidden_effect = {
		host = {
			if = {
				limit = {
					NOT = { is_liege_of = ROOT }

					OR = {
						is_close_relative = ROOT
						is_friend = ROOT
					}

					OR = {
						has_character_modifier = bad_relationship_omen
						has_character_modifier = good_relationship_omen
					}
				}

				character_event = {
					id = MNM.1221 # Inform of scrying result
					days = 5
					random = 5
				}
			}
		}

		liege = {
			if = {
				limit = {
					OR = {
						is_father = ROOT
						is_mother = ROOT
						is_married = ROOT
						is_lover = ROOT
					}

					OR = {
						has_character_modifier = bad_relationship_omen
						has_character_modifier = good_relationship_omen
					}
				}

				character_event = {
					id = MNM.1221 # Inform of scrying result
					days = 5
					random = 5
				}
			}
		}

		if = {
			limit = {
				OR = {
					has_character_modifier = bad_power_omen
					has_character_modifier = good_power_omen
				}
			}

			character_event = {
				id = MNM.1220 # Inform character of own sickness
				days = 5
				random = 5
			}
		}
	}
}

# Scrying result are sent if someone gets sick and you are carrying an omen (fired from rip_symptom_events)
scrying_omen_fulfilled_by_removing_disease_effect = {
	hidden_effect = {
		host = {
			if = {
				limit = {
					NOT = { is_liege_of = ROOT }

					OR = {
						is_close_relative = ROOT
						is_friend = ROOT
					}

					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}

				character_event = {
					id = MNM.1223 # Inform of scrying result
					days = 5
					random = 5
				}
			}
		}

		liege = {
			if = {
				limit = {
					OR = {
						is_parent_of = ROOT
						is_married = ROOT
						is_lover = ROOT
					}

					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}

				character_event = {
					id = MNM.1223 # Inform of scrying result
					days = 5
					random = 5
				}
			}
		}

		if = {
			limit = {
				OR = {
					has_character_modifier = good_power_omen
					has_character_modifier = bad_power_omen
				}
			}

			character_event = {
				id = MNM.1222 # Inform character of own sickness
				days = 5
				random = 5
			}
		}
	}
}

clean_up_horoscope_effect = {
	clr_character_flag = avoided_destiny
	clr_character_flag = horoscope_maker_died
	clr_character_flag = destined_artist
	clr_character_flag = destined_fighter
	clr_character_flag = destined_diplomat
	clr_character_flag = destined_schemer
	clr_character_flag = destined_scholar
	clr_character_flag = encouraged_horoscope_pattern
	clr_character_flag = discouraged_horoscope_pattern
	clr_character_flag = horoscope_child_evaluate
	clr_character_flag = horoscope_path_1
	clr_character_flag = horoscope_maker_is_mother
	clr_character_flag = horoscope_maker_is_father
	remove_character_modifier = horoscope_cooldown
}

# Modifiers received by target during the Hermetics Horoscope Power
set_horoscope_modifier_effect = {
	if = {
		limit = {
			NOT = { has_character_flag = avoided_destiny }
		}

		if = {
			limit = { has_childhood_horoscope_modifier_trigger = yes }

			trigger_switch = {
				on_trigger = has_character_modifier

				guided_by_horoscope_diplomacy = {
					remove_character_modifier = guided_by_horoscope_diplomacy

					add_character_modifier = {
						name = guided_by_horoscope_diplomacy_adult
						years = 7
					}
				}

				guided_by_horoscope_martial = {
					remove_character_modifier = guided_by_horoscope_martial

					add_character_modifier = {
						name = guided_by_horoscope_martial_adult
						years = 7
					}
				}

				guided_by_horoscope_stewardship = {
					remove_character_modifier = guided_by_horoscope_stewardship

					add_character_modifier = {
						name = guided_by_horoscope_stewardship_adult
						years = 7
					}
				}

				guided_by_horoscope_intrigue = {
					remove_character_modifier = guided_by_horoscope_intrigue

					add_character_modifier = {
						name = guided_by_horoscope_intrigue_adult
						years = 7
					}
				}

				guided_by_horoscope_learning = {
					remove_character_modifier = guided_by_horoscope_learning

					add_character_modifier = {
						name = guided_by_horoscope_learning_adult
						years = 7
					}
				}
			}
		}
		else_if = {
			limit = { is_adult = no }

			trigger_switch = {
				on_trigger = has_character_flag

				destined_steward = {
					add_character_modifier = {
						name = guided_by_horoscope_stewardship
						duration = -1
					}
				}

				destined_fighter = {
					add_character_modifier = {
						name = guided_by_horoscope_martial
						duration = -1
					}
				}

				destined_diplomat = {
					add_character_modifier = {
						name = guided_by_horoscope_diplomacy
						duration = -1
					}
				}

				destined_schemer = {
					add_character_modifier = {
						name = guided_by_horoscope_intrigue
						duration = -1
					}
				}

				destined_scholar = {
					add_character_modifier = {
						name = guided_by_horoscope_learning
						duration = -1
					}
				}
			}
		}
	}
	else = {
		if = {
			limit = { has_childhood_horoscope_modifier_trigger = yes }

			trigger_switch = {
				on_trigger = has_character_flag

				destined_steward = {
					if = {
						limit = { has_character_modifier = guided_by_horoscope_stewardship }
						remove_character_modifier = guided_by_horoscope_stewardship
					}

					add_character_modifier = {
						name = horoscope_outcome_jittery
						years = 15
					}
				}

				destined_fighter = {
					if = {
						limit = { has_character_modifier = guided_by_horoscope_martial }
						remove_character_modifier = guided_by_horoscope_martial
					}

					add_character_modifier = {
						name = horoscope_outcome_brute
						years = 15
					}
				}

				destined_diplomat = {
					if = {
						limit = { has_character_modifier = guided_by_horoscope_diplomacy }
						remove_character_modifier = guided_by_horoscope_diplomacy
					}

					add_character_modifier = {
						name = horoscope_outcome_artist
						years = 15
					}
				}

				destined_schemer = {
					if = {
						limit = { has_character_modifier = guided_by_horoscope_intrigue }
						remove_character_modifier = guided_by_horoscope_intrigue
					}

					add_character_modifier = {
						name = horoscope_outcome_arrogant
						years = 15
					}
				}

				destined_scholar = {
					if = {
						limit = { has_character_modifier = guided_by_horoscope_learning }
						remove_character_modifier = guided_by_horoscope_learning
					}

					add_character_modifier = {
						name = horoscope_outcome_scatterbrain
						years = 15
					}
				}
			}
		}
		else = {
			trigger_switch = {
				on_trigger = has_character_flag

				destined_steward = {
					add_character_modifier = {
						name = horoscope_outcome_jittery
						years = 15
					}
				}

				destined_fighter = {
					add_character_modifier = {
						name = horoscope_outcome_brute
						years = 15
					}
				}

				destined_diplomat = {
					add_character_modifier = {
						name = horoscope_outcome_artist
						years = 15
					}
				}

				destined_schemer = {
					add_character_modifier = {
						name = horoscope_outcome_arrogant
						years = 15
					}
				}

				destined_scholar = {
					add_character_modifier = {
						name = horoscope_outcome_scatterbrain
						years = 15
					}
				}
			}
		}
	}
}

increase_astronomical_insights_modifier_effect = {
	custom_tooltip = { text = increase_astronomical_insight_tt }

	trigger_switch = {
		on_trigger = has_character_modifier

		astronomical_insights_1 = {
			hidden_effect = {
				remove_character_modifier = astronomical_insights_1
			}

			add_character_modifier = {
				name = astronomical_insights_2
				duration = -1
			}
		}

		astronomical_insights_2 = {
			hidden_effect = {
				remove_character_modifier = astronomical_insights_2
			}
			add_character_modifier = {
				name = astronomical_insights_3
				duration = -1
			}
		}

		astronomical_insights_3 = {
			hidden_effect = {
				remove_character_modifier = astronomical_insights_3
			}
			add_character_modifier = {
				name = astronomical_insights_4
				duration = -1
			}
		}

		astronomical_insights_4 = {
			# Do nothing
		}

		fallback = {
			add_character_modifier = {
				name = astronomical_insights_1
				duration = -1
			}
		}
	}
}

remove_astronomical_insight_modifier_effect = {
	hidden_effect = {
		remove_character_modifier = astronomical_insights_1
		remove_character_modifier = astronomical_insights_2
		remove_character_modifier = astronomical_insights_3
		remove_character_modifier = astronomical_insights_4
	}
}

add_Aries_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_aries # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = stubborn
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_aries # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = ambitious
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_aries }
			}

			add_trait = zodiac_aries
		}
	}
}

add_Taurus_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_taurus # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = content
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_taurus # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = patient
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_taurus }
			}

			add_trait = zodiac_taurus
		}
	}
}

add_Gemini_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_gemini # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = wroth
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_gemini # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = diligent
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_gemini }
			}

			add_trait = zodiac_gemini
		}
	}
}

add_Cancer_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_cancer # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = honest
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_cancer # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = kind
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_cancer }
			}

			add_trait = zodiac_cancer
		}
	}
}

add_Leo_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_leo # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = cruel
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_leo # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = gregarious
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_leo }
			}

			add_trait = zodiac_leo
		}
	}
}

add_Virgo_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_virgo # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = shy
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_virgo # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = humble
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_virgo }
			}

			add_trait = zodiac_virgo
		}
	}
}

add_Libra_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_libra # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = trusting
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_libra # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = temperate
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_libra }
			}

			add_trait = zodiac_libra
		}
	}
}

add_Scorpius_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_scorpio # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = deceitful
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_scorpio # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = lustful
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_scorpio }
			}

			add_trait = zodiac_scorpio
		}
	}
}

add_Sagittarius_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_sagittarius # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = wroth
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_sagittarius # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = charitable
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_sagittarius }
			}

			add_trait = zodiac_sagittarius
		}
	}
}

add_Capricorn_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_capricorn # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = proud
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_capricorn # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = temperate
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_capricorn }
			}

			add_trait = zodiac_capricorn
		}
	}
}

add_Aquarius_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_aquarius # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = slothful
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_aquarius # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = ambitious
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_aquarius }
			}

			add_trait = zodiac_aquarius
		}
	}
}

add_Pisces_sign_trait_effect = {
	random_list = {
		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_pisces # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = trusting
		}

		10 = {
			trigger = {
				trigger_if = {
					limit = { has_dlc = "Holy Fury" }
					trait = zodiac_pisces # If an hellenic hermetic gets the zodiac event, give the character trait instead
				}
			}

			add_trait = kind
		}

		100 = {
			trigger = {
				has_dlc = "Holy Fury"
				NOT = { trait = zodiac_pisces }
			}

			add_trait = zodiac_pisces
		}
	}
}

add_western_zodiac_trait_effect = {
	custom_tooltip = { text = gain_zodiac_trait_effect_tt }

	if = {
		limit = { is_born_under_Aries_trigger = yes }
		add_trait = zodiac_aries
	}
	else_if = {
		limit = { is_born_under_Taurus_trigger = yes }
		add_trait = zodiac_taurus
	}
	else_if = {
		limit = { is_born_under_Gemini_trigger = yes }
		add_trait = zodiac_gemini
	}
	else_if = {
		limit = { is_born_under_Cancer_trigger = yes }
		add_trait = zodiac_cancer
	}
	else_if = {
		limit = { is_born_under_Leo_trigger = yes }
		add_trait = zodiac_leo
	}
	else_if = {
		limit = { is_born_under_Virgo_trigger = yes }
		add_trait = zodiac_virgo
	}
	else_if = {
		limit = { is_born_under_Libra_trigger = yes }
		add_trait = zodiac_libra
	}
	else_if = {
		limit = { is_born_under_Scorpius_trigger = yes }
		add_trait = zodiac_scorpio
	}
	else_if = {
		limit = { is_born_under_Sagittarius_trigger = yes }
		add_trait = zodiac_sagittarius
	}
	else_if = {
		limit = { is_born_under_Capricorn_trigger = yes }
		add_trait = zodiac_capricorn
	}
	else_if = {
		limit = { is_born_under_Aquarius_trigger = yes }
		add_trait = zodiac_aquarius
	}
	else_if = {
		limit = { is_born_under_Pisces_trigger = yes }
		add_trait = zodiac_pisces
	}
}

# If run once, this will set a flag on ONE ingredient. If run twice, it will set a second flag on another ingredient...
select_random_hermetic_ingredient_herb_effect = {
	# Select first ingredient
	if = {
		limit = { has_selected_ingredient_1_trigger = no }

		random_artifact = {
			limit = { is_ingredient_herb_trigger = yes }
			save_event_target_as = selected_ingredient_1
		}
	}
	# Select second ingredient
	else_if = {
		limit = { has_selected_ingredient_2_trigger = no }

		random_artifact = {
			limit = {
				is_ingredient_herb_trigger = yes
				NOT = { artifact = event_target:selected_ingredient_1 }
			}

			save_event_target_as = selected_ingredient_2
		}
	}
}

select_random_hermetic_ingredient_animal_part_effect = {
	# Select first ingredient
	if = {
		limit = { has_selected_ingredient_1_trigger = no }

		random_artifact = {
			limit = { is_ingredient_animal_part_trigger = yes }
			save_event_target_as = selected_ingredient_1
		}
	}
	# Select second ingredient
	else_if = {
		limit = { has_selected_ingredient_2_trigger = no }

		random_artifact = {
			limit = {
				is_ingredient_animal_part_trigger = yes
				NOT = { artifact = event_target:selected_ingredient_1 }
			}

			save_event_target_as = selected_ingredient_2
		}
	}
}

select_random_hermetic_ingredient_powder_effect = {
	# Select first ingredient
	if = {
		limit = { has_selected_ingredient_1_trigger = no }

		random_artifact = {
			limit = { is_ingredient_powder_trigger = yes }
			save_event_target_as = selected_ingredient_1
		}
	}
	# Select second ingredient
	else_if = {
		limit = { has_selected_ingredient_2_trigger = no }

		random_artifact = {
			limit = {
				is_ingredient_powder_trigger = yes
				NOT = { artifact = event_target:selected_ingredient_1 }
			}

			save_event_target_as = selected_ingredient_2
		}
	}
}

select_random_hermetic_ingredient_liquid_effect = {
	# Select first ingredient
	if = {
		limit = { has_selected_ingredient_1_trigger = no }

		random_artifact = {
			limit = { is_ingredient_liquid_trigger = yes }
			save_event_target_as = selected_ingredient_1
		}
	}
	# Select second ingredient
	else_if = {
		limit = { has_selected_ingredient_2_trigger = no }

		random_artifact = {
			limit = {
				is_ingredient_liquid_trigger = yes
				NOT = { artifact = event_target:selected_ingredient_1 }
			}

			save_event_target_as = selected_ingredient_2
		}
	}
}

# When it doesn't matter if it's a herb/animal part/metal/liquid
select_random_hermetic_ingredient_effect = {
	if = {
		limit = { has_selected_ingredient_1_trigger = no }

		random_artifact = {
			limit = { has_artifact_flag = ingredient }
			save_event_target_as = selected_ingredient_1
		}
	}
	else_if = {
		limit = { has_selected_ingredient_2_trigger = no }

		random_artifact = {
			limit = {
				has_artifact_flag = ingredient
				NOT = { artifact = event_target:selected_ingredient_1 }
			}

			save_event_target_as = selected_ingredient_2
		}
	}
}

### CleanSlate: destroy_artifact = event_target:artifact doesn't work

# For removing the ingredient in question
destroy_selected_ingredient_1_effect = {
	custom_tooltip = {
		text = destroy_selected_ingredient_1_tt
		event_target:selected_ingredient_1 = { destroy_artifact = yes }
	}
}

# For removing the ingredient in question
destroy_selected_ingredient_2_effect = {
	custom_tooltip = {
		text = destroy_selected_ingredient_2_tt
		event_target:selected_ingredient_2 = { destroy_artifact = yes }
	}
}

# For removing both selected ingredients
destroy_selected_ingredient_1_and_2_effect = {
	custom_tooltip = {
		text = destroy_selected_ingredient_1_and_2_tt

		event_target:selected_ingredient_1 = { destroy_artifact = yes }
		event_target:selected_ingredient_2 = { destroy_artifact = yes }
	}
}

# For removing the ingredient in question PLUS a random other one (unnamed in tooltip)
destroy_selected_ingredient_1_plus_random_other_ingredient_effect = {
	custom_tooltip = {
		text = destroy_selected_ingredient_1_plus_random_other_ingredient_tt

		event_target:selected_ingredient_1 = { destroy_artifact = yes }

		random_artifact = {
			limit = { has_artifact_flag = ingredient }
			destroy_artifact = yes
		}
	}
}

destroy_random_herb_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_herb_trigger = yes
		}

		destroy_artifact = yes
	}
}

destroy_random_animal_part_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_animal_part_trigger = yes
		}

		destroy_artifact = yes
	}
}

destroy_random_powder_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_powder_trigger = yes
		}

		destroy_artifact = yes
	}
}

destroy_random_liquid_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_liquid_trigger = yes
		}

		destroy_artifact = yes
	}
}

destroy_random_herb_or_animal_part_ingredients_effect = {
	hidden_effect = {
		random_list = {
			5 = {
				trigger = { has_a_herb_ingredient_trigger = yes }
				destroy_random_herb_ingredient_effect = yes
			}

			5 = {
				trigger = { has_an_animal_part_ingredient_trigger = yes }
				destroy_random_animal_part_ingredient_effect = yes
			}

			20 = {
				trigger = {
					any_artifact = {
						count >= 2
						is_ingredient_herb_trigger = yes
						has_artifact_flag = ingredient
					}
				}

				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
			}

			20 = {
				trigger = {
					any_artifact = {
						count >= 2
						is_ingredient_animal_part_trigger = yes
						has_artifact_flag = ingredient
					}
				}

				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}

			20 = {
				trigger = {
					has_a_herb_ingredient_trigger = yes
					has_an_animal_part_ingredient_trigger = yes
				}

				destroy_random_herb_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}

			20 = {
				trigger = {
					any_artifact = {
						count >= 3
						is_ingredient_herb_trigger = yes
						has_artifact_flag = ingredient
					}
				}

				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
			}

			20 = {
				trigger = {
					any_artifact = {
						count >= 3
						is_ingredient_animal_part_trigger = yes
						has_artifact_flag = ingredient
					}
				}

				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}

			50 = {
				trigger = {
					any_artifact = {
						count >= 2
						is_ingredient_herb_trigger = yes
						has_artifact_flag = ingredient
					}

					has_an_animal_part_ingredient_trigger = yes
				}

				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}

			50 = {
				trigger = {
					any_artifact = {
						count >= 2
						is_ingredient_animal_part_trigger = yes
						has_artifact_flag = ingredient
					}

					has_a_herb_ingredient_trigger = yes
				}

				destroy_random_herb_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}
		}
	}
}

destroy_random_ingredients_effect = {
	custom_tooltip = {
		text = random_ingredients_are_destroyed_tt

		random_list = {
			5 = {
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
			}

			50 = {
				trigger = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
				}

				while = {
					count = 2

					random_artifact = {
						limit = { has_artifact_flag = ingredient }
						destroy_artifact = yes
					}
				}
			}

			100 = {
				trigger = {
					any_artifact = {
						count >= 3
						has_artifact_flag = ingredient
					}
				}

				while = {
					count = 3

					random_artifact = {
						limit = { has_artifact_flag = ingredient }
						destroy_artifact = yes
					}
				}
			}

			150 = {
				trigger = {
					any_artifact = {
						count >= 4
						has_artifact_flag = ingredient
					}
				}

				while = {
					count = 4

					random_artifact = {
						limit = { has_artifact_flag = ingredient }
						destroy_artifact = yes
					}
				}
			}
		}
	}
}

destroy_all_ingredients_effect = {
	custom_tooltip = {
		text = destroy_all_ingredients_tt

		any_artifact = {
			limit = { has_artifact_flag = ingredient }
			destroy_artifact = yes
		}
	}
}

calculate_health_level_of_ingredient_1_effect = {
	hidden_effect = {
		set_variable = { # Reset potion quality
			which = local_current_potion_quality
			value = 0
		}

		if = {
			limit = {
				event_target:selected_ingredient_1 = {
					ingredient_is_perceived_healthy_trigger = yes
				}
			}

			change_variable = {
				which = local_current_potion_quality
				value = 1
			}
		}

		else_if = {
			limit = {
				event_target:selected_ingredient_1 = {
					ingredient_is_unhealthy_trigger = yes
				}
			}

			change_variable = {
				which = local_current_potion_quality
				value = -1
			}
		}
	}
}

calculate_health_level_of_ingredient_2_effect = {
	hidden_effect = {
		set_variable = { # Reset potion quality
			which = local_current_potion_quality
			value = 0
		}

		if = {
			limit = {
				event_target:selected_ingredient_2 = {
					ingredient_is_perceived_healthy_trigger = yes
				}
			}

			change_variable = {
				which = local_current_potion_quality
				value = 1
			}
		}
		if = {
			limit = {
				event_target:selected_ingredient_2 = {
					ingredient_is_unhealthy_trigger = yes
				}
			}

			change_variable = {
				which = local_current_potion_quality
				value = -1
			}
		}
	}
}

calculate_health_level_of_ingredient_1_and_2_effect = {
	hidden_effect = {
		set_variable = { # Reset potion quality
			which = local_current_potion_quality
			value = 0
		}

		calculate_health_level_of_ingredient_1_effect = yes
		calculate_health_level_of_ingredient_2_effect = yes
	}
}

calculate_health_level_of_all_ingredients_effect = {
	hidden_effect = {
		any_artifact = {
			limit = { has_artifact_flag = ingredient }

			if = {
				limit = { ingredient_is_perceived_healthy_trigger = yes }

				change_variable = {
					which = local_current_potion_quality
					value = 1
				}
			}
			else_if = {
				limit = { ingredient_is_unhealthy_trigger = yes }

				change_variable = {
					which = local_current_potion_quality
					value = -1
				}
			}
		}
	}
}

hermetics_upgrade_scandal_effect = {
	trigger_switch = {
		on_trigger = has_character_flag

		hermetics_major_scandal = {
			clr_character_flag = hermetics_major_scandal
			character_event = { id = MNM.1481 }
		}

		hermetics_minor_scandal = {
			clr_character_flag = hermetics_minor_scandal
			set_character_flag = hermetics_major_scandal
		}

		fallback = {
			set_character_flag = hermetics_minor_scandal
		}
	}
}