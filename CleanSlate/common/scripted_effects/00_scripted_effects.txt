# end_inaccessibility_effect

# will_not_marry_effect

# add_cat_effect
# add_pet_owl_effect

# random_accident_death_effect

# print_scope_effect

# raiding_adventurer_war_declaration_effect

# save_beloved_character_effect

# transfer_crown_on_abdication_effect

# stable_attribute_improvement_effect

# give_random_character_modifier_effect
# assign_random_nickname_effect

# setup_province_pulse

end_inaccessibility_effect = {
	if = {
		limit = { trait = in_hiding }

		remove_trait = in_hiding
		clr_character_flag = do_not_disturb

		add_character_modifier = {
			name = went_out_of_hiding_timer
			months = 6
			hidden = yes
		}

		character_event = { id = CM.6400 } # Notify plotters and family
	}

	if = {
		limit = { in_seclusion = yes }

		remove_character_modifier = in_seclusion

		if = {
			limit = { is_ruler = yes }

			add_character_modifier = {
				name = recently_opened_gates
				years = 1
			}

			custom_tooltip = {
				text = open_the_gates_info_tooltip

				clr_character_flag = do_not_disturb
				clr_character_flag = exposed_to_outside
				clr_character_flag = seclusion_piling_corpses
				clr_character_flag = seclusion_lazy_seduction
				clr_character_flag = seclusion_nightmares
				clr_character_flag = seclusion_gained_friend
				clr_character_flag = seclusion_child_has_lover
				clr_character_flag = seclusion_tunnel
				clr_character_flag = seclusion_food_events
				clr_character_flag = seclusion_events_on

				character_event = {
					id = RIP.11557 # Clears starvation modifiers
					days = 40
					random = 20
				}

				any_courtier = {
					clr_character_flag = seclusion_events_on
					remove_character_modifier = in_seclusion

					character_event = {
						id = RIP.11557 # Clears starvation modifiers
						days = 40
						random = 20
					}
				}

				any_vassal = {
					limit = {
						is_voter = yes
						is_landed = yes
						in_seclusion = no

						host = {
							NOT = { character = ROOT }
						}
					}

					force_host = ROOT
				}
			}

			if = { # Rejoin your liege's court if both of you are not in seclusion
				limit = {
					is_voter = yes

					liege = {
						in_seclusion = no
					}
				}

				force_host = liege
			}
		}
	}
}

will_not_marry_effect = {
	add_character_modifier = {
		name = will_not_marry
		duration = -1
	}

	add_trait = cannot_marry
}

add_cat_effect = {
	if = {
		limit = {
			NOT = { has_character_modifier = pet_cat }
		}

		add_character_modifier = {
			name = pet_cat
			duration = -1
		}

		character_event = {
			id = 77802 # Cat dies
			days = 3000
			random = 2000
		}

		character_event = {
			id = 77861 # Cat & dog
			days = 30
			random = 100
		}
	}
}

add_pet_owl_effect = {
	add_character_modifier = {
		name = pet_owl
		duration = -1
	}

	character_event = {
		id = 77800 # Owl dies
		days = 3500
		random = 2000
	}
}

random_accident_death_effect = {
	tooltip = {
		death = {
			death_reason = death_accident
		}
	}

	random_list = {
		10 = {
			trigger = {
				host = {
					capital_scope = {
						NOT = { region = world_africa }
					}
				}
			}

			death = {
				death_reason = death_accident_drowning
			}
		}

		10 = {
			trigger = {
				host = {
					capital_scope = {
						NOT = { region = world_africa }
					}
				}
			}

			death = {
				death_reason = death_accident_bear
			}
		}

		10 = {
			death = {
				death_reason = death_accident_boar
			}
		}

		10 = {
			death = {
				death_reason = death_accident_fall
			}
		}

		10 = {
			death = {
				death_reason = death_accident_arrow
			}
		}

		10 = {
			death = {
				death_reason = death_accident_snakes
			}
		}

		10 = {
			trigger = {
				host = {
					capital_scope = {
						region = world_india
					}
				}
			}

			death = {
				death_reason = death_accident_tiger
			}
		}
	}
}

print_scope_effect = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

# Raiding adventurer war declaration effect
raiding_adventurer_war_declaration_effect = {
	custom_tooltip = {
		text = raiding_adventurer_war_declaration_tooltip

		event_target:selling_province = {
			duchy = {
				save_event_target_as = target_duchy
			}

			event_target:raiding_adventurer = {
				unsafe_war = {
					target = PREVPREV
					casus_belli = duchy_adventure
					thirdparty_title = event_target:target_duchy
				}

				any_army = {
					set_can_toggle_looting = yes
					set_looting = no
				}
			}
		}

		clr_character_flag = adventurer_unsafe_duchy_war
		clr_character_flag = adventurer_safe_duchy_war
		clr_character_flag = negotiating_with_adventurer

		event_target:raiding_adventurer = {
			clr_character_flag = raiding_adventurer
		}
	}
}

# Find someone to reference... (event_target:my_beloved)
# NOTE: might be platonic, children, etc
save_beloved_character_effect = {
	if = {
		limit = { # In case you have a spouse outside of your realm...
			is_married = yes

			any_spouse = {
				is_landed = yes
				ROOT_possibly_romantically_interested_trigger = yes
				root_has_terrible_opinion_modifier_of_this_trigger = no
			}
		}

		random_spouse = {
			limit = {
				is_landed = yes
				ROOT_possibly_romantically_interested_trigger = yes
				root_has_terrible_opinion_modifier_of_this_trigger = no
			}

			save_event_target_as = my_beloved
		}
	}
	else = { # In case you do not...
		any_courtier_or_vassal = {
			limit = {
				NOR = {
					character = event_target:enemy_commander
					character = event_target:enemy_liege
				}
			}

			score_value = {
				value = 1
				beloved_target_selection_score = yes
			}

			# Effect:
			save_event_target_as = my_beloved
		}
	}
}

transfer_crown_on_abdication_effect = {
	current_heir = {
		save_event_target_as = crown_heir
	}

	any_artifact = {
		limit = {
			trigger_if = {
				limit = { artifact_type = crown_hre }
				PREV = { has_landed_title = e_hre }
			}

			trigger_if = {
				limit = { artifact_type = crown_byzantine }
				PREV = {
					OR = {
						has_landed_title = e_byzantium
						has_landed_title = event_target:alternate_byz
					}
				}
			}

			trigger_if = {
				limit = { artifact_type = crown_pahlavi }
				PREV = { has_landed_title = e_persia }
			}

			trigger_if = {
				limit = { artifact_type = crown_fylkir }
				PREV = { has_landed_title = d_norse_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = crown_tengri_fylkir }
				PREV = { has_landed_title = d_tengri_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = crown_slavic_fylkir }
				PREV = { has_landed_title = d_slavic_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = crown_romuva_fylkir }
				PREV = { has_landed_title = d_baltic_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = crown_finnish_fylkir }
				PREV = { has_landed_title = d_finnish_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = crown_west_african_fylkir }
				PREV = { has_landed_title = d_west_african_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = crown_zun_fylkir }
				PREV = { has_landed_title = d_zun_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = scepter_bon_fylkir }
				PREV = { has_landed_title = d_bon_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = crown_aztec_fylkir }
				PREV = { has_landed_title = d_aztec_pagan_reformed }
			}

			trigger_if = {
				limit = { artifact_type = scepter_hellenic_fylkir }
				PREV = { has_landed_title = k_hellenic_pagan_reformed }
			}

		}

		transfer_artifact = {
			from = PREV
			to = event_target:crown_heir
		}
	}

	# Now transfer all other remaining artifacts to the player_heir, who may or may not be the current_heir
	player_heir = {
		save_event_target_as = scoped_player_heir
	}

	any_artifact = {
		limit = {
			NOR = {
				artifact_type = crown_hre
				artifact_type = crown_byzantine
				artifact_type = crown_pahlavi
				artifact_type = crown_fylkir
				artifact_type = crown_tengri_fylkir
				artifact_type = crown_slavic_fylkir
				artifact_type = crown_romuva_fylkir
				artifact_type = crown_finnish_fylkir
				artifact_type = crown_west_african_fylkir
				artifact_type = crown_zun_fylkir
				artifact_type = scepter_bon_fylkir
				artifact_type = crown_aztec_fylkir
				artifact_type = scepter_hellenic_fylkir
			}
		}

		transfer_artifact = {
			from = PREV
			to = event_target:scoped_player_heir
		}
	}
}

# Chance of Education trait improvement or burnout case
stable_attribute_improvement_effect = {
	hidden_effect = {
		event_target:scoped_improvement_target = {
			random_list = {
				20 = { # Education improvement
					trigger = {
						has_character_flag = flag_training_diplomacy_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
						}

						OR = {
							trait = naive_appeaser
							trait = underhanded_rogue
							trait = charismatic_negotiator
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						event_target:scoped_improvement_ruler = {
							attribute_diff = {
								attribute = diplomacy
								character = event_target:scoped_improvement_target
								value >= 3
							}
						}
					}

					mult_modifier = {
						factor = 1.5

						event_target:scoped_improvement_ruler = {
							attribute_diff = {
								attribute = diplomacy
								character = event_target:scoped_improvement_target
								value >= 6
							}
						}
					}

					mult_modifier = {
						factor = 1.75

						event_target:scoped_improvement_ruler = {
							attribute_diff = {
								attribute = diplomacy
								character = event_target:scoped_improvement_target
								value >= 9
							}
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						OR = {
							has_character_flag = flag_training_martial_attribute
							has_character_flag = flag_training_combat_rating
						}

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
						}

						OR = {
							trait = misguided_warrior
							trait = tough_soldier
							trait = skilled_tactician
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = martial
							character = event_target:scoped_improvement_ruler
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = martial
							character = event_target:scoped_improvement_ruler
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = martial
							character = event_target:scoped_improvement_ruler
							value <= 9
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						has_character_flag = flag_training_stewardship_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
						}

						OR = {
							trait = indulgent_wastrel
							trait = thrifty_clerk
							trait = fortune_builder
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = stewardship
							character = event_target:scoped_improvement_target
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = stewardship
							character = event_target:scoped_improvement_target
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = stewardship
							character = event_target:scoped_improvement_target
							value <= 9
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						has_character_flag = flag_training_intrigue_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
						}

						OR = {
							trait = amateurish_plotter
							trait = flamboyant_schemer
							trait = intricate_webweaver
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = intrigue
							character = event_target:scoped_improvement_target
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = intrigue
							character = event_target:scoped_improvement_target
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = intrigue
							character = event_target:scoped_improvement_target
							value <= 9
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						has_character_flag = flag_training_learning_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
						}

						OR = {
							trait = detached_priest
							trait = dutiful_cleric
							trait = scholarly_theologian
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5
						event_target:scoped_improvement_ruler = {
							has_religion_feature = religion_meritocratic # More pressure
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = learning
							character = event_target:scoped_improvement_target
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = learning
							character = event_target:scoped_improvement_target
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = learning
							character = event_target:scoped_improvement_target
							value <= 9
						}
					}
				}

				20 = { # Burnout
					trigger = {
						check_variable = {
							which = burnout_count
							value >= 1 # Never first time
						}
					}

					character_event = {
						id = HF.23762
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						check_variable = {
							which = burnout_count
							value >= 2
						}
					}

					mult_modifier = {
						factor = 1.5

						check_variable = {
							which = burnout_count
							value >= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						check_variable = {
							which = burnout_count
							value >= 4
						}
					}

					mult_modifier = {
						factor = 1.75

						check_variable = {
							which = burnout_count
							value >= 5
						}
					}

					mult_modifier = {
						factor = 2

						check_variable = {
							which = burnout_count
							value >= 8
						}
					}

					mult_modifier = {
						factor = 2

						check_variable = {
							which = burnout_count
							value >= 12
						}
					}

					mult_modifier = {
						factor = 1.5
						trait = slothful
					}

					mult_modifier = {
						factor = 1.5
						trait = stressed
					}

					mult_modifier = {
						factor = 1.75
						trait = depressed
					}

					mult_modifier = {
						factor = 1.5
						is_ill = yes
					}

					mult_modifier = {
						factor = 0.75
						trait = diligent
					}
				}

				80 = {
					# Nothing
				}
			}
		}
	}
}

give_random_character_modifier_effect = {
	random_list = {
		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_poet }
			}

			add_character_modifier = {
				name = aspiring_poet
				years = 5
			}

			mult_modifier = {
				factor = 2
				learning >= 12
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_duelist }
			}

			add_character_modifier = {
				name = aspiring_duelist
				years = 5
			}

			mult_modifier = {
				factor = 2
				martial >= 12
			}

			mult_modifier = {
				factor = 2

				OR = {
					duelist_skill_is_medium_group_trigger = yes
					duelist_skill_is_high_group_trigger = yes
				}
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_hunter }
			}

			add_character_modifier = {
				name = aspiring_hunter
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_falconer }
			}

			add_character_modifier = {
				name = aspiring_falconer
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = learning_advice }
			}

			add_character_modifier = {
				name = learning_advice
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = slept_in_church }
			}

			add_character_modifier = {
				name = slept_in_church
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = drunkard
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = gambler }
			}

			add_character_modifier = {
				name = gambler
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = whoremaster }
			}

			add_character_modifier = {
				name = whoremaster
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = lustful
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_deeds }
			}

			add_character_modifier = {
				name = good_deeds
				years = 5
			}

			mult_modifier = {
				factor = 1.5
				is_benevolent_trigger = yes
			}

			mult_modifier = {
				factor = 1.5
				has_pleasant_personality_trigger = yes
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = proving_bravery }
			}

			add_character_modifier = {
				name = proving_bravery
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = brave
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = suspected_coward }
			}

			add_character_modifier = {
				name = suspected_coward
				years = 5
			}

			mult_modifier = {
				factor = 0.5
				trait = brave
			}
		}

		5 = {
			trigger = {
				NOT = { has_character_modifier = speaking_in_tounges }
			}

			add_character_modifier = {
				name = speaking_in_tounges
				years = 5
			}

			mult_modifier = {
				factor = 4
				trait = lunatic
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_times }
			}

			add_character_modifier = {
				name = good_times
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_hunt }
			}

			add_character_modifier = {
				name = good_hunt
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = hunter
			}
		}

		5 = {
			trigger = {
				NOT = { has_character_modifier = epic_hangover }
			}

			add_character_modifier = {
				name = epic_hangover
				years = 5
			}

			mult_modifier = {
				factor = 4
				trait = drunkard
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = weird_scholar }
			}

			add_character_modifier = {
				name = weird_scholar
				years = 5
			}

			mult_modifier = {
				factor = 2
				learning >= 12
			}
		}

		100 = {
			trigger = {
				has_lover = yes
				NOT = { has_character_modifier = comfort_of_lover }
			}

			add_character_modifier = {
				name = comfort_of_lover
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = sleep_deprivation }
			}

			add_character_modifier = {
				name = sleep_deprivation
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_cat }
			}

			add_character_modifier = {
				name = pet_cat
				years = 5
			}

			random_list = {
				25 = {
					trigger = { is_female = yes }

					add_character_modifier = {
						name = crazy_cat_lady
						years = 5
					}
				}

				25 = {
					trigger = { is_female = no }

					add_character_modifier = {
						name = crazy_cat_lord
						years = 5
					}
				}

				50 = { } # Nothing
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = invigorated }
			}

			add_character_modifier = {
				name = invigorated
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_listener }
			}

			add_character_modifier = {
				name = good_listener
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = confident }
			}

			add_character_modifier = {
				name = confident
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = bad_person }
				is_benevolent_trigger = no
				has_pleasant_personality_trigger = no
			}

			add_character_modifier = {
				name = bad_person
				years = 5
			}

			mult_modifier = {
				factor = 2

				OR = {
					is_evil_trigger = yes
					has_unpleasant_personality_trigger = yes
				}
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_parrot }
			}

			add_character_modifier = {
				name = pet_parrot
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_owl }
			}

			add_character_modifier = {
				name = pet_owl
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = taking_it_easy }
			}

			add_character_modifier = {
				name = taking_it_easy
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = slothful
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = fell_into_the_river }
			}

			add_character_modifier = {
				name = fell_into_the_river
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = green_fingers }
			}

			add_character_modifier = {
				name = green_fingers
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_house_dog }
			}

			add_character_modifier = {
				name = pet_house_dog
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_hedgehog }
			}

			add_character_modifier = {
				name = pet_hedgehog
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_otter }
			}

			add_character_modifier = {
				name = pet_otter
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = bad_nights_sleep }
			}

			add_character_modifier = {
				name = bad_nights_sleep
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_nights_sleep }
			}

			add_character_modifier = {
				name = good_nights_sleep
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = well_spoken }
			}

			add_character_modifier = {
				name = well_spoken
				years = 5
			}

			mult_modifier = {
				factor = 2
				diplomacy >= 12
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = jumbling_words }
			}

			add_character_modifier = {
				name = jumbling_words
				years = 5
			}

			mult_modifier = {
				factor = 2
				diplomacy < 8
			}
		}

		100 = {
			trigger = {
				has_injury_trigger = no
			}

			apply_random_minor_injury_effect = yes
		}
	}
}

assign_random_nickname_effect = {
	random_list = {
		10 = { give_nickname = nick_the_unlucky }
		10 = { give_nickname = nick_the_lucky }
		10 = { give_nickname = nick_the_careless }
		10 = { give_nickname = nick_the_jittery }
		10 = { give_nickname = nick_the_dry_throat }
		10 = { give_nickname = nick_the_messy }
		10 = { give_nickname = nick_the_feeble }
		10 = { give_nickname = nick_the_red_cheeks }
		10 = { give_nickname = nick_the_blushing }
		10 = { give_nickname = nick_the_twitchy }

		10 = {
			trigger = { trait = brave }

			random_list = {
				10 = { give_nickname = nick_the_brave }
				10 = { give_nickname = nick_the_fearless }
			}
		}

		5 = {
			give_nickname = nick_the_clueless

			mult_modifier = {
				factor = 4
				learning < 6
			}
		}

		10 = {
			give_nickname = nick_the_ill_tempered

			mult_modifier = {
				factor = 4

				OR = {
					is_evil_trigger = yes
					has_unpleasant_personality_trigger = yes
				}
			}
		}

		10 = {
			give_nickname = nick_the_affable

			mult_modifier = {
				factor = 4

				OR = {
					has_pleasant_personality_trigger = yes
					is_pious_trigger = yes
				}
			}
		}

		10 = {
			trigger = { practical_age < 30 }

			give_nickname = nick_the_youthful
		}

		5 = {
			give_nickname = nick_the_beguiling

			mult_modifier = {
				factor = 4
				is_attractive_trigger = yes
			}
		}

		10 = {
			trigger = { trait = lustful }

			give_nickname = nick_the_lewd
		}

		5 = {
			give_nickname = nick_the_unchaste

			mult_modifier = {
				factor = 4
				trait = lustful
			}

			mult_modifier = {
				factor = 2
				has_lover = yes
			}
		}

		5 = {
			trigger = {
				uses_decadence = yes
				decadence >= 50
			}

			give_nickname = nick_the_decadent

			mult_modifier = {
				factor = 4
				decadence >= 70
			}
		}

		10 = {
			trigger = { has_unpleasant_personality_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_shrewd }
				10 = { give_nickname = nick_the_wily }
			}
		}

		10 = {
			trigger = { has_pleasant_personality_trigger = yes }

			give_nickname = nick_the_jolly
		}

		10 = {
			trigger = { has_pleasant_personality_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_gracious }
				10 = { give_nickname = nick_the_kind }
				10 = { give_nickname = nick_the_good }
			}
		}

		10 = {
			trigger = { trait = patient }

			random_list = {
				10 = { give_nickname = nick_the_tenacious }
				10 = { give_nickname = nick_the_mule }
			}
		}

		5 = {
			give_nickname = nick_the_strange

			mult_modifier = {
				factor = 4
				has_mental_disorder_trigger = yes
			}
		}

		10 = {
			trigger = { is_weak_trigger = yes }

			give_nickname = nick_the_clumsy
		}

		10 = {
			trigger = { is_impious_trigger = yes }

			give_nickname = nick_the_evil
		}

		10 = {
			trigger = { is_strong_trigger = yes }

			give_nickname = nick_the_strong
		}

		10 = {
			give_nickname = nick_the_merry

			mult_modifier = {
				factor = 2
				has_pleasant_personality_trigger = yes
			}
		}

		10 = {
			give_nickname = nick_the_gentle

			mult_modifier = {
				factor = 2
				has_pleasant_personality_trigger = yes
			}
		}

		10 = {
			trigger = { trait = proud }

			give_nickname = nick_the_proud
		}

		10 = {
			trigger = { trait = shy }

			give_nickname = nick_the_silent
		}

		10 = {
			trigger = { trait = chaste }

			give_nickname = nick_the_chaste
		}

		10 = {
			trigger = {
				is_female = no
				is_attractive_trigger = yes
			}

			random_list = {
				10 = { give_nickname = nick_the_handsome }
				10 = { give_nickname = nick_the_vain }
			}
		}

		10 = {
			trigger = {
				is_female = yes
				is_attractive_trigger = yes
			}

			random_list = {
				10 = { give_nickname = nick_the_fair }
				10 = { give_nickname = nick_the_vain }
				10 = { give_nickname = nick_the_flower }
			}
		}

		10 = {
			trigger = { is_unattractive_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_hideous }
				10 = { give_nickname = nick_the_frog }
				10 = { give_nickname = nick_the_repulsive }
			}
		}

		10 = {
			trigger = { trait = lunatic }

			give_nickname = nick_the_mad
		}

		10 = {
			trigger = { trait = drunkard }

			give_nickname = nick_the_drunkard
		}

		10 = {
			trigger = { learning >= 10 }

			give_nickname = nick_the_wise

			mult_modifier = {
				factor = 2
				learning >= 14
			}
		}

		10 = {
			trigger = { is_pious_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_pious }
				10 = { give_nickname = nick_the_blessed }
			}
		}

		10 = {
			trigger = { practical_age < 25 }

			give_nickname = nick_the_young
		}

		10 = {
			trigger = { practical_age >= 50 }

			give_nickname = nick_the_old
		}

		10 = {
			trigger = { learning >= 10 }

			random_list = {
				10 = { give_nickname = nick_the_scholar }
				10 = { give_nickname = nick_the_understanding }
				10 = { give_nickname = nick_the_healer }
			}
		}

		10 = {
			trigger = { combat_rating >= 10 }

			give_nickname = nick_the_oakskin
		}

		10 = {
			trigger = { trait = slothful }

			give_nickname = nick_the_sleepy
		}

		10 = {
			trigger = { base_health < 3 }

			random_list = {
				10 = { give_nickname = nick_butter_teeth }
				10 = { give_nickname = nick_the_toothless }
			}
		}

		10 = {
			trigger = { trait = craven }

			random_list = {
				10 = { give_nickname = nick_the_cowardly }
				10 = { give_nickname = nick_the_squirmy }
			}
		}

		10 = {
			trigger = { trait = paranoid }

			give_nickname = nick_the_frantic
		}

		10 = {
			trigger = {
				NOR = {
					trait = genius
					trait = quick
				}
			}

			random_list = {
				10 = { give_nickname = nick_the_thin_minded }
				10 = { give_nickname = nick_the_forgetful }
			}

			mult_modifier = {
				factor = 4

				OR = {
					trait = imbecile
					trait = slow
				}
			}
		}

		10 = {
			trigger = {
				NOT = { trait = gregarious }
			}

			give_nickname = nick_the_recluse

			mult_modifier = {
				factor = 2
				trait = shy
			}
		}

		10 = {
			trigger = { trait = wroth }

			give_nickname = nick_the_short_tempered
		}

		10 = {
			trigger = {
				NOT = { trait = content }
			}

			give_nickname = nick_the_whiner
		}

		10 = {
			trigger = {
				trait = deceitful
			}

			give_nickname = nick_the_liar
		}
	}
}

setup_province_pulse = {
	if = {
		limit = {
			independent = yes
			NOT = { has_global_flag = pulse_province_set }
		}

		random_province = {
			limit = { has_owner = yes }

			set_province_flag = pulse_province
			save_global_event_target_as = pulse_province
			log = "[This.GetName] (ID [This.GetID]) is the pulse province"
		}

		set_global_flag = pulse_province_set
	}
}
